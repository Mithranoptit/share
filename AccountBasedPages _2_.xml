<?xml version="1.0" encoding="UTF-8"?>
<!--$Id$-->
<AccountBasedPages>

      <Page className="org.apache.jsp.jsp.HomePage_jsp">

        <Parameters>
            <Param Name="viewType" Value="serviceCatalog" />
            <HeaderAccount>
                <PageFormName>reportForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>refreshServiceCatalogView()</Onchange>
                <StyleClass>formStyle</StyleClass>
                <Script>

                function refreshServiceCatalogView()
                {
                    var tm = new Date().getTime();
                    window.location.href="/HomePage.do?viewType=serviceCatalog&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;time="+tm;
                }
                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <HeaderAccount>
             <ShowAllAccounts>true</ShowAllAccounts>
             <Disabled>true</Disabled>
        </HeaderAccount>
        </Parameters>
    </Page>
        <Page className="org.apache.jsp.setup.OrgDef_jsp">
                <HeaderAccount>
                        <ShowAllAccounts>true</ShowAllAccounts>
                        <Disabled>true</Disabled>
                        <i18nKey>sdp.msp.invalid.supportemail.error</i18nKey>
                        <i18nKey>sdp.msp.admin.account.enter.email</i18nKey>
                        <i18nKey>sdp.msp.select.defSite</i18nKey>
                        <StyleClass>accountStyleDisabled</StyleClass>
                        <Script>
                            setAllAccounts();
                            var sdpFP = document.OrgDefForm.updateButton.onclick;
                            document.OrgDefForm.updateButton.onclick = function () {
                                    if(!sdpFP()){
                                    return false;
                                    }
                                    if(!validateEmailId(document.OrgDefForm.supportMailAddress,getMessageForKey("sdp.msp.invalid.supportemail.error"),false, getMessageForKey("sdp.msp.admin.account.enter.email"))) {
                                            return false;
                                    }
                                    var dSite=document.getElementById('updateAcc').value;
                                    if(dSite==-1)
                                    {
                                            alert(getMessageForKey("sdp.msp.select.defSite"));
                                            return false;
                                    }
                            }
                        </Script>
                </HeaderAccount>
        </Page>
    <Page className="org.apache.jsp.asset.AssetListView_jsp">
        <HeaderAccount>
            <PageFormName>AssetListViewAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
        	<Onchange>refreshAssetsView()</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
            <i18nKey>sdp.purchase.reconcile.label</i18nKey>
            <Script>
			function refreshAssetsView() {
				var ciTId = null;
                if(document.getElementById('ciTypeId') != null)
                {
                        ciTId = document.getElementById('ciTypeId').value;
                }
                var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value + "&amp;SelectedComponentType="+document.getElementsByName("componentType")[0].value + '&amp;ciTypeId=' + ciTId + '&amp;fromTab=assetTab';
				var viewName = parent.ROOT_VIEW_ID;
				updateState(viewName,"_D_RP", newVal);
				updateState(viewName, "_PN", null);
				refreshSubView(viewName);
			}
			function formSubmit(form, additionalParams) {
				if($("__persistentAccountId__select").value == "0") {
					alert(getMessageForKey("sdp.msp.selectAccount.error"));
					return false;
				}
				form.action = form.action + additionalParams + "&amp;typeId=" +'__java("TypeID")' ;
				if( document.getElementById('ciTypeId') != undefined ) {
					form.action = form.action + '&amp;ciTypeId=' + document.getElementById('ciTypeId').value;
				}
				form.submit();
				return true;
			}
			setMSPReconcileFn();
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.Asset_jsp">
	
        <Parameters>
     	<Param Name="module" Value="workstations" />
		<HeaderAccount>
            <PageFormName>AssetListViewAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
        	<Onchange>refreshAssetsView();</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
        </HeaderAccount>
		</Parameters>
		<Parameters>
     	<Param Name="module" Value="virtual_hosts" />
		<HeaderAccount>
            <PageFormName>AssetListViewAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
        	<Onchange>refreshAssetsView();</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
        </HeaderAccount>
		</Parameters>
		<Parameters>
     	<Param Name="module" Value="virtual_machines" />
		<HeaderAccount>
            <PageFormName>AssetListViewAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
        	<Onchange>refreshAssetsView();</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
        </HeaderAccount>
		</Parameters>
		<Parameters>
			 <Param Name="module" Value="assets" />
		<HeaderAccount>
            <PageFormName>AssetListViewAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
        	<Onchange>refreshAssetsView();</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
        </HeaderAccount>
		</Parameters>
		
		<Parameters>
			 <Param Name="module" Value="null" />
			 <AccountDisplay>
            <QueryParam>entity_id</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="ResourceLocation">
                        <Column TableName="ResourceLocation" ColumnName="SITEID" />
                        <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                        <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
		<HeaderAccount>
			<StyleClass>accountStyleDisabled</StyleClass>
			<Disabled>true</Disabled>
			<ShowAllAccounts>true</ShowAllAccounts>
		</HeaderAccount>
		</Parameters>
	</Page>
	<Page className="org.apache.jsp.loan.AssetLoanListView_jsp">
        <HeaderAccount>
            <PageFormName>AssetLoanListViewAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
        	<Onchange>refreshAssetsView()</Onchange>
            <Script>
			function refreshAssetsView() {
			var params = '{"module": "site","showAllSite":"true","dropdownLength":"25", "defaultDropdownData" :{"id" : -1, "text" : "'+getMessageForKey("ae.contract.resource.filter.allSites")+'"}}'; //NO I18N
				updateSelect2Dropdown({ elementId:'loanSite', // no i18n
					selectedData: {"id" : -1, "text" : getMessageForKey("ae.contract.resource.filter.allSites")},//NO I18N
                    isOnChangeEventRequired : true,
                    params: params});
			}
			
            </Script>
        </HeaderAccount>
    </Page>
    <!-- Add new AccessPoint, Printer, Router, Switch, Firewall, Rack, StorageDevice, Projector, Scanner, Keyboard START -->
    <Page className="org.apache.jsp.asset.AssetDefForCIs_jsp">
        <Parameters>
            <Param Name="newAsset" Value="true"/>
	        <HeaderAccount>
	            <PageFormName>AssetDefForm</PageFormName>
	            <StyleClass>formStyle</StyleClass>
	            <DependentElement>document.AssetDefForm.usersites</DependentElement>
	            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
	            <PostAjaxFunction>updateAccAssets(),toggleUserAccVisibility();</PostAjaxFunction>
				<Onchange>updateSoftwareDetails(),refreshSelect2(),toggleUserAccVisibility();</Onchange>
	        	<Script>
			    function updateAccUsers()
		            {
		                populateAccountRequesters(getAccountId(), document.AssetDefForm.user, true, false, false, null,null,true);
		        	}
		        	function updateAccDepts(){
		                populateAccountDepts(getAccountId(),document.AssetDefForm.department,true,updateAccUsers,true,null);
		            }
		            function updateAccAssets(){
		                updateAccountAssets(document.AssetDefForm.asset,updateAccDepts,null,true);
		            }
					
					function updateSoftwareDetails() {
					jQuery('#usersitesDiv').remove();
					jQuery('#usersitesDivAppend').append('&lt;span id= &quot;usersitesDiv&quot;  style= &quot;width:200px&quot;  nowrap=&quot;nowrap&quot;  class= &quot; fontBlack &quot;&gt;&lt;input type= &quot;text&quot;  name=&quot;usersites&quot;  id= &quot;usersites&quot;  style= &quot;width:200px&quot;  onchange=&quot;filterSoftwareBySite(this)&quot;&gt;&lt;/input&gt;&lt;/span&gt;');
					var newAccountVal = document.HeaderForm.persistentAccountId.value;
					createCookie('persistentaccountid', newAccountVal);//NO I18N
					updateSiteDropdown('usersites',-1,'All Sites',100);
					filterSoftwareBySite(document.getElementById('usersites'));//No I18N
                }
	            </Script>
	        </HeaderAccount>
        </Parameters>
        <!-- Add new AccessPoint, Printer, Router, Switch, Firewall, Rack, StorageDevice, Projector, Scanner, Keyboard END -->

		<!-- Save And Add New START -->
        <Parameters>
        	<Param Name="addBulkAsset" Value="Save and add new"/>
            <!-- Param Name="assetID" Value="null"/> -->
        	<HeaderAccount>
            	<PageFormName>AssetDefForm</PageFormName>
            	<StyleClass>formStyle</StyleClass>
            	<DependentElement>document.AssetDefForm.site</DependentElement>
            	<DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            	<PostAjaxFunction>updateAccAssets(),refreshSelect2(),toggleUserAccVisibility();</PostAjaxFunction>
        		<Script>
            	function updateAccUsers()
            	{
                	populateAccountRequesters(getAccountId(), document.AssetDefForm.user, true, false, false, null,null,true);
        		}
        		function updateAccDepts(){
                	populateAccountDepts(getAccountId(),document.AssetDefForm.department,true,updateAccUsers,true,null);
            	}
            	function updateAccAssets(){
                	updateAccountAssets(document.AssetDefForm.asset,updateAccDepts,null,true);
            	}
            	</Script>
        	</HeaderAccount>
		</Parameters>
		<!-- Save And Add New END -->

	<!-- Adding asset[Product] from Quick Actions START-->
        <Parameters>
            <Param Name="assetID" Value="null"/>
            <Param Name="mode" Value="showForm"/>
			<HeaderAccount>
				<PageFormName>AssetDefForm</PageFormName>
				<StyleClass>formStyle</StyleClass>
				<DependentElement>document.AssetDefForm.site</DependentElement>
				<DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
				<PostAjaxFunction>updateAccAssets(),refreshSelect2(),toggleUserAccVisibility();</PostAjaxFunction>
				<Script>
					function updateAccUsers(){
						populateAccountRequesters(getAccountId(), document.AssetDefForm.user, true, false, false, null,null,true);
					}
					function updateAccDepts(){
						populateAccountDepts(getAccountId(),document.AssetDefForm.department,true,updateAccUsers,true,null);
					}
					function updateAccAssets(){
						updateAccountAssets(document.AssetDefForm.asset,updateAccDepts,null,true);
					}
               </Script>
			</HeaderAccount>
        </Parameters>
	<!-- Adding asset from Quick Actions END-->

	<Parameters>
            <Param Name="assetID" Value="null"/>

			<HeaderAccount>
				<PageFormName>AssetDefForm</PageFormName>
				<StyleClass>formStyle</StyleClass>
				<DependentElement>document.AssetDefForm.site</DependentElement>
				<DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
				<PostAjaxFunction>updateAccAssets(),refreshSelect2(),toggleUserAccVisibility();</PostAjaxFunction>
				<Script>
					function updateAccUsers(){
						populateAccountRequesters(getAccountId(), document.AssetDefForm.user, true, false, false, null,null,true);
					}
					function updateAccDepts(){
						populateAccountDepts(getAccountId(),document.AssetDefForm.department,true,updateAccUsers,true,null);
					}
					function updateAccAssets(){
						updateAccountAssets(document.AssetDefForm.asset,updateAccDepts,null,true);
					}
               			</Script>
			</HeaderAccount>
        </Parameters>

        <!-- Edit page START-->
        <Parameters>
        <AccountDisplay>
            <QueryParam>assetID</QueryParam>
                <Query>
                    <Table Name="ResourceLocation">
                        <Column TableName="ResourceLocation" ColumnName="SITEID" />
                        <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                        <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
    	<HeaderAccount>
			<Disabled>true</Disabled>
        	<StyleClass>accountStyleDisabled</StyleClass>
            	<Script>
		toggleUserAccVisibility();
                var selectedSite = document.AssetDefForm.site.value;
                var selectedAsset;
                var selectedDept;
		        var selectedUser;
		        var accountId=document.HeaderForm.__persistentAccountId__select.value;
		        if(document.AssetDefForm.asset != null) {
                    selectedAsset = document.AssetDefForm.asset.value;
                }
                if(document.AssetDefForm.department != null) {
                    selectedDept = document.AssetDefForm.department.value;
                }
                if(document.AssetDefForm.user != null) {
                    selectedUser = document.AssetDefForm.user.value;
                }
            	function updateSites() {
            	    populateAccountSites(accountId, document.AssetDefForm.site,false,updateAccAssets,selectedSite);
            	}

            	function updateAccUsers()
            	{
					populateAccountRequesters(getAccountId(), document.AssetDefForm.user, true, false, false, null,selectedUser,true);
        		}
        		function updateAccDepts(){
					populateAccountDepts(getAccountId(),document.AssetDefForm.department,true,updateAccUsers,true,selectedDept);
            	}
		        function updateAccAssets(){
		        	var ignoreAssetId=__java("assetID");
		        	var param="&amp;workstationId="+ignoreAssetId;
                	updateAccountAssets(document.AssetDefForm.asset,updateAccDepts,selectedAsset,true,param);
            	}
                updateSites();
            </Script>
        </HeaderAccount>
        </Parameters>
        <!-- Edit page END-->
    </Page>

     <Page className="org.apache.jsp.asset.AssetDef_jsp">
        <Parameters>
            <Param Name="assetID" Value="null"/>
        <HeaderAccount>
            <PageFormName>AssetDefForm</PageFormName>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.AssetDefForm.site</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <PostAjaxFunction>updateAccAssets(),refreshSelect2()</PostAjaxFunction>
        <Script>
            function updateAccUsers()
            {
                populateAccountRequesters(getAccountId(), document.AssetDefForm.user, true, false, false, null,null,true);
        }
        function updateAccDepts(){
                populateAccountDepts(getAccountId(),document.AssetDefForm.department,true,updateAccUsers,true,null);
            }
            function updateAccAssets(){
                updateAccountAssets(document.AssetDefForm.asset,updateAccDepts,null,true);
            }


            </Script>
        </HeaderAccount>
        </Parameters>
        <Parameters>

        <AccountDisplay>
            <QueryParam>assetID</QueryParam>
                <Query>
                    <Table Name="ResourceLocation">
                        <Column TableName="ResourceLocation" ColumnName="SITEID" />
                        <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                        <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
    <HeaderAccount>
        <StyleClass>accountStyleDisabled</StyleClass>
            <Script>

                var selectedSite = document.AssetDefForm.site.value;
                var selectedAsset;
                var selectedDept;
        var selectedUser;
        if(document.AssetDefForm.asset != null) {
                    selectedAsset = document.AssetDefForm.asset.value;
                }
                if(document.AssetDefForm.department != null) {
                    selectedDept = document.AssetDefForm.department.value;
                }
                if(document.AssetDefForm.user != null) {
                    selectedUser = document.AssetDefForm.user.value;
                }
            function updateSites() {
                populateAccountSites(getAccountId(), document.AssetDefForm.site,false,updateAccAssets,selectedSite);
            }

            function updateAccUsers()
            {
                populateAccountRequesters(getAccountId(), document.AssetDefForm.user, true, false, false, null,selectedUser,true);
        }
        function updateAccDepts(){
                populateAccountDepts(getAccountId(),document.AssetDefForm.department,true,updateAccUsers,true,selectedDept);
            }
        function updateAccAssets(){
        var ignoreAssetId=__java("assetID");
        var param="&amp;workstationId="+ignoreAssetId;
                updateAccountAssets(document.AssetDefForm.asset,updateAccDepts,selectedAsset,true,param);
            }

                updateSites();
            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.workorder.SDArchiveWorkOrder_jsp">
        <AccountDisplay>
            <QueryParam>woID</QueryParam>
	    <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="Arc_WorkOrder">
                    <Column TableName="Arc_WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="Arc_WorkOrder" ColumnName="REQUESTERID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="Arc_WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="Arc_WorkOrder" baseTableColumn="REQUESTERID" joinTableName="RequesterAccountMapping" joinTableColumn="USERID" joinCondition="LEFT_JOIN" />
                    <Join baseTableName="RequesterAccountMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" baseTableAlias="RequesterAccountMapping" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
    </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.asset.ViewDetails_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.ViewWorkstationHWDetails_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.software.ViewWorkstationSWDetails_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.ViewWSAuditHistory_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.AssetListViewForWS_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.workorder.WsRequestHistory_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.ViewResourceContracts_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.ViewResourceCosts_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.software.SoftwareLicenseListView_jsp">
        <HeaderAccount>
            <PageFormName>SoftwareLicenseListView</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>refreshSoftwareLicenseView()</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
            <Script>
                function refreshSoftwareLicenseView() {
					var accountid=document.HeaderForm.persistentAccountId.value;
					createCookie('persistentaccountid', accountid);//NO I18N
					reloadLicenseListview();
                }
                jQuery( window ).unload(function() {
					eraseCookie('persistentaccountid');
				});
				//For Standard License setting onclick
				document.getElementById("lv-licensed").children[0].children[0].children[0].onclick=checkAndAddStdLicense;
				
				//For Upgrade License setting onclick
				document.getElementById("lv-licensed").children[0].children[1].children[0].onclick=checkAndAddUpgLicense;

                function checkAndAddStdLicense() 
                {
                    if(checkEmptyAccount(getMessageForKey("sdp.msp.selectAccount.error"))) {
                        window.open('/SoftwareLicense.do?operation=new', '_parent');
                    }
                }

		  		function checkAndAddUpgLicense() 
                {
                    if(checkEmptyAccount(getMessageForKey("sdp.msp.selectAccount.error"))) {
                        window.open('/SoftwareLicense.do?operation=new&amp;licenseCategory=upgrade', '_parent');
                    }
                }


                
            </Script>
        </HeaderAccount>
    </Page>
	
	<Page className="org.apache.jsp.cmdb.CMDBListView_jsp">
        <HeaderAccount>
            <PageFormName>CMDBListViewForm</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>cmdbAccountUpdated();</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
            <i18nKey>sdp.msp.tech.defaultTechnician.list</i18nKey>
            <Script>
		var attachmentId = document.createElement("div");
                attachmentId.setAttribute("height", "auto");
                attachmentId.setAttribute("id", "Attachments");
                attachmentId.setAttribute("style", "position:absolute;z-index:10;");
                attachmentId.setAttribute("onmouseover", "javascript:delayhide();");
                attachmentId.setAttribute("onmouseout", "javascript:hidediv();");
                attachmentId.setAttribute("width", "auto");
                $('tipDiv').parentNode.insertBefore(attachmentId,$('tipDiv'));

                function addNewCI() {

                	if($("__persistentAccountId__select").value == "0") {

        	            	alert(getMessageForKey("sdp.msp.selectAccount.error"));
                	        return false;
                    }
                    addnewCI($('ciTypeId').value);
                    return true;
                }

		function ajaxRequestOnSuccess(requestObj, module) {

  			if(module=="AccDetail") {

    				document.getElementById("Attachments").innerHTML=requestObj.responseText;
    				document.getElementById('Attachments').style.display='';
    				hide = true;
  			}
		}

		var hide = false;
		function delayhide() {
			hide = false;
                }

                function hidediv() {

                        hide = true;
                        setTimeout('hided()', 1000);
                }

                function hided() {

                	if(hide) {
				document.getElementById('Attachments').style.display='none';
				hide = false;
                    }
                }

                function ajaxRequestOnFailure(requestObj, module) {
                        alert("failed");  // No i18n
                }

                function populateSites() {

                        var viewName = $("viewName").value;
                        var assetCIsView = '__java("checkAccountViews")';
                        if(assetCIsView.indexOf(viewName) > 0) {
				$('newCI').onclick=addNewCI;
                        }
                        if(document.CMDBListViewForm.SITEID != undefined) {

				var viewName = $("viewName").value;
				var params = "";
				if(viewName == "TechnicianView") {
					params = 'configId=7&amp;allSites=-1';
				}
				else if(viewName =="DepartmentEntry") {
					params = 'configId=3&amp;defaultSettings=true';
				}
				else if(viewName=="GroupListView") {
					params = 'configId=4&amp;defaultSettings=true';
				}
				populateAccountSites(document.getElementById('__persistentAccountId__select').value,document.CMDBListViewForm.SITEID, true,refreshCMDBListView,document.CMDBListViewForm.SITEID.value,params, false);
                        }
                }

                function refreshCMDBListView() {

                        var params = "persistentAccountId="+document.getElementById('__persistentAccountId__select').value;
                        var viewName = $("viewName").value;
                        if(viewName == "TechnicianView") {

                        	if($("__persistentAccountId__select").value == 0 &amp;&amp; __java("CanViewDefaultTechs") == true) {
                                        addOption(document.CMDBListViewForm.SITEID,getMessageForKey("sdp.msp.tech.defaultTechnician.list"), "0", 1);
                            }
                            updateState("TechnicianView","_D_RP", params);//NO I18N
                            updateTechnicianView_CMDB(document.CMDBListViewForm);
                        }
                        else if(document.CMDBListViewForm.SITEID != undefined) {

				params = params+"&amp;SITEID="+document.CMDBListViewForm.SITEID.value;
                        	updateState(viewName,"_D_RP", params);//NO I18N
				updateState(viewName,"_PN",null);//NO I18N
				updateFormValues(viewName,document.CMDBListViewForm);//No i18N
                        }
                        else {

				updateState(viewName,"_D_RP", params);//NO I18N
				updateState(viewName,"_PN",null);//NO I18N
				updateFormValues(viewName,document.CMDBListViewForm);//No i18N
			}
                }

                function cmdbAccountUpdated(){

                	if(document.CMDBListViewForm.SITEID != undefined) {
                    		populateSites();
			}
			else if(document.getElementById('ciTypeId') != undefined) {
                    		changeView(document.getElementById('ciTypeId').value);
                    	}
                    	else {
                    		refreshCMDBListView();
                    	}
                }
		setTimeout("cmdbAccountUpdated()", 1000);
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.setup.AccountDef_jsp">
        <Parameters>
            <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <Script>
                        function viewAccountList()
                        {
                                onClickSwapLayer('listview','sform');
				setAllAccounts();
                        }
                        if(__java("WORKFLOWACCID") != null) {
                                parent.document.getElementById("__persistentAccountId__select").value = __java("WORKFLOWACCID");
                        }else{
				setAllAccounts();
                        }
                </Script>
            </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.setup.NewCIType_jsp">
    <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <Script>
		setAllAccounts();
                function siteMandatoryCheck(){
                        var siteMandatoryFields = '__java("siteMandatoryFields")';
                        if(document.NewCIType.createProductType.checked==true || siteMandatoryFields.indexOf("-#"+'__java("ciTypeID")'+"#--#")>0){
                                $('siteMandatory').style.display='';
                        }else{
                                $('siteMandatory').style.display='none';
                        }
                }
                var sdpON = document.NewCIType.createProductType.onclick;
                document.NewCIType.createProductType.onclick = changeOnclick;
                function changeOnclick(){
                        siteMandatoryCheck();
                        sdpON();
                }
                var pageSDP = document.getElementById("CITypeFrame").parentNode;
                var sdpFP = pageSDP.onload;
                pageSDP.onload = loadMSP;
                function loadMSP(){
                        siteMandatoryCheck();
                        sdpFP();
                }
            </Script>
        </HeaderAccount>
        </Page>
    <Page className="org.apache.jsp.cmdb.adminCIForm_jsp">
    <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>accountUpdated()</Onchange>
	    <i18nKey>sdp.msp.admin.accountChangeWarning</i18nKey>
            <Script>
		if(__java("requesterAccountId") != null) {
			setAccountId('__java("requesterAccountId")');
                }
                function accountUpdated()
                {
			if(document.RequesterDefForm!=undefined){
				var confVal=false;
       				var val=document.getElementById("__persistentAccountId__select").value;
           			confVal=confirm(document.getElementById("sdp.msp.admin.accountChangeWarning").innerHTML);   //N i18n
           			if(confVal)
           			{
               				document.getElementById("deptSite").focus();
               				prevSel=val;
               				deptid='null';//No I18N
               				checkLoginNotification();
               				populateSite();
               				updateDomains();
           			}else
           			{
               				if(prevSel==null)
               				{
                   				setAccountId('__java("persistentAccountId")');
               				}else{
                   				setAccountId(prevSel);
               				}
           			}
       				return confVal;
			}
                    	loadCMDBListView();
                }
                if(document.DepartmentDefForm!=undefined){
                	var sitesAccountId = document.createElement("input");
                	sitesAccountId.setAttribute("type", "hidden");
                	sitesAccountId.setAttribute("id", "sitesAccountId");
                	sitesAccountId.setAttribute("name", "sitesAccountId");
                	document.DepartmentDefForm.appendChild(sitesAccountId);
                	siteChanged();
                }
		if(document.RequesterDefForm!=undefined){
                        updateDomains();
                }

		//Fix for Issue #12083 starts
		function setUserDomain(){  
                        var domain='__java("domainName")';
                        setSelectOption(document.RequesterDefForm.userDomain,domain);
                    }
        //Fix for Issue #12083 ends
		            
                function siteChanged() {

                    if(document.DepartmentDefForm.siteId.value == "null" || document.DepartmentDefForm.siteId.value == "") {
                        document.getElementById("deptHdHide").style.display = 'none';
                        return;
                    }

                    var url = appendTimestamp('/servlet/AJaxServlet'); //No I18N
                    var accountAjax = new Ajax.Request(url, {
                                    method: 'post',     // No i18n
                                    parameters: {action:'get_account_for_site', siteId:document.DepartmentDefForm.siteId.value},
                                    onComplete:function(resp) {
                                            document.DepartmentDefForm.sitesAccountId.value = resp.responseText;
                                    }
                    });
                   document.getElementById("deptHdHide").style.display = '';
                }
		function ajaxRequestOnSuccess(req, module) {
                        var element = document.RequesterDefForm.userDomain;
                        if(module == 'get_associated_account_domains') {
                            while(element.options.length &gt; 1) {
                                element.remove(1);
                            }
                            var assetObj;
                            var length = 0;
                            if(req.responseXML!=null)
                            {
                                assetObj = req.responseXML.getElementsByTagName("DomainInfo");
                                length = assetObj.length;
                            }
                            for( i=0; i&lt;length; i++ ) {
                                var newOption = document.createElement('option');
                                newOption.value = assetObj[i].getAttribute("domainname");
                                newOption.text = assetObj[i].getAttribute("domainname");
                                try {
                                   element.add(newOption, null);
                                } catch(x) {
                                    element.add(newOption);
                                }
                            }
                            setUserDomain();
                            updateLDAPDomains();
                            updateDepartment();
                        }
                 }
            </Script>
        </HeaderAccount>
        </Page>
    <Page className="org.apache.jsp.asset.ContractListView_jsp">
        <HeaderAccount>
            <PageFormName>ContractViewForm</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <SubmitOnChange>true</SubmitOnChange>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.contract.ContractDef_jsp">
    	 <Parameters>
              <Param Name="coMode" Value="null"/>
	      <HeaderAccount>
              <PageFormName>ContractDefForm</PageFormName>
              <StyleClass>formStyle</StyleClass>
              <Onchange>clearSelectedAssets();updateParentContract();refreshContractsView();</Onchange>
              <i18nKey>sdp.msp.clearasset.message</i18nKey>
              <Script>
                loadUsersList();
		updateParentContract();
		function loadUsersList() {
                    populateAccountRequesters(document.getElementById("__persistentAccountId__select").value, document.ContractDefForm.userList, true, true, false, removeDuplicateUsers,null,null,true,true);
                }

                var prevAccountId = document.HeaderForm.persistentAccountId.value;
		function clearSelectedAssets() {

                    var accountsBox = document.HeaderForm.persistentAccountId;
		    if(prevAccountId != "0" &amp;&amp; prevAccountId != "-1")	{

                        if(confirm(getMessageForKey("sdp.msp.clearasset.message")) == true)	 {

                            document.ContractDefForm.assetList.options.length = 0;
                            prevAccountId = document.HeaderForm.persistentAccountId.value;
                            refreshUsersList();
                        }
                        else	{
                            for(var i=0;i&lt;accountsBox.options.length;i++) 	{

                                if(accountsBox.options[i].value == prevAccountId) {
                                    accountsBox.options[i].selected = true;
                                    break;
                                 }
                             }
                        }
                    }
                    else	{
                        prevAccountId = document.HeaderForm.persistentAccountId.value;
                    }
                }

                function refreshUsersList() {

                    var selectedEle = document.ContractDefForm.notifyList;
                    while(selectedEle.options.length &gt; 0) {
                        selectedEle.remove(0);
                    }
                    populateAccountRequesters(document.getElementById("__persistentAccountId__select").value, document.ContractDefForm.userList, true, true, true,null,null,null,true,true);
		    }

              </Script>
       	     </HeaderAccount>

	</Parameters>
     <Parameters>

		<HeaderAccount>
            		<Disabled>true</Disabled>
            		<Script>
				if(__java("contractAccountId") != null) {
                    			parent.document.getElementById("__persistentAccountId__select").value = __java("contractAccountId");
                    			var form = parent.document.ContractDefForm;
                    			var acc = document.createElement("input");
                    			acc.setAttribute("type", "hidden");
                    			acc.setAttribute("name", "persistentAccountId");
                    			acc.setAttribute("value", __java("contractAccountId"));
                    			form.appendChild(acc);
                		}
				loadUsersList();
				updateParentContract();
				function loadUsersList() {
                    			populateAccountRequesters(document.getElementById("__persistentAccountId__select").value, document.ContractDefForm.userList, true, true, false, removeDuplicateUsers,null,null,true,true);
                		}
		        </Script>
       		</HeaderAccount>

</Parameters>
    </Page>
    <Page className="org.apache.jsp.asset.ListViewFailedWs_jsp">
      <HeaderAccount>
            <PageFormName>FailedWsListView</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <SubmitOnChange>true</SubmitOnChange>
            <Onchange>refreshFailedWsView()</Onchange>
            <Script>
                    function refreshFailedWsView() {

             var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                     updateState("FailedWsListView","_D_RP", newVal);
                         updateState("FailedWsListView", "_PN", null);
                         refreshSubView("FailedWsListView");
                        }
                    </Script>

      </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.ExportImportCentral_jsp">
        <HeaderAccount>
            <PageFormName>ExportImport</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Onchange>refreshAssetScanView()</Onchange>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.getElementById("site")</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <Script>
                function refreshAssetScanView()
                {
                    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                    updateState("ExportImportCentralView","_D_RP", newVal);
                    updateState("ExportImportCentralView", "_PN", null);
                    refreshSubView("ExportImportCentralView");
                }
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.software.HotfixDetailView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>updateHotfixDetailView()</Onchange>
            <Script>
                function updateHotfixDetailView() {

                    var currentUrl = window.location.href;
                    var newVal = "persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                    if(currentUrl.indexOf("persistentAccountId") &gt; 0) {
                    currentUrl = currentUrl.substring(0, currentUrl.indexOf("persistentAccountId"));
                    }
                    else {
                        currentUrl = currentUrl + "&amp;";
                    }
                    currentUrl = currentUrl + newVal;
                    window.location.href = currentUrl;
                }
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.software.HotfixListView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>updateHotfixView()</Onchange>
            <Script>
            function updateHotfixView() {

                var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                updateState("HotfixListView","_D_RP", newVal);
                updateState("HotfixListView", "_PN", null);
                refreshSubView("HotfixListView");
            }
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.software.ListViewSW_jsp">
        <HeaderAccount>
            <PageFormName>SoftwareListView</PageFormName>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>false</ShowAllAccounts>
            <Onchange>refreshSWView()</Onchange>
            <DependentElement>document.SoftwareListView.site</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentAllSites>true</DependentAllSites>
            <PostAjaxFunction>changeAllSiteValue()</PostAjaxFunction>
            <Script>
				function refreshSWView() {
					jQuery('#usersitesDiv').remove();
					jQuery('#usersitesDivAppend').append('&lt;span id= &quot;usersitesDiv&quot;  style= &quot;width:200px&quot;  nowrap=&quot;nowrap&quot;  class= &quot; fontBlack &quot;&gt;&lt;input type= &quot;text&quot;  name=&quot;allsites&quot;  id= &quot;allsites&quot;  style= &quot;width:200px&quot;  onchange=&quot;filterSoftwareListBySite(this)&quot;&gt;&lt;/input&gt;&lt;/span&gt;');
					var accountid=document.HeaderForm.persistentAccountId.value;
					createCookie('persistentaccountid', accountid);//NO I18N
					updateSiteDropdown('allsites',-1,'All Sites',100);
					filterSoftwareListBySite(document.getElementById('allsites'));//No I18N
                }
                jQuery( window ).unload(function() {
					eraseCookie('persistentaccountid');
					eraseCookie('swlist:siteId');
				});
            </Script>
        </HeaderAccount>
    </Page>
<Page className="org.apache.jsp.asset.ListViewWorkstationForGraph_jsp">
        <HeaderAccount>
            <PageFormName>WorkstationListViewAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>refreshWKSView()</Onchange>
    <Script>
        function refreshWKSView() {
                    var newVal = "&amp;persistentAccountId="+getAccountId();
                    var viewName = parent.ROOT_VIEW_ID;
                    updateState(viewName,"_D_RP", newVal);
                    updateState(viewName, "_PN", null);
                    updateState(viewName, "_VN", viewName);
                    refreshSubView(viewName);
                    }
</Script>
</HeaderAccount>
</Page>
    <Page className="org.apache.jsp.asset.ListViewWorkstation_jsp">
        <HeaderAccount>
            <PageFormName>WorkstationListViewAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>refreshWKSView();updateAccDomains()</Onchange>
        <i18nKey>sdp.msp.selectAccount.error</i18nKey>
        <i18nKey>sdp.purchase.reconcile.label</i18nKey>
    <Script>
        function updateAccDomains(){
        var url="/servlet/AJaxServlet";
        var ajaxReq=new Ajax.Request(url,{
                        method:'post',
                        parameters:{action:"get_associated_account_domains",persistentAccountId:+document.getElementById('__persistentAccountId__select').value,restrictUser:"true"},
                        onComplete:function(resp){
                                    element=document.WorkstationListView.domainType;
                                    var value = element.value;
									var hasValue=false;
                                    while(element.options.length &gt; 2) {
                                           element.remove(2);
                                    }

                                    var domObj = resp.responseXML.getElementsByTagName("DomainInfo");
                                    var length = domObj.length;

                                    for( i=0; i&lt;length; i++ ) {
                                        var newOption = document.createElement('option');
                                        newOption.text = domObj[i].getAttribute("domainname");
                                        newOption.value = domObj[i].getAttribute("domainid");
                                        if(value==newOption.value){
											hasValue=true;
										}
                                    try {
                                            document.WorkstationListView.domainType.add(newOption, null);
                                        } catch(x) {
                                            document.WorkstationListView.domainType.add(newOption);
                                            }
                                    }
                                    if(hasValue){
										document.WorkstationListView.domainType.value=value;
									}
                            }
                        });
            }


                function refreshWKSView() {

                    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
		    var viewName = parent.ROOT_VIEW_ID;
		    updateState(viewName,"_D_RP", newVal);
		    updateState(viewName, "_PN", null);
		    updateState(viewName, "_VN", viewName);
		    refreshSubView(viewName);
                    }
            function formSubmit(form, additionalParams, fromDelete)
                {
                        if(!fromDelete &amp;&amp; $("__persistentAccountId__select").value == "0") {
                                alert(getMessageForKey("sdp.msp.selectAccount.error"));
                                return false;
                        }
                        form.action = form.action + additionalParams;
                        handleStateForForm(form);
                        form.submit();
                        return true;
		}
		var sdpFP ;
		if(document.getElementById("newWorkstation") != null ) {
			sdpFP= document.getElementById("newWorkstation").onclick;
			document.getElementById("newWorkstation").onclick = checkAccountEmpty;
		}
                function checkAccountEmpty()
                {
                    var element = $("__persistentAccountId__select");
                    if(element.value == null || element.value == "0")
                    {
                        alert(getMessageForKey("sdp.msp.selectAccount.error"));
                        return false;
                    }
                    else
                    {
                        $("__persistentAccountId__select").disabled="true";
                        }
                    sdpFP();
                }
                setMSPReconcileFn();
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.software.ListViewWorkstationWithSW_jsp">
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>false</ShowAllAccounts>
            <DependentElement>document.getElementById("permittedSites")</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentAllSites>true</DependentAllSites>
            <DependentValue>$$selectedSite$$</DependentValue>
            <DependentParameters>setAccountInThreadLocal=true</DependentParameters>
            <Onchange>updateSoftwareDetails()</Onchange>
            <Script>

                updatePage();			
                function updatePage() {

                    var oldAccountVal = __java("persistentAccountId");
                    var newAccountVal = document.HeaderForm.persistentAccountId.value;
                    if(oldAccountVal != newAccountVal) {

                        document.location = "/SWWorkstationListView.do?criteria=" + document.getElementById("swId").value + "&amp;selectedSite=-1" + "&amp;persistentAccountId=" + newAccountVal;
                    }
                }

                
                function updateSoftwareDetails() {
					jQuery('#usersitesDiv').remove();
					jQuery('#usersitesDivAppend').append('&lt;span id= &quot;usersitesDiv&quot;  style= &quot;width:200px&quot;  nowrap=&quot;nowrap&quot;  class= &quot; fontBlack &quot;&gt;&lt;input type= &quot;text&quot;  name=&quot;usersites&quot;  id= &quot;usersites&quot;  style= &quot;width:200px&quot;  onchange=&quot;filterSoftwareBySite(this)&quot;&gt;&lt;/input&gt;&lt;/span&gt;');
					var newAccountVal = document.HeaderForm.persistentAccountId.value;
					createCookie('persistentaccountid', newAccountVal);//NO I18N
					updateSiteDropdown('usersites',-1,'All Sites',100);
					filterSoftwareBySite(document.getElementById('usersites'));//No I18N
                }
                

                
               

               

            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.NodeDiscoveryConfiguration_jsp">
        <HeaderAccount>
            <PageFormName>NodeDiscovery</PageFormName>
            <StyleClass>formStyle</StyleClass>
            <SubmitOnChange>false</SubmitOnChange>
            <DependentElement>document.NodeDiscovery.site</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentValue>$$site$$</DependentValue> <!-- TBD $$site$$ Parsing needs to be supported in the parser to fetch the req parameter/attribute-->
            <Onchange>refreshWindow()</Onchange>
            <Script>


        function setSelectedDomain(){

                var selectedDomain = __java("selectedDomain");

                if(selectedDomain!=null &amp;&amp; selectedDomain!="null")
                {
                            document.NodeDiscovery.domain.value=selectedDomain;

                }
        }
        function getAcctName()
        {
                var name =document.HeaderForm.persistentAccountId;
                return(name);
        }
    function getLoginElement()
    {
       var login = document.NodeDiscovery.loginName;
       return(login);
    }

    function getPassElement()
    {
       var pass = document.NodeDiscovery.password;
       return(pass);
    }
    function getDController(){return false;}
	function refreshWindow(){document.location=document.location}


            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.asset.WorkstationHome_jsp">
    <AccountDisplay>
            <Query>
                <Table Name="ResourceLocation">
                    <Column TableName="ResourceLocation" ColumnName="SITEID" />
                    <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />

                    <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Onchange>changeAccount(this.value)</Onchange>
            <Script>
                function changeAccount(val)
                {
                    window.location.href= "/InventoryHome.do?persistentAccountId="+val;
                }
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.setup.DepartmentDef_jsp">
        <Parameters>
        <Param Name="msp" Value="true" />
        <HeaderAccount>
            <PageFormName>DeptActions</PageFormName>
            <InternalHelpdesk>ONLY</InternalHelpdesk>
            <StyleClass>formStyle</StyleClass>
            <Onchange>accountUpdated()</Onchange>
            <Script>
                function refreshListView()
                {
                    	closeDeptDetails();
                    	updateDepListView(document.DeptActions);
                    	setSiteName(document.DeptActions.SITEID,document.getElementById("SiteText"));
                    	siteChanged();
                }

		function updateDepListView(form){
	                var siteId = null;
	                if(document.DeptActions.SITEID){
	                        siteId = document.DeptActions.SITEID.value;
	                	document.DepartmentDefForm.location.value = document.DeptActions.SITEID.value;
	                }
	                var newVal = "&amp;SITEID="+siteId+"&amp;msp=true";//No I18N
	                updateState("DepartmentEntry","_D_RP", newVal);//No I18N
	                updateState("DepartmentEntry", "_PN", null);//No I18N
	                updateFormValues("DepartmentEntry", form);//No I18N
	        	return true;
	        }
	        changeAction(true);

                var siteCombo = document.DeptActions.SITEID;
                try {
                    siteCombo.addEventListener('change', siteChanged, false);
                } catch(x) {
                    siteCombo.attachEvent('onchange', siteChanged);
                }
                var sitesAccountId = document.createElement("input");
                sitesAccountId.setAttribute("type", "hidden");
                sitesAccountId.setAttribute("id", "sitesAccountId");
                sitesAccountId.setAttribute("name", "sitesAccountId");
                document.DeptActions.appendChild(sitesAccountId);
                siteChanged();

                function siteChanged() {

                    if(document.DeptActions.SITEID.value == "null"){ 
                        document.getElementById("deptHdHide").style.display = 'none';	
                        return;
                    }

                    var url = appendTimestamp('/servlet/AJaxServlet'); //No I18N
                    var accountAjax = new Ajax.Request(url, {
                                    method: 'post',     // No i18n
                                    parameters: {action:'get_account_for_site', siteId:document.DeptActions.SITEID.value},
                                    onComplete:function(resp) {
                                            document.DeptActions.sitesAccountId.value = resp.responseText;
                                    }
                    });
                    document.getElementById("deptHdHide").style.display = '';
                }
		function accountUpdated(){
	                        populateAccountSites(document.getElementById('__persistentAccountId__select').value, document.DeptActions.SITEID, false, refreshListView, document.DeptActions.SITEID.value, "configId=3&amp;defaultSettings=true");
                }
                if('__java("mode")'!='edit'){
                        accountUpdated();
		}else{
                        populateAccountSites(document.getElementById('__persistentAccountId__select').value, document.DeptActions.SITEID, false, null, document.DeptActions.SITEID.value, "configId=3&amp;defaultSettings=true");
                }
            </Script>
        </HeaderAccount>
        </Parameters>
        <Parameters>
        <HeaderAccount>
            <PageFormName>DeptActions</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>accountUpdated()</Onchange>
            <Script>
		function refreshListView()
                {
                    	closeDeptDetails();
			if(document.getElementById("sform").style.display == 'none') {
                                document.getElementById("divmessage").innerHTML = document.getElementById("adddeparttitleMsg").innerHTML;
                        }
                    	updateDeptListView(document.DeptActions);
                    	setSiteName(document.DeptActions.SITEID,document.getElementById("SiteText"));
                    	siteChanged();
                }

                var siteCombo = document.DeptActions.SITEID;
                try {
                    siteCombo.addEventListener('change', siteChanged, false);
                } catch(x) {
                    siteCombo.attachEvent('onchange', siteChanged);
                }
                var sitesAccountId = document.createElement("input");
                sitesAccountId.setAttribute("type", "hidden");
                sitesAccountId.setAttribute("id", "sitesAccountId");
                sitesAccountId.setAttribute("name", "sitesAccountId");
                document.DeptActions.appendChild(sitesAccountId);
                siteChanged();

                function siteChanged() {
					var orgElements = document.getElementsByClassName('org_role_row');
                    if(document.DeptActions.SITEID.value == "null") {
                        document.getElementById("deptHdHide").style.display = 'none';
						for(var x=0; x &lt; orgElements.length; x++){
							orgElements[x].addClassName('hide');
						}
						document.getElementById('orgrolesHeader').addClassName('hide');
                        return;
                    }
					else{
						for(var x=0; x &lt; orgElements.length; x++){
							orgElements[x].removeClassName('hide');
						}
						document.getElementById('orgrolesHeader').removeClassName('hide');
					}

                    var url = appendTimestamp('/servlet/AJaxServlet'); //No I18N
                    var accountAjax = new Ajax.Request(url, {
                                    method: 'post',     // No i18n
                                    parameters: {action:'get_account_for_site', siteId:document.DeptActions.SITEID.value},
                                    onComplete:function(resp) {
                                            document.DeptActions.sitesAccountId.value = resp.responseText;
                                    }
                    });
                    document.getElementById("deptHdHide").style.display = '';
                }
		function accountUpdated(){
	                        populateAccountSites(document.getElementById('__persistentAccountId__select').value, document.DeptActions.SITEID, false, refreshListView, document.DeptActions.SITEID.value, "configId=3&amp;defaultSettings=true");
	        }
	        if('__java("mode")'!='edit'){
	                 accountUpdated();
		}else{
                        populateAccountSites(document.getElementById('__persistentAccountId__select').value, document.DeptActions.SITEID, false, null, document.DeptActions.SITEID.value, "configId=3&amp;defaultSettings=true");
                }
            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.setup.Domain_jsp">
        <HeaderAccount>
            <Onchange>refreshDomainView()</Onchange>
            <StyleClass>formStyle</StyleClass>
            <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Script>
		function refreshDomainView() {
			var view = "DomainView";
			var accid=$("__persistentAccountId__select").value;
			var newVal = "&amp;persistentAccountId="+accid; // No I18N
			if(document.getElementById("SharedDomainView_NAV")){
		    		view="SharedDomainView";
		    		newVal = newVal+"&amp;type=shared";
			}
                	updateState(view,"_D_RP", newVal);// No I18N
                	updateState(view, "_PN", null);// No I18N
                	refreshSubView(view);// No I18N
			toggleShowViewDomainsLink(view,accid);
			toggleShowShareDomain(accid);	
		}
	
            	var accountName;
            	if($("__persistentAccountId__select").disabled == false)
            	{
                	accountName = document.getElementById("__persistentAccountId__select").value;
            	}
            
            	function performClose() {
			refreshDomainPage();
            	}
		

		function refreshDomainPage(){
			var tm = new Date().getTime();
			window.location.href = "SetUpWizard.do?forwardTo=domain&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;time="+tm;
		}
		
		if($("addDomainLink")){
	             $("addDomainLink").href = "javascript:checkEmptyAccount();";
		}
		if($("listViewLink")){
            		$("listViewLink").href = "javascript:refreshDomainPage();";
		}
            	$("saveButton").onclick = validateMSPForm;
            	if($("saveAndAddNewButton")) {
                	$("saveAndAddNewButton").onclick = validateMSPForm;
            	}

            	function checkEmptyAccount() {
               		if($("__persistentAccountId__select").value == "0"){
                   		alert(getMessageForKey("sdp.admin.requesterImportWiz.selectAccountErrMsg"));
            		}
            		else{
                   		$("__persistentAccountId__select").disabled = true;
                   		swapLayerAndSetFocus();
             		}
            	}

            	function enableAccountCombo(){
                    $("__persistentAccountId__select").disabled = false;
            	}

            	function validateMSPForm(){
                	if(validateDomainForm1($("domainForm")))
                	{
            	    		enableAccountCombo();
                    		return true;
                	}
                	return false;
            	}
            	function validateDomainForm1(form){
            		if(validateDomainForm(form)){
            			var selectedAccountsBox = document.EditDomain.selectedAccountsBox;
						var shareDomainCheckBox = $("shareDomain");
						if(selectedAccountsBox &amp;&amp; selectedAccountsBox.options.length&lt;=0 &amp;&amp; shareDomainCheckBox.checked==true)
						{
							alert(document.getElementById("sdp.msp.sharedomain.selectAccount.error").innerHTML);	// No i18n
							return false;
						}
						return true;
            		}
            	}

		function showSharedDomains(){
		    	var tm = new Date().getTime();
		    	window.location.href = "SetUpWizard.do?forwardTo=domain&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;time="+tm+"&amp;type=shared";
		}

		function showOwnDomains(){
			refreshDomainPage();
		}
		var fromAccTab = '__java("fromAccTab")';
		if(fromAccTab != null &amp;&amp; fromAccTab=="true"){
			document.EditDomain.divToShow.value='__java("divToShow")';
			jQuery('#admin-sidebar').hide();
			jQuery('#wizardheadertab').hide();
			jQuery('#top-header').hide();
			jQuery('#subheader-holder').hide();
			jQuery('#saveButton').hide();
			jQuery('#closeButton').attr('onClick','window.close();');
			jQuery('#showSharedDomainsCell').hide();
			var accountId = '__java("persistentAccountId")';
			var accountName = getAccountName(accountId);
			jQuery('#domainHeading').append(" : "+accountName);
			jQuery('[onLoad="callMe()"]').attr("onLoad","callMe();jQuery('#helpcoll,#helpexp').hide();jQuery('#sdp-chat-bar').hide();setTimeout(function(){jQuery('#zls_ctn_wrap').hide();},100);");
		}
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.setup.Network_jsp">
        <Parameters>
            <Param Name="action" Value="edit"/>
            <AccountDisplay>
                <QueryParam>networkId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="DiscoveryConfigMapping">
                        <Column TableName="DiscoveryConfigMapping" ColumnName="ACCOUNTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="DiscoveryConfigMapping" ColumnName="NETWORKID" />
                        <Join baseTableName="DiscoveryConfigMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
            <Onchange>populateDomainList(this.value)</Onchange>
            <StyleClass>formStyle</StyleClass>
			<Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
            <Script>
            var accountId = __java("persistentAccountId");

            function showListView() {
                window.location.href = "/EditNetwork.do?action=changeAccount&amp;persistentAccountId="+accountId;
            }

            $("addSla_lnk").href = "javascript:checkEmptyAccount();";
            //$("listViewLink").href = "javascript:showListView();";
            $("closeButton").onclick = showListView;
            $("saveButton").onclick = validateMSPForm;
            $("saveAndScanButton").onclick = validateMSPForm;

            function checkEmptyAccount() {
                if($("__persistentAccountId__select").value == "0") {
                    alert(getMessageForKey("sdp.admin.requesterImportWiz.selectAccountErrMsg"));
                }
                else {
                    jQuery("#__persistentAccountId__select").prop('disabled',true);
					jQuery("#__persistentAccountId__select").removeClass('accountFormStyle');
					jQuery("#__persistentAccountId__select").addClass('accountStyleDisabled');
                    addNewNetwork();
                }
            }

            function enableAccountCombo() {
                jQuery("#__persistentAccountId__select").prop('disabled', false);
				jQuery("#__persistentAccountId__select").addClass('accountFormStyle'); 
				jQuery("#__persistentAccountId__select").removeClass('accountStyleDisabled');
            }

            function validateMSPForm() {
                if(validateNetworkForm(document.forms['EditNetwork'])) {
                    enableAccountCombo();
                    return true;
                }
                return false;
            }
            </Script>
        </HeaderAccount>
        </Parameters>
        <Parameters>
        <HeaderAccount>
            <Onchange>populateDomainList(this.value)</Onchange>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
            <Script>
            var accountName;
            if($("__persistentAccountId__select").disabled == false) {
                accountName = document.getElementById("__persistentAccountId__select").value;
            }

            function showListView() {
                populateDomainList(accountName);
            }

            function populateDomainList(accountId) {
                window.location.href = "/EditNetwork.do?action=changeAccount&amp;persistentAccountId="+accountId;
            }

            $("addSla_lnk").href = "javascript:checkEmptyAccount();";
           // $("listViewLink").href = "javascript:showListView();";
            $("closeButton").onclick = showListView;
          	$("saveButton").onclick = validateMSPForm;
            $("saveAndScanButton").onclick = validateMSPForm;

            function checkEmptyAccount() {
                if($("__persistentAccountId__select").value == "0") {
                    alert(getMessageForKey("sdp.admin.requesterImportWiz.selectAccountErrMsg"));
                }
                else {
                    jQuery("#__persistentAccountId__select").prop('disabled',true);
					jQuery("#__persistentAccountId__select").removeClass('accountFormStyle');
					jQuery("#__persistentAccountId__select").addClass('accountStyleDisabled');
                    addNewNetwork();
                }
            }

            function enableAccountCombo() {
                jQuery("#__persistentAccountId__select").prop('disabled', false);
				jQuery("#__persistentAccountId__select").addClass('accountFormStyle'); 
				jQuery("#__persistentAccountId__select").removeClass('accountStyleDisabled');
            }

            function validateMSPForm() {
                if(validateNetworkForm(document.forms['EditNetwork'])) {
                    enableAccountCombo();
                    return true;
                }
                return false;
            }
            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>

    <Page className="org.apache.jsp.setup.HolidayDef_jsp">
        <Parameters>
        <Param Name="msp" Value="true" />
        <HeaderAccount>
            <PageFormName>HolidayAction</PageFormName>
            <InternalHelpdesk>ONLY</InternalHelpdesk>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.HolidayAction.SITEID</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentDefaultSettings>true</DependentDefaultSettings>
            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue><!-- TBD $$ADMIN_SITEPREFERENCE$$ Parsing needs to be supported in the parser to fetch the req parameter/attribute-->
                <DependentParameters>configId=2</DependentParameters>
            <PostAjaxFunction>accountUpdated()</PostAjaxFunction>
            <i18nKey>sdp.msp.admin.defaultsettings.sdadminalone</i18nKey>
            <Script>
                function accountUpdated()
                {
                    var isDummyOptionCreated = checkForDefaultSettingsInSite(document.HolidayAction);
			document.HolidayAction.SITEID.onchange();
                    setSiteName(document.HolidayAction.SITEID,document.getElementById("SiteText"));
                    changeLinkForHoliday(isDummyOptionCreated);
                }
            </Script>
        </HeaderAccount>
        </Parameters>
        <Parameters>
        <HeaderAccount>
            <PageFormName>HolidayAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.HolidayAction.SITEID</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentDefaultSettings>true</DependentDefaultSettings>
            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue><!-- TBD $$ADMIN_SITEPREFERENCE$$ Parsing needs to be supported in the parser to fetch the req parameter/attribute-->
                <DependentParameters>configId=2&amp;includeReferSites=true</DependentParameters>
            <PostAjaxFunction>accountUpdated()</PostAjaxFunction>
            <i18nKey>sdp.msp.admin.defaultsettings.sdadminalone</i18nKey>
            <Script>
                function accountUpdated()
                {
                    var isDummyOptionCreated = checkForDefaultSettingsInSite(document.HolidayAction);
			document.HolidayAction.SITEID.onchange();
                    setSiteName(document.HolidayAction.SITEID,document.getElementById("SiteText"));
                    changeLinkForHoliday(isDummyOptionCreated);
                }
            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.setup.OperHoursDef_jsp">
        <Parameters>
            <Param Name="msp" Value="true" />
            <HeaderAccount>
            <PageFormName>OperHoursForm</PageFormName>
            <InternalHelpdesk>ONLY</InternalHelpdesk>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.OperHoursForm.SITEID</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentDefaultSettings>true</DependentDefaultSettings>
            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue><!-- TBD $$ADMIN_SITEPREFERENCE$$ Parsing needs to be supported in the parser to fetch the req parameter/attribute-->
            <PostAjaxFunction>accountUpdated()</PostAjaxFunction>
                <DependentParameters>configId=1</DependentParameters>
            <Script>
                function accountUpdated()
                {
                    parent["IsNotFirstTime"] = false;
                    callOperAjax('getValue');
                }
            </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
        <HeaderAccount>
            <PageFormName>OperHoursForm</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.OperHoursForm.SITEID</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentDefaultSettings>true</DependentDefaultSettings>
            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue><!-- TBD $$ADMIN_SITEPREFERENCE$$ Parsing needs to be supported in the parser to fetch the req parameter/attribute-->
            <PostAjaxFunction>accountUpdated()</PostAjaxFunction>
                <DependentParameters>configId=1&amp;includeReferSites=true</DependentParameters>
            <Script>
                function accountUpdated()
                {
                    parent["IsNotFirstTime"] = false;
                    callOperAjax('getValue');
                }
            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.setup.QueueDef_jsp">
    	<Parameters>
			<Param Name="editForm" Value="true" />
	        <HeaderAccount>
	            <PageFormName>GroupAction</PageFormName>
	            <ShowAllAccounts>true</ShowAllAccounts>
	            <StyleClass>formStyle</StyleClass>
	            <DependentElement>document.GroupAction.SITEID</DependentElement>
	            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
	            <DependentDefaultSettings>true</DependentDefaultSettings>
	            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue><!-- TBD $$ADMIN_SITEPREFERENCE$$ Parsing needs to be supported in the parser to fetch the req parameter/attribute-->
	            <DependentParameters>configId=4&amp;includeReferSites=true</DependentParameters>
	            <PostAjaxFunction>accountUpdated_EditQueueDef()</PostAjaxFunction>
	            <i18nKey>sdp.common.defaultsetting</i18nKey>
	            <Script>
	                var isEditPageLoad = true;
					function accountUpdated_EditQueueDef()
					{
						if(!isEditPageLoad)
						{
							accountUpdated_QueueDef();
						}else{
							accountUpdated_QueueDef(false);
						}
						isEditPageLoad = false;
					}
	            </Script>
	        </HeaderAccount>
        </Parameters>
        <Parameters>
			<HeaderAccount>
	            <PageFormName>GroupAction</PageFormName>
	            <ShowAllAccounts>true</ShowAllAccounts>
	            <StyleClass>formStyle</StyleClass>
	            <DependentElement>document.GroupAction.SITEID</DependentElement>
	            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
	            <DependentDefaultSettings>true</DependentDefaultSettings>
	            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue><!-- TBD $$ADMIN_SITEPREFERENCE$$ Parsing needs to be supported in the parser to fetch the req parameter/attribute-->
	            <DependentParameters>configId=4&amp;includeReferSites=true</DependentParameters>
	            <PostAjaxFunction>accountUpdated_AddQueueDef()</PostAjaxFunction>
	            <i18nKey>sdp.common.defaultsetting</i18nKey>
		    <i18nKey>ae.cmdb.admin.leftnav.supportGroup</i18nKey>
		    <i18nKey>sdp.common.for</i18nKey>
		    <i18nKey>sdp.msp.admin.mspDetails</i18nKey>

		    <Script>
            var pageReload=true;
            function accountUpdated_AddQueueDef(){
                if(!pageReload){
                    accountUpdated_QueueDef();
                }else{
                    accountUpdated_QueueDef(false);
                }
                pageReload=false;
            }
			var queueTitle = getMessageForKey("sdp.msp.admin.mspDetails")+' - '+' '+getMessageForKey('ae.cmdb.admin.leftnav.supportGroup')+' '+
					 getMessageForKey("sdp.common.for");
			document.getElementById("queueHeader").innerHTML = queueTitle;
			document.getElementById("queueHeader").className='fontbigBold';

		    </Script>

	        </HeaderAccount>
        </Parameters>
    </Page>
        <Page className="org.apache.jsp.workorder.WOForm_jsp">
        <Parameters>
            <Param Name="woMode" Value="newWO"/>
            <HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>$req.mspform.handleAccountChangeEvent()</Onchange>
                <StyleClass>formStyle</StyleClass>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="woMode" Value="createService"/>
            <Param Name="linkService" Value="linkService"/>
            <AccountDisplay>
	            <QueryParam>linkWorkOrderId</QueryParam>
	            <Attribute>WF_ACCOUNTID</Attribute>
	            <Query>
	                <Table Name="WorkOrderAccountMapping">
	                    <Column TableName="WorkOrderAccountMapping" ColumnName="WORKORDERID" />
	                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
	                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
	                    <MatchingCriteria TableName="WorkOrderAccountMapping" ColumnName="WORKORDERID" />
	                    <Join baseTableName="WorkOrderAccountMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
	                </Table>
	            </Query>
	            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="woMode" Value="editWO"/>
            <Param Name="changeAccount" Value="true"/>
             <HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <DependentElement>document.WorkOrderForm.siteID</DependentElement>
                
                <PostAjaxFunction>populateSite()</PostAjaxFunction>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Script>
                var oldAccountId = getAccountIdFromSiteAccountModel();
                var prevGrpValue = grpValue;
                var prevTechValue = techValue;
                var templateId;
                
                function initMSPScripts(){
                
                document.getElementById('__persistentAccountId__select').value = 0;
                var form = document.WorkOrderForm;
                var siteBox=form.siteID;
                var selectedSiteId = siteBox.value;
				var ruleSiteId;
				var ruleAccountId;
                var rendAcc;

                if(getAccountId()==0){

                    refreshSGTAndCSI_FF(form,form.reqTemplate.value);
                }
                else{
                    //refreshSGTAndCSI_FF(form);
                    try{
						ruleAccountId = getAccountId();
						fieldFormRulesExec();
					}catch(e){
						//FF may not work in case of shared requests of other accounts. need to handle. catching as of now - FIX ME
					}
                }
                autosuggest();
                
                //Fix for Issue #10669
                //createWoModeElement();
		setTimeout("updateRequesterUrl()",500);

				}

                function populateSite() {
                    document.getElementById("siteID").value=sitValue;
                }

                function siteBoxHandler(){
                    setSelectOption(siteBox,selectedSiteId);
                }

                function createWoModeElement(){
                    var woMode = document.createElement('input');
                    woMode.setAttribute('type', 'hidden');
                    woMode.setAttribute('name', 'woMode');
                    woMode.setAttribute('value', 'viewWO');
                    document.getElementById("RequestFormID").appendChild(woMode);
                }

                function siteChanged() {
                    //refreshSGTAndCSI(form,templateId);
                    refreshSGT();
                    updateDeliveryString(module,templateId,siteBox.value);
                    getRenderedSiteAcc();
                        }
						
               function emailCCAutoSuggest(ele) {

                    ele.options.callback=function (element,entry){
                    return "&amp;"+entry+"&amp;persistentAccountId="+siteAccountModel[document.WorkOrderForm.siteID.value];
               }
                        }

            function refreshPage() {
                var tm = new Date().getTime();
                window.location.href="/WorkOrder.do?woMode=newWO&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;tm="+tm;
            }
 function getRenderedSiteAcc() {
                if(document.WorkOrderForm.siteID.value == null || document.WorkOrderForm.siteID.value == "") {
                    setTimeout("getRenderedSiteAcc()",500);
                }
                else {
                    rendAcc=siteAccountModel[document.WorkOrderForm.siteID.value];
                    rendSite=document.WorkOrderForm.siteID.value;
                }
            }

            function canResetAssets() {
                    if(jQuery('#selectedCIs').val()==""){
                        return false;
                    }
                    return true;
                    
                    /*if((document.getElementById('workstationID').options == undefined) || ((document.getElementById('workstationID').options != undefined) &amp;&amp; (document.getElementById('workstationID').options[0].innerHTML != getMessageForKey("sdp.requests.viewrequest.noworkstation")))) {
                        return true;
                    }
                    return false;*/
            }

            function canResetApprovers(){

                   var ccUsers = $('ccField');
                   var editors = $('editorField');
                   var approvers = $('selApprs');
                   if(ccUsers &amp;&amp; ccUsers.value!="" || editors &amp;&amp; editors.value!="" || approvers &amp;&amp;approvers.value!=""){
                        return true;
                   }
                   return false;

            }
            function updateApprovers(){
                if(getAccountId() == "0"){
                    var newAccountId = getAccountIdFromSiteAccountModel();
                    if(newAccountId != oldAccountId){
                        updateSRApprList();
                        oldAccountId = newAccountId;
                    }
                }
            }
  function refreshAssetsAndApprovers(isUserSearch){

                   if(isUserSearch == undefined || isUserSearch == null){
                    isUserSearch = false;
                   }
                   var resetAssets = isUserSearch ? true : canResetAssets();
                   var resetApprovers = canResetApprovers();
                   if(resetAssets &amp;&amp; resetApprovers ){

                        if(isUserSearch || confirm(getMessageForKey('sdp.msp.sitechange.msg'))){

                                updateSelectedCIDropdown(jQuery("#selectedCIs"), 0, [], jQuery('#maxCICount')[0].value);
                                /*if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
                                        clearMSPAssets();
                                }*/
                                clearEditorsAndApprovers();
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }

                   else if(resetAssets){

                        if( isUserSearch || confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
                                updateSelectedCIDropdown(jQuery("#selectedCIs"), 0, [], jQuery('#maxCICount')[0].value);
                                /*if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
                                        clearMSPAssets();
                                }*/
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }

                   else if(resetApprovers){

                        if(confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
                                clearEditorsAndApprovers();
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }
                   updateApprovers();
            }
 function refreshAccountDataOnSiteChange(isUserSearch){

                  var siteId=document.WorkOrderForm.siteID.value;
                  var accountId=siteAccountModel[document.WorkOrderForm.siteID.value];
                  ruleSiteId = document.WorkOrderForm.siteID.value;
                  if(rendAcc!=accountId){

                        refreshAssetsAndApprovers(isUserSearch);
                        refreshSiteCategories(accountId);
                        refreshSGT();
                        updateRequesterUrl();
                        updateDeliveryString(module,templateId,siteId);
                        refreshServiceCategories(accountId);
						loadFAFRscripts();



                  }
                  rendSite = document.WorkOrderForm.siteID.value;
                  rendAcc = siteAccountModel[document.WorkOrderForm.siteID.value];

            }

            /*This method will be called in two cases
            i)Onchange event on site box
            ii)Selecting a requester using auto suggest*/
            function refreshSiteCategories(accountID) {

                refreshAccountCategories_FF(document.WorkOrderForm,accountID);
            }

            function refreshSGT() {
                var grp = $('GROUPID');
                var tch = $('TECHNICIANID');
                var site = $('siteID');
                var svalue = null;
                if(site) { svalue = site.value; }
                invokeSGTPopulation(site, grp, tch, "0", "0", svalue);
                
                //Fix for Issue ID - ##10122## start..
                    //parent.document.getElementById("siteID").className ="formStyle";
                //Fix for Issue ID - ##10122## end..

                jQuery("#GROUPID").val(prevGrpValue).trigger("change");
                jQuery("#TECHNICIANID").val(prevTechValue).trigger("change");

            }

                

                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="woMode" Value="editWO"/>
            <AccountDisplay>
            <QueryParam>woID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
             <HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <DependentElement>document.WorkOrderForm.siteID</DependentElement>
                <DependentFunctionCall>get_sites_for_account_with_title</DependentFunctionCall>
                <PostAjaxFunction>populateSite()</PostAjaxFunction>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Script>
                var ruleAccountId = getAccountId();
                function initMSPScripts(){
                
                var form = document.WorkOrderForm;
                var siteBox=form.siteID;
                var selectedSiteId = siteBox.value;

                if(getAccountId()==0){

                    refreshSGTAndCSI_FF(form,form.reqTemplate.value);
                }
                
                autosuggest();
                
                //Fix for Issue #10669
                //createWoModeElement();
		setTimeout("updateRequesterUrl()",500);

				}

                function populateSite() {
                    document.getElementById("siteID").value=sitValue;
                }

                function siteBoxHandler(){
                    setSelectOption(siteBox,selectedSiteId);
                }

                function createWoModeElement(){
                    var woMode = document.createElement('input');
                    woMode.setAttribute('type', 'hidden');
                    woMode.setAttribute('name', 'woMode');
                    woMode.setAttribute('value', 'viewWO');
                    document.getElementById("RequestFormID").appendChild(woMode);
                }

                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="woMode" Value="viewWO"/>
            <HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <StyleClass>formStyle</StyleClass>
                <Disabled>true</Disabled>
                <DependentElement>document.WorkOrderForm.siteID</DependentElement>
                <DependentFunctionCall>get_sites_for_account_with_title</DependentFunctionCall>
                <PostAjaxFunction>populateSite()</PostAjaxFunction>
        <ShowAllAccounts>true</ShowAllAccounts>
                        <Script>
                        function populateSite() {
                            document.getElementById("siteID").value=sitValue;
                        }
                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="woMode" Value="copyWO"/>
			 <AccountDisplay>
            <QueryParam>workOrderID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <DependentElement>document.WorkOrderForm.siteID</DependentElement>
                <DependentFunctionCall>get_sites_for_account_with_title</DependentFunctionCall>
                <PostAjaxFunction>populateSite()</PostAjaxFunction>
        <ShowAllAccounts>true</ShowAllAccounts>
                        <Script>
						var ruleAccountId;
                        function populateSite() {
                            document.getElementById("siteID").value=sitValue;
                        }
                </Script>
            </HeaderAccount>
        </Parameters>
	<Parameters>
	<Param Name="CTI" Value="TRUE"/> 
	   <AccountDisplay>
            <QueryParam>reqID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="UserDepartment">
                 <Column TableName="UserDepartment" ColumnName="USERID" />
                        <Column TableName="UserDepartment" ColumnName="DEPTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="UserDepartment" ColumnName="USERID" />
                        <Join baseTableName="UserDepartment" baseTableColumn="DEPTID" joinTableName="DepartmentDefinition" joinTableColumn="DEPTID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="DepartmentDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />

		</Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
		<HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>refreshPage()</Onchange>
                <StyleClass>formStyle</StyleClass>
		<StyleId>__pAccountId__select</StyleId>
                <i18nKey>sdp.requests.viewrequest.noworkstation</i18nKey>
                <i18nKey>sdp.msp.request.nosuchrequester.info</i18nKey>
                <i18nKey>sdp.msp.sitechange.msg</i18nKey>
		<i18nKey>sdp.msp.common.allAccounts</i18nKey>
                <PostAjaxFunction>updateAccountCombo();refreshSGT()</PostAjaxFunction>
                <Script>
                var prevGrpValue = grpValue;
               var prevTechValue = techValue;
               var form = document.WorkOrderForm;
               var templateId;
               var module = 'incident_request';
               if('__java("requestServiceId")'!='null'){
                    jQuery('#__persistentAccountId__select').prop('disabled',true);
                    jQuery('#__persistentAccountId__select').removeClass('accountFormStyle');
                    jQuery('#__persistentAccountId__select').addClass('accountStyleDisabled');
                    templateId = '__java("reqTemplate")';
                    module = 'service_request';
               }
               else if(form.reqTemplate){
                    templateId = form.reqTemplate.value;
               }
               var showConDetails = '__java("showContractDetails")';
               addViewContractDetailsImage(showConDetails);
               
			function initMSPScripts(){
			
               var form = document.WorkOrderForm;
               
               var siteBox = form.siteID;
               var serviceCategoryBox = $('SERVICE');
               var templateBox = form.reqTemplate;
               var accountId = getAccountId();
               var rendAcc;
               var rendSite;
               document.getElementById('requesterID').value=-1;
               
			   var ruleSiteId;
			   var ruleAccountId;

               if(accountId != 0) {
                    populateAccountSites(accountId,siteBox,false,siteChanged,siteBox.value,"setInSession=false&amp;persistAccountID=false",null,null,false);
               }
		 else {
                    setOnChange('siteID',refreshAccountDataOnSiteChange);
               }

               refreshSGTAndCSI_FF(form,templateId);

               autosuggest();
               getRenderedSiteAcc();
               if(typeof emailCCAutoCompleter != &quot;undefined&quot;) {
                    emailCCAutoSuggest(emailCCAutoCompleter);
               }
               if(typeof editorAutoCompleter != &quot;undefined&quot;) {
                    emailCCAutoSuggest(editorAutoCompleter);
               }
                updateRequesterUrl();
				updateSRApprList();
               
               }
               
	       function updateAccountCombo(){
		url = '/servlet/AJaxServlet';
   		var accAjax = new Ajax.Request(url, {
                                   method: 'post',     // No i18n
                                   parameters: {action:'getAccounts',allAccounts:"true" ,restrictUser:"true"},    //No i18n
                                   onComplete:function(resp) {
                                         document.getElementById("__pAccountId__select").disabled=false;
					 updateComboForJson(resp.responseText,document.getElementById("__pAccountId__select"),false,"","text","key",null,accountId); 
					  document.getElementById('__pAccountId__select').onchange=refreshPage;
					 }
   				});	
		
		}
		updateAccountCombo();
               function siteChanged() {
                    //refreshSGTAndCSI(form,templateId);
                    refreshSGT();
                    updateDeliveryString(module,templateId,siteBox.value);
                    getRenderedSiteAcc();
               }

               function emailCCAutoSuggest(ele) {

                    ele.options.callback=function (element,entry){
                    return "&amp;"+entry+"&amp;persistentAccountId="+siteAccountModel[document.WorkOrderForm.siteID.value];
               }
            }

            function refreshPage() {
                var tm = new Date().getTime();
                window.location.href="/WorkOrder.do?woMode=newWO&amp;persistentAccountId="+document.getElementById('__pAccountId__select').value+"&amp;tm="+tm;
            }
 function getRenderedSiteAcc() {
                if(document.WorkOrderForm.siteID.value == null || document.WorkOrderForm.siteID.value == "") {
                    setTimeout("getRenderedSiteAcc()",500);
                }
                else {
                    rendAcc=siteAccountModel[document.WorkOrderForm.siteID.value];
                    rendSite=document.WorkOrderForm.siteID.value;
                }
            }

            function canResetAssets() {
            		if(!document.getElementById("selectedCIs") || jQuery('#selectedCIs').val()==""){
                        // if asset field is not present (Standard license) or asset field is empty
            			return false;
            		}
            		return true;
            		
                    /*if((document.getElementById('workstationID').options == undefined) || ((document.getElementById('workstationID').options != undefined) &amp;&amp; (document.getElementById('workstationID').options[0].innerHTML != getMessageForKey("sdp.requests.viewrequest.noworkstation")))) {
                        return true;
                    }
                    return false;*/
            }

            function canResetApprovers(){

                   var ccUsers = $('ccField');
                   var editors = $('editorField');
                   var approvers = $('selApprs');
                   if(ccUsers &amp;&amp; ccUsers.value!="" || editors &amp;&amp; editors.value!="" || approvers &amp;&amp;approvers.value!=""){
                        return true;
                   }
                   return false;

            }
  function refreshAssetsAndApprovers(isUserSearch){

                   var resetAssets = isUserSearch ? true : canResetAssets();
                   var resetApprovers = canResetApprovers();
                   if(resetAssets &amp;&amp; resetApprovers ){

                        if(isUserSearch || confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
								updateSelectedCIDropdown(jQuery("#selectedCIs"), 0, [], jQuery('#maxCICount')[0].value);
                                /*if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
                                        clearMSPAssets();
                                }*/
                                clearEditorsAndApprovers();
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }

                   else if(resetAssets){

                        if( isUserSearch || confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
                        		updateSelectedCIDropdown(jQuery("#selectedCIs"), 0, [], jQuery('#maxCICount')[0].value);
                                /*if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
                                        clearMSPAssets();
                                }*/
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }

                   else if(resetApprovers){

                        if(confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
                                clearEditorsAndApprovers();
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }
            }
 function refreshAccountDataOnSiteChange(isUserSearch){

                  var siteId=document.WorkOrderForm.siteID.value;
                  var accountId=siteAccountModel[document.WorkOrderForm.siteID.value];
                  ruleSiteId = document.WorkOrderForm.siteID.value;
				  if(rendAcc!=accountId){

                        refreshSiteCategories(accountId);
                        refreshSGT();
						refreshAssetsAndApprovers(isUserSearch);
                        updateRequesterUrl();
                        updateDeliveryString(module,templateId,siteId);
                        refreshServiceCategories(accountId);
						loadFAFRscripts();



                  }
                  rendSite = document.WorkOrderForm.siteID.value;
                  rendAcc = siteAccountModel[document.WorkOrderForm.siteID.value];

            }

            /*This method will be called in two cases
            i)Onchange event on site box
            ii)Selecting a requester using auto suggest*/
            function refreshSiteCategories(accountID) {

                refreshAccountCategories_FF(document.WorkOrderForm,accountID);
            }

            function refreshSGT() {
                var grp = $('GROUPID');
                var tch = $('TECHNICIANID');
                var site = $('siteID');
                var svalue = null;
                if(site) { svalue = site.value; }
                invokeSGTPopulation(site, grp, tch, "0", "0", svalue);
                
                jQuery("#GROUPID").val(prevGrpValue).trigger("change");
		  		jQuery("#TECHNICIANID").val(prevTechValue).trigger("change");	

            }
	      function updateAccountCombo(){
                url = '/servlet/AJaxServlet';
                var ldapAjax = new Ajax.Request(url, {
                                   method: 'post',     // No i18n
                                   parameters: {action:'getAccounts',allAccounts:"true" ,restrictUser:"true"},    //No i18n
                                   onComplete:function(resp) {
                                         document.getElementById("__pAccountId__select").disabled=false;
                                         updateComboForJson(resp.responseText,document.getElementById("__pAccountId__select"),false,"","text","key",null,accountId);
                                     }
                                });
		refreshSGT();

                }
                updateAccountCombo();
            var quickReq = '__java("quickReq")';
            if(quickReq=='gotoNew') {
                setTimeout("setAccountAndSite()",500);
            }
function setAccountAndSite() {

                var accountId = __java("accId");
                if(accountId==-1) {
                    accountId=0;
                }
                var siteId = __java("siteID");
                document.getElementById("__persistentAccountId__select").value = accountId;
                jQuery("#__persistentAccountId__select").select2("val", accountId);
                populateAccountSites(accountId, document.getElementById('siteID'),true, null,siteId);
            }

            function showContractDetails(accountId){

                var title = getMessageForKey("sdp.msp.billing.contractusagedetails");
                showURLInDialog('ContractUsage.do?showContractDetails=true&amp;accountId='+accountId,'title='+title);

            }

            function addViewContractDetailsImage(showConDetails){

                var link=document.getElementById('viewContractDetails').parentNode.removeChild(document.getElementById('viewContractDetails'));
                if(showConDetails=='true'){

                        document.getElementById("siteID").parentNode.appendChild(link);
                }

            }

            //setTimeout("updateRequesterUrl()",500);
            </Script>

            </HeaderAccount>	
	</Parameters>
	<Parameters>
	<HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>refreshPage()</Onchange>
                <StyleClass>formStyle</StyleClass>
                <i18nKey>sdp.requests.viewrequest.noworkstation</i18nKey>
                <i18nKey>sdp.msp.request.nosuchrequester.info</i18nKey>
                <i18nKey>sdp.msp.sitechange.msg</i18nKey>
                <PostAjaxFunction>refreshSGT()</PostAjaxFunction>
                <Script>
                 var oldAccountId = getAccountIdFromSiteAccountModel();
                 var prevGrpValue = grpValue;
               var prevTechValue = techValue;
               var templateId;
               var form = document.WorkOrderForm;
               var module = 'incident_request';
               if('__java("requestServiceId")'!='null'){
               		jQuery('#__persistentAccountId__select').prop('disabled',true);
                    jQuery('#__persistentAccountId__select').removeClass('accountFormStyle');
                    jQuery('#__persistentAccountId__select').addClass('accountStyleDisabled');
                    templateId = '__java("reqTemplate")';
                    module = 'service_request';
               }
               else if(form.reqTemplate){
                    templateId = form.reqTemplate.value;
               }
               var showConDetails = '__java("showContractDetails")';
               addViewContractDetailsImage(showConDetails);
               
			function initMSPScripts(){
               var form = document.WorkOrderForm;
               var siteBox = form.siteID;
               var serviceCategoryBox = $('SERVICE');
               var templateBox = form.reqTemplate;
               var accountId = getAccountId();
               var rendAcc;
               var rendSite;
               document.getElementById('requesterID').value=-1;
               
			   var ruleSiteId;
			   var ruleAccountId;

               if(accountId != 0) {
                    populateAccountSites(accountId,siteBox,false,siteChanged,siteBox.value,null,null,null,false);
               }
		 else {
                    setOnChange('siteID',refreshAccountDataOnSiteChange);
               }

               refreshSGTAndCSI_FF(form,templateId);

              
               autosuggest();
               getRenderedSiteAcc();
               if(typeof emailCCAutoCompleter != &quot;undefined&quot;) {
                    emailCCAutoSuggest(emailCCAutoCompleter);
               }
               if(typeof editorAutoCompleter != &quot;undefined&quot;) {
                    emailCCAutoSuggest(editorAutoCompleter);
               }
               updateRequesterUrl();
				updateSRApprList();
			}
               function siteChanged() {
                    //refreshSGTAndCSI(form,templateId);
                    refreshSGT();
                    updateDeliveryString(module,templateId,siteBox.value);
                    getRenderedSiteAcc();
               }

               function emailCCAutoSuggest(ele) {

                    ele.options.callback=function (element,entry){
                    return "&amp;"+entry+"&amp;persistentAccountId="+siteAccountModel[document.WorkOrderForm.siteID.value];
               }
            }

            function refreshPage() {
                var tm = new Date().getTime();
                window.location.href="/WorkOrder.do?woMode=newWO&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;tm="+tm;
            }
 function getRenderedSiteAcc() {
                if(document.WorkOrderForm.siteID.value == null || document.WorkOrderForm.siteID.value == "") {
                    setTimeout("getRenderedSiteAcc()",500);
                }
                else {
                    rendAcc=siteAccountModel[document.WorkOrderForm.siteID.value];
                    rendSite=document.WorkOrderForm.siteID.value;
                }
            }

            function canResetAssets() {
            		if(!document.getElementById("selectedCIs") || jQuery('#selectedCIs').val()==""){
                        // if asset field is not present (Standard license) or asset field is empty
            			return false;
            		}
            		return true;
            		
                    /*if((document.getElementById('workstationID').options == undefined) || ((document.getElementById('workstationID').options != undefined) &amp;&amp; (document.getElementById('workstationID').options[0].innerHTML != getMessageForKey("sdp.requests.viewrequest.noworkstation")))) {
                        return true;
                    }
                    return false;*/
            }

            function canResetApprovers(){

                   var ccUsers = $('ccField');
                   var editors = $('editorField');
                   var approvers = $('selApprs');
                   if(ccUsers &amp;&amp; ccUsers.value!="" || editors &amp;&amp; editors.value!="" || approvers &amp;&amp;approvers.value!=""){
                        return true;
                   }
                   return false;

            }
			function updateApprovers(){
				if(getAccountId() == "0"){
					var newAccountId = getAccountIdFromSiteAccountModel();
					if(newAccountId != oldAccountId){
						updateSRApprList();
						oldAccountId = newAccountId;
					}
				}
			}
  function refreshAssetsAndApprovers(isUserSearch){

                   if(isUserSearch == undefined || isUserSearch == null){
					isUserSearch = false;
				   }
				   var resetAssets = isUserSearch ? true : canResetAssets();
                   var resetApprovers = canResetApprovers();
                   if(resetAssets &amp;&amp; resetApprovers ){

                        if(isUserSearch || confirm(getMessageForKey('sdp.msp.sitechange.msg'))){

                                updateSelectedCIDropdown(jQuery("#selectedCIs"), 0, [], jQuery('#maxCICount')[0].value);
                                /*if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
                                        clearMSPAssets();
                                }*/
                                clearEditorsAndApprovers();
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }

                   else if(resetAssets){

                        if( isUserSearch || confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
                                updateSelectedCIDropdown(jQuery("#selectedCIs"), 0, [], jQuery('#maxCICount')[0].value);
                                /*if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
                                        clearMSPAssets();
                                }*/
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }

                   else if(resetApprovers){

                        if(confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
                                clearEditorsAndApprovers();
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }
				   updateApprovers();
            }
 function refreshAccountDataOnSiteChange(isUserSearch){

                  var siteId=document.WorkOrderForm.siteID.value;
                  var accountId=siteAccountModel[document.WorkOrderForm.siteID.value];
                  ruleSiteId = document.WorkOrderForm.siteID.value;
				  if(rendAcc!=accountId){

                        refreshAssetsAndApprovers(isUserSearch);
						refreshSiteCategories(accountId);
                        refreshSGT();
                        updateRequesterUrl();
                        updateDeliveryString(module,templateId,siteId);
                        refreshServiceCategories(accountId);
						loadFAFRscripts();



                  }
                  rendSite = document.WorkOrderForm.siteID.value;
                  rendAcc = siteAccountModel[document.WorkOrderForm.siteID.value];

            }

            /*This method will be called in two cases
            i)Onchange event on site box
            ii)Selecting a requester using auto suggest*/
            function refreshSiteCategories(accountID) {

                refreshAccountCategories_FF(document.WorkOrderForm,accountID);
            }

            function refreshSGT() {
                var grp = $('GROUPID');
                var tch = $('TECHNICIANID');
                var site = $('siteID');
                var svalue = null;
                if(site) { svalue = site.value; }
                invokeSGTPopulation(site, grp, tch, "0", "0", svalue);
				
                //Fix for Issue ID - ##10122## start..
                    //parent.document.getElementById("siteID").className ="formStyle";
                //Fix for Issue ID - ##10122## end..

                jQuery("#GROUPID").val(prevGrpValue).trigger("change");
				jQuery("#TECHNICIANID").val(prevTechValue).trigger("change");

            }

            var quickReq = '__java("quickReq")';
            if(quickReq=='gotoNew') {
                setTimeout("setAccountAndSite()",500);
            }
function setAccountAndSite() {

                var accountId = __java("accId");
                if(accountId==-1) {
                    accountId=0;
                }
                var siteId = __java("siteID");
                document.getElementById("__persistentAccountId__select").value = accountId;
                jQuery("#__persistentAccountId__select").select2("val", accountId);
                populateAccountSites(accountId, document.getElementById('siteID'),true, null,siteId);
            }

            function showContractDetails(accountId){

                var title = getMessageForKey("sdp.msp.billing.contractusagedetails");
                showURLInDialog('ContractUsage.do?showContractDetails=true&amp;accountId='+accountId,'title='+title);

            }

            function addViewContractDetailsImage(showConDetails){

                var link=document.getElementById('viewContractDetails').parentNode.removeChild(document.getElementById('viewContractDetails'));
                if(showConDetails=='true'){

                        document.getElementById("siteID").parentNode.appendChild(link);
                }

            }

            
            </Script>

            </HeaderAccount>
        </Parameters>
        <!--Parameters>
            <HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>refreshPage()</Onchange>
                <StyleClass>formStyle</StyleClass>
                <IncludeJSP>/workorder/IncludeViewRequestHistoryLink.jsp</IncludeJSP>
                <i18nKey>sdp.requests.viewrequest.noworkstation</i18nKey>
                <i18nKey>sdp.msp.request.nosuchrequester.info</i18nKey>
                <i18nKey>sdp.msp.sitechange.msg</i18nKey>
                <PostAjaxFunction>refreshSGT()</PostAjaxFunction>
                <Script>

               var form = document.WorkOrderForm;
               var templateId;
               var module = 'incident_request';
               if('__java("requestServiceId")'!='null'){
                    jQuery('#__persistentAccountId__select').attr('disabled','disabled');
                    jQuery('#__persistentAccountId__select').removeClass('accountFormStyle');
                    jQuery('#__persistentAccountId__select').addClass('accountStyleDisabled');
                    templateId = '__java("reqTemplate")';
                    module = 'service_request';
               }
	       else if(form.reqTemplate){
		    templateId = form.reqTemplate.value;
	       }
               var siteBox = form.siteID;
               var serviceCategoryBox = $('SERVICE');
               var templateBox = form.reqTemplate;
               var accountId = getAccountId();
               var rendAcc;
               var rendSite;
               document.getElementById('requesterID').value=-1;
	       var prevGrpValue;
	       var prevTechValue;
		
	       if($('GROUPID')){
			prevGrpValue = $('GROUPID').value;
	       }
	       if($('TECHNICIANID')){

			prevTechValue = $('TECHNICIANID').value;
	       }

               if(accountId != 0) {
                    populateAccountSites(accountId,siteBox,false,siteChanged,siteBox.value);
               }
               else {
                    setOnChange('siteID',refreshAccountDataOnSiteChange);
               }

               refreshSGTAndCSI(form,templateId);
               refreshServiceCategories(serviceCategoryBox,accountId);
               addViewRequestHistoryLink();

	       var showConDetails = '__java("showContractDetails")';
	       addViewContractDetailsImage(showConDetails);
               autosuggest();
               getRenderedSiteAcc();
               if(typeof emailCCAutoCompleter != &quot;undefined&quot;) {
                    emailCCAutoSuggest(emailCCAutoCompleter);
               }
               if(typeof editorAutoCompleter != &quot;undefined&quot;) {
                    emailCCAutoSuggest(editorAutoCompleter);
               }

               function siteChanged() {
                    //refreshSGTAndCSI(form,templateId);
                    refreshSGT();
		    updateDeliveryString(module,templateId,siteBox.value);
                    getRenderedSiteAcc();
               }

               function emailCCAutoSuggest(ele) {

                    ele.options.callback=function (element,entry){
                    return "&amp;"+entry+"&amp;persistentAccountId="+siteAccountModel[document.WorkOrderForm.siteID.value];
               }
            }

            function refreshPage() {
                var tm = new Date().getTime();
                window.location.href="/WorkOrder.do?persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;tm="+tm;
            }


            function getRenderedSiteAcc() {
                if(document.WorkOrderForm.siteID.value == null || document.WorkOrderForm.siteID.value == "") {
                    setTimeout("getRenderedSiteAcc()",500);
                }
                else {
                    rendAcc=siteAccountModel[document.WorkOrderForm.siteID.value];
                    rendSite=document.WorkOrderForm.siteID.value;
                }
            }

	    function canResetAssets() {

		    if((document.getElementById('workstationID').options == undefined) || ((document.getElementById('workstationID').options != undefined) &amp;&amp; (document.getElementById('workstationID').options[0].innerHTML != getMessageForKey("sdp.requests.viewrequest.noworkstation")))) {
			return true;
                    }
		    return false;
            }

	    function canResetApprovers(){

		   var ccUsers = $('ccField');
		   var editors = $('editorField');
		   var approvers = $('apprNames');
		   if(ccUsers &amp;&amp; ccUsers.value!="" || editors &amp;&amp; editors.value!="" || approvers &amp;&amp;approvers.value!=""){
			return true;
		   }
		   return false;

	    }

	    function refreshAssetsAndApprovers(isUserSearch){

		   var resetAssets = isUserSearch ? false : canResetAssets();
		   var resetApprovers = canResetApprovers();
		   if(resetAssets &amp;&amp; resetApprovers ){

			if(confirm(getMessageForKey('sdp.msp.sitechange.msg'))){

				if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
			    		clearMSPAssets();
                  		}
				clearEditorsAndApprovers();
			}
			else{
				document.WorkOrderForm.siteID.value= rendSite;
			}
		   }

		   else if(resetAssets){

			if( confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
				if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
				    clearMSPAssets();
                	  	}
			}
			else{
				document.WorkOrderForm.siteID.value= rendSite;
			}
		   }

		   else if(resetApprovers){

			if(confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
				clearEditorsAndApprovers();
			}
			else{
				document.WorkOrderForm.siteID.value= rendSite;
			}
		   }
	    }

            function refreshAccountDataOnSiteChange(isUserSearch){

		  var siteId=document.WorkOrderForm.siteID.value;
                  var accountId=siteAccountModel[document.WorkOrderForm.siteID.value];
                  if(rendAcc!=accountId){

			refreshSiteCategories(accountId);
  			refreshSGT();
			refreshAssetsAndApprovers(isUserSearch);
			updateRequesterUrl();
			updateDeliveryString(module,templateId,siteBox.value);
			refreshServiceCategories(serviceCategoryBox,siteAccountModel[siteBox.value]);



		  }
		  rendSite = document.WorkOrderForm.siteID.value;
		  rendAcc = siteAccountModel[document.WorkOrderForm.siteID.value];

	    }

     	    /*This method will be called in two cases
            i)Onchange event on site box
            ii)Selecting a requester using auto suggest*/
            function refreshSiteCategories(accountID) {

                refreshAccountCategories(document.WorkOrderForm,accountID);
            }

            function refreshSGT() {
                var grp = $('GROUPID');
                var tch = $('TECHNICIANID');
                var site = $('siteID');
                var svalue = null;
                if(site) { svalue = site.value; }
                invokeSGTPopulation(site, grp, tch, "0", "0", svalue);
                setSelectOption($('GROUPID'),prevGrpValue);
				setSelectOption($('TECHNICIANID'),prevTechValue);

            }

            var quickReq = '__java("quickReq")';
            if(quickReq=='gotoNew') {
                setTimeout("setAccountAndSite()",500);
            }

            function setAccountAndSite() {

                var accountId = __java("accId");
                if(accountId==-1) {
                    accountId=0;
                }
                var siteId = __java("siteID");
                document.getElementById("__persistentAccountId__select").value = accountId;
                jQuery("#__persistentAccountId__select").select2("val", accountId);
                populateAccountSites(accountId, document.getElementById('siteID'),true, null,siteId);
            }

            function showContractDetails(accountId){

                var title = getMessageForKey("sdp.msp.billing.contractusagedetails");
                showURLInDialog('ContractUsage.do?showContractDetails=true&amp;accountId='+accountId,'title='+title);

            }

            function addViewContractDetailsImage(){

                var link=document.getElementById('viewContractDetails').parentNode.removeChild(document.getElementById('viewContractDetails'));
   		if(showConDetails=='true'){

                	document.getElementById("siteID").parentNode.appendChild(link);
		}

            }

            setTimeout("updateRequesterUrl()",500);
            </Script>

            </HeaderAccount>
        </Parameters-->
    </Page>
    <Page className="org.apache.jsp.setup.TechnicianDef_jsp">
        <HeaderAccount>
            <PageFormName>TechnicianView1</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.TechnicianView1.techViewName</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentParameters>configId=7&amp;includeReferSites=true</DependentParameters>
            <DependentAllSites>-1</DependentAllSites>
            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue><!-- TBD $$ADMIN_SITEPREFERENCE$$ Parsing needs to be supported in the parser to fetch the req parameter/attribute-->
            <PostAjaxFunction>onAccountUpdate()</PostAjaxFunction>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
            <i18nKey>sdp.msp.selectSite.error</i18nKey>
            <i18nKey>sdp.msp.tech.defaultTechnician.list</i18nKey>
            <Script>
            function isUserExists(userForm){	
				var reqUser=userForm.reportingTo.value;
				var reqUserId=userForm.reportingToid.value;
    			if (reqUser!=""){
        			var result = jQuery.ajax({type: 'GET',url: 'servlet/AJaxServlet',data: {action: "isUserExists",search: reqUser,searchUserid:reqUserId,isTechReportingTo:"true"},contentType: 'application/json',mimetype: "text/json",dataType:'json',cache: false,async: false}).responseText; //NO I18n
        			var a=result.evalJSON();
        			if(a&amp;&amp;a.USER_PRESENT){
            			if(a.IN_SITE){
                			var userID=a.USER_ID;
                			if(userID!=null &amp;&amp; userID!="null" &amp;&amp; userID!="")
                			{
                    			userForm.reportingToid.value=userID;
                    			return true;
                			}else{
                    			userForm.reportingToid.value="";
                    			Effect.ScrollTo(userForm.reportingTo.id);
                    			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.error'));
                    			return false;
		                	}
        		    	}else{
                			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.notinsite'));
                			return false;
            			}
        			}else{
            			userForm.reportingToid.value="";
            			Effect.ScrollTo(userForm.reportingTo.id);
            			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.error'));
            			return false;
        			}
    			}else{
	      			userForm.reportingToid.value="";
	      			return true;
    			}
    		return true;
		}
		function onAccountUpdate() { // Same method name used in msputils.js so rename method name.SDP-MSP Issue 468.
                    if($("__persistentAccountId__select").value == 0 &amp;&amp; __java("CanViewDefaultTechs") == true) {
                        var element = document.TechnicianView1.techViewName;
                        var text = getMessageForKey("sdp.msp.tech.defaultTechnician.list");
                        var value = "0";
                        addOption(element,text,value,1);
                    }
                    updateState("TechnicianView", "_D_RP", null); // I18N
                    updateTechnicianView(document.TechnicianView1.techViewName.value);
                }

                function sortingAccountsandSites(addTech) {
                    sortCombo(document.getElementsByName("availableAccounts")[0]);
                    if(addTech!="true") {
                        sortCombo(document.getElementsByName("selectedAccounts")[0]);
                        sortCombo(document.getElementsByName("availableSites")[0]);
                        sortCombo(document.getElementsByName("associatedSites")[0]);
                    }
                }

                function sortCombo(id) {
                    var availableCombos = id;
                    comboarray = new Array();

                    for(i=0; i&lt;availableCombos.length; i++) {
                        comboarray[i] = availableCombos.options[i].text+"#----#"+availableCombos.options[i].value;
                    }
                    comboarray.sort();
                    for(i=0; i&lt;availableCombos.length; i++) {
                        acc = comboarray[i].split("#----#");
                        availableCombos.options[i].text = acc[0];
                        availableCombos.options[i].value = acc[1];
                    }
                }

                function toggleCSVImport(tdElement) {
                    if(tdElement.style.display == "none") {
                        tdElement.style.display = "block";
                    }
                    else {
                        tdElement.style.display = "none";
                    }
                }
                var fromAccTab = '__java("fromAccTab")';
                if(fromAccTab != null &amp;&amp; fromAccTab=="true"){
                	document.getElementsByName('techViewName')[0].value="-1";
 					updateTechnicianView("-1");
                }

                </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.setup.SiteDef_jsp">
        <Parameters>
            <Param Name="msp" Value="true"/>
            <Param Name="mode" Value="edit"/>
                <AccountDisplay>
                    <QueryParam>id</QueryParam>
                    <Attribute>workflowAccountId</Attribute>
                    <Query>
                        <Table Name="AccountSiteMapping">
                            <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                            <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                            <MatchingCriteria TableName="AccountSiteMapping" ColumnName="SITEID" />
                            <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                        </Table>
                    </Query>
                    <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
                <HeaderAccount>
                    <Disabled>true</Disabled>
                    <i18nKey>sdp.msp.defaultsite.failure</i18nKey>
                    <i18nKey>sdp.msp.defaultsite.success</i18nKey>
                    <Script>
                         Show('editSiteButton');
                         //var link = document.getElementById("viewListST_lnk");
                         //link.href = "javascript:window.open('/SetUpWizard.do?forwardTo=mspsite', '_self')";
                         //link changed to button, overwriting existing click event
                         document.getElementById("viewListST_lnk").onclick = mspSiteHome; //Fix for Issue #12138 
                         //Commented following lines as we need to be in mspsites page not in sites page when saving/cancelling. - Issue ID : 2963
                         //The following code to change the input type is not permitted in IE hence changed the logic to be in mspsites page - action changed.
                         //document.SiteDefForm.cancel[1].type = "button";
                         //document.SiteDefForm.cancel[1].onclick = mspSiteHome;
                         document.SiteDefForm.action='/MSPSiteDef.do';
                         function mspSiteHome() {
                            window.open('/SetUpWizard.do?forwardTo=mspsite', '_self');
                         }
                    </Script>
                 </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="msp" Value="true"/>
            <HeaderAccount>
                <PageFormName>SiteListForm</PageFormName>
                <StyleClass>formStyle</StyleClass>
                <InternalHelpdesk>ONLY</InternalHelpdesk>
                <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
                <i18nKey>sdp.msp.defaultsite.failure</i18nKey>
                <i18nKey>sdp.msp.defaultsite.success</i18nKey>
                <i18nKey>sdp.msp.defaultsite.delete.selected</i18nKey>
                <i18nKey>sdp.msp.select.account.multiplesitedelete</i18nKey>
                <i18nKey>sdp.msp.allsite.delete.msg</i18nKey>
                <Script>
                	var isMSPSite = true; //For fixing Issue #12234
                     refreshSitesListView(true);
                     function popUpClosed() {
                        parent.refreshSubView('SiteListView');//No I18N
                        showMessageAndClose(getMessageForKey("sdp.msp.defaultsite.success"), 2500);//No I18N
                    }
            document.SiteDefForm.action='/MSPSiteDef.do';
                    function assignFailure() {
                        showFailureMessageAndClose(getMessageForKey("sdp.msp.defaultsite.failure"), 2500);//No I18N
                    }
                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="mode" Value="edit"/>
                <AccountDisplay>
                    <QueryParam>id</QueryParam>
                    <Attribute>workflowAccountId</Attribute>
                    <Query>
                        <Table Name="AccountSiteMapping">
                            <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                            <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                            <MatchingCriteria TableName="AccountSiteMapping" ColumnName="SITEID" />
                            <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                        </Table>
                    </Query>
                    <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
                <HeaderAccount>
                    <Disabled>true</Disabled>
                    <i18nKey>sdp.msp.defaultsite.failure</i18nKey>
                    <i18nKey>sdp.msp.defaultsite.success</i18nKey>
                    <Script>
                        Show('editSiteButton');
                        //var link = document.getElementById("viewListST_lnk");
                        //link.href = "javascript:window.open('/SetUpWizard.do?forwardTo=site', '_self')";
                        //link changed to button, overwriting existing click event
                        document.getElementById("viewListST_lnk").onclick = siteHome;
                        //Commented following lines as we need to be in sites page not in mspsites page when saving/cancelling - Issue ID : 2963
                        //document.SiteDefForm.cancel[1].type = "button";
                        //document.SiteDefForm.cancel[1].onclick = siteHome;
                        function siteHome() {
                            window.open('/SetUpWizard.do?forwardTo=site', '_self');
                        }
                    </Script>
                </HeaderAccount>
        </Parameters>
        <Parameters>
        <HeaderAccount>
            <PageFormName>SiteListForm</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>refreshSitesListView()</Onchange>
            <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
            <i18nKey>sdp.msp.defaultsite.failure</i18nKey>
            <i18nKey>sdp.msp.defaultsite.success</i18nKey>
            <i18nKey>sdp.msp.defaultsite.delete.selected</i18nKey>
            <i18nKey>sdp.msp.select.account.multiplesitedelete</i18nKey>
            <i18nKey>sdp.msp.allsite.delete.msg</i18nKey>
            <i18nKey>sdp.msp.common.allAccounts</i18nKey>
            <Script>
            	//link changed to button, need existing click event along with the new one
                //document.getElementById("viewListST_lnk").onclick=addAllAccOption;
                var isMSPSite = false; //For fixing Issue #12234
                jQuery("#viewListST_lnk").click(function() {
					addAllAccOption();
				});
                function addAllAccOption()
                {
                    if(document.HeaderForm.persistentAccountId.options[0].value != "0")
                    {
                        addZerothOption(document.HeaderForm.persistentAccountId,getMessageForKey("sdp.msp.common.allAccounts"), 0); //No I18N
                    }
                }
                if(document.getElementById("addNewSite_lnk") != null){
					document.getElementById("addNewSite_lnk").removeAttribute("onclick");
					document.getElementById("addNewSite_lnk").setAttribute("onclick","javascript:mspswapLayerAndSetFocus(); initTooltip();");
				}
				//Commenting because they changed it from href to onclick
				//changeLink("addNewSite_lnk","javascript:mspswapLayerAndSetFocus();"); //No I18N
                function popUpClosed() {
                        parent.refreshSubView('SiteListView');//No I18N
                    showMessageAndClose(getMessageForKey("sdp.msp.defaultsite.success"), 2500);//No I18N
                }

                function assignFailure() {
                    showFailureMessageAndClose(getMessageForKey("sdp.msp.defaultsite.failure"), 2500);//No I18N
                }
            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.account.NewSitePopup_jsp">
                <AccountDisplay>
                    <QueryParam>id</QueryParam>
                    <Attribute>workflowAccountId</Attribute>
                    <Query>
                        <Table Name="AccountSiteMapping">
                            <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                            <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                            <MatchingCriteria TableName="AccountSiteMapping" ColumnName="SITEID" />
                            <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                        </Table>
                    </Query>
                    <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
    </Page>
    <Page className="org.apache.jsp.setup.ScheduleRequest_jsp">
        <Parameters>
            <Param Name="msp" Value="true" />
            <Param Name="mode" Value="edit"/>
            <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Query>
                    <Table Name="SWorkOrder">
                        <Column TableName="SWorkOrder" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="SWorkOrder" ColumnName="WORKORDERID" />
                        <Join baseTableName="SWorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
             </AccountDisplay>
             <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <IncludeJSP>/workorder/IncludeViewRequestHistoryLink.jsp</IncludeJSP>
                <Script>
				var isMSPPMTask = true; //For Fixing MSP Issue #12139
                var form = document.ScheduleRequestForm;
                var siteBox=form.siteID;
                var selectedSiteId = siteBox.value;
                var templateId = __java("reqTemplate");
				var accountId = getAccountId();

                populateAccountSites(getAccountId(), siteBox, true, null, selectedSiteId);
                autosuggest();
                refreshSGTAndCSI(form);
				//updateSRApprList(templateId, accountId);

                document.ScheduleRequestForm.action= "/MSPScheduleRequest.do";
                changeLink("addPM_lnk","MSPScheduleRequest.do?mode=add&amp;scheduleType=getScheduleRequest");
                changeLink("newPMTask","MSPScheduleRequest.do?mode=add&amp;msp=true&amp;scheduleType=getScheduleRequest");
                //insertInLink("link1","ScheduleRequest","MSPScheduleRequest");
                //insertInLink("link2","ScheduleRequest","MSPScheduleRequest");
                //insertInLink("link3","ScheduleRequest","MSPScheduleRequest");
                parent.jQuery(document).ready(function()
				{
				insertInLink("link4","ScheduleRequest.do","MSPScheduleRequest.do");
			     });

                function cancelClicked(){
                    window.location.assign('/MSPScheduleRequest.do?scheduleType=getScheduleRequest'); // No I18N
                }

				</Script>
            </HeaderAccount>
        </Parameters>

        <Parameters>
            <Param Name="msp" Value="true" />
            <Param Name="mode" Value="add"/>
            <HeaderAccount>
                <PageFormName>ScheduleRequestForm</PageFormName>
                <InternalHelpdesk>ONLY</InternalHelpdesk>
                <StyleClass>formStyle</StyleClass>
                <DependentElement>document.ScheduleRequestForm.siteID</DependentElement>
                <DependentFunctionCall>get_sites_for_account_with_title</DependentFunctionCall>
                <PostAjaxFunction>autosuggest()</PostAjaxFunction>
                <IncludeJSP>/workorder/IncludeViewRequestHistoryLink.jsp</IncludeJSP>
                <i18nKey>sdp.msp.request.nosuchrequester.info</i18nKey>
                <Script>
                var isMSPPMTask = true; //For Fixing MSP Issue #12139
				var templateId = __java("reqTemplate");
				if(templateId != "" &amp;&amp; templateId != null){
				
                    var form = document.ScheduleRequestForm;
                    var siteBox = form.siteID;
                    var categoryId= __java("category");
                    var siteId= __java("site");
                    var accountId = getAccountId();

                    document.getElementById('requesterID').value=-1;
                    document.ScheduleRequestForm.action= "/MSPScheduleRequest.do";
					autosuggest();
                    refreshSGTAndCSI(form);

                    changeLink("addPM_lnk","MSPScheduleRequest.do?mode=add&amp;scheduleType=getScheduleRequest");
                    changeLink("newPMTask","MSPScheduleRequest.do?mode=add&amp;msp=true&amp;scheduleType=getScheduleRequest");
                    //insertInLink("link1","ScheduleRequest","MSPScheduleRequest");
                    //insertInLink("link2","ScheduleRequest","MSPScheduleRequest");
                    //insertInLink("link3","ScheduleRequest","MSPScheduleRequest");
                    parent.jQuery(document).ready(function()
					{
					insertInLink("link4","ScheduleRequest.do","MSPScheduleRequest.do");
			     	});

                    setSelectOption(document.ScheduleRequestForm.category,categoryId);
                    setSelectOption(siteBox,siteId);
					//updateSRApprList(templateId, accountId);
				}
				
				function cancelClicked()
				{
					window.location.assign('/MSPScheduleRequest.do?scheduleType=getScheduleRequest'); // No I18N
				}

                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="msp" Value="true" />
            <HeaderAccount>
                <PageFormName>ScheduleRequestForm</PageFormName>
                <InternalHelpdesk>ONLY</InternalHelpdesk>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshList()</Onchange>
                <Script>
                    var isMSPPMTask = true; //For Fixing MSP Issue #12139
					//insertInLink("link1","ScheduleRequest","MSPScheduleRequest");
					//insertInLink("link2","ScheduleRequest","MSPScheduleRequest");
					//insertInLink("link3","ScheduleRequest","MSPScheduleRequest");
					parent.jQuery(document).ready(function()
					{
					insertInLink("link4","ScheduleRequest.do","MSPScheduleRequest.do");
			    	});
                                
					function refreshList() {
						window.location.href="/MSPScheduleRequest.do?persistentAccountId="+document.getElementById('__persistentAccountId__select').value;
					}
					changeLink("addPM_lnk","MSPScheduleRequest.do?mode=add&amp;scheduleType=getScheduleRequest");
					changeLink("newPMTask","MSPScheduleRequest.do?mode=add&amp;msp=true&amp;scheduleType=getScheduleRequest");
					function cancelClicked()
					{
						window.location.assign('/MSPScheduleRequest.do?scheduleType=getScheduleRequest'); // No I18N
					}
                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="mode" Value="edit"/>
            <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Query>
                    <Table Name="SWorkOrder">
                        <Column TableName="SWorkOrder" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="SWorkOrder" ColumnName="WORKORDERID" />
                        <Join baseTableName="SWorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
             </AccountDisplay>
            <HeaderAccount>
                <StyleClass>formStyle</StyleClass>
            <IncludeJSP>/workorder/IncludeViewRequestHistoryLink.jsp</IncludeJSP>
                <Disabled>true</Disabled>

                <Script>
				var isMSPPMTask = false; //For Fixing MSP Issue #12139
                var form = document.ScheduleRequestForm;
                var siteBox=form.siteID;
                var selectedSiteId = siteBox.value;
				var templateId = __java("reqTemplate");

                populateAccountSites(getAccountId(), siteBox, true, null, selectedSiteId);
                autosuggest();
                changeLink("addTaskLink","ScheduleRequest.do?scheduleType=getScheduleRequest");
                refreshSGTAndCSI(form);
				var accountId = siteAccountModel[document.ScheduleRequestForm.siteID.value];
				//updateSRApprList(templateId, accountId);

                </Script>
            </HeaderAccount>
        </Parameters>

        <Parameters>
            <Param Name="mode" Value="add"/>
            <HeaderAccount>
                <PageFormName>ScheduleRequestForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
				<GetAllAccounts>true</GetAllAccounts>
                <Onchange>refreshPage()</Onchange>
                <StyleClass>formStyle</StyleClass>
                <IncludeJSP>/workorder/IncludeViewRequestHistoryLink.jsp</IncludeJSP>
                <i18nKey>sdp.msp.request.nosuchrequester.info</i18nKey>
                <PostAjaxFunction>autosuggest()</PostAjaxFunction>
                <Script>
                var isMSPPMTask = false; //For Fixing MSP Issue #12139
				var templateId = __java("reqTemplate");
				if(templateId != "" &amp;&amp; templateId != null){
					autosuggest();
					var form = document.ScheduleRequestForm;
					var siteBox = form.siteID;
					var categoryId= __java("category");
					var siteId= __java("site");
					var accountId = getAccountId();
					if(accountId!=0){
						populateAccountSites(accountId,siteBox,false,refreshSGT);
						fetchServiceSLAs();
					}
					/*else{
						setOnChange('siteID',refreshSiteCategories);
					}*/
					document.getElementById('requesterID').value=-1;

					refreshSGTAndCSI(form,templateId);

					setSelectOption(document.ScheduleRequestForm.category,categoryId);
					changeLink("addTaskLink","ScheduleRequest.do?scheduleType=getScheduleRequest");
					setSelectOption(siteBox,siteId);
					//updateSRApprList(templateId, accountId);
				}	
				var oldAccountId = siteAccountModel[document.ScheduleRequestForm.siteID.value];
				
				function updatePMApprovers(){
					if(getAccountId() == "0"){
						var newAccountId = siteAccountModel[document.ScheduleRequestForm.siteID.value];
						if(newAccountId != oldAccountId){
							updateSRApprList(templateId, newAccountId);
							oldAccountId = newAccountId;
						}
					}
				}
				
				function refreshSiteCategories(accountID){
                    if(accountID == undefined || accountID == "null") {
                          accountID = siteAccountModel[siteBox.value];
                    }
					refreshAccountCategories(document.ScheduleRequestForm,accountID);
					//populateTemplateBox(accountID,form);
					updatePMApprovers();
                }
				
				function refreshSGT() {
                	var grp = $('GROUPID');
                	var tch = $('TECHNICIANID');
                	var site = $('siteID');
                	var svalue = null;
                	if(site) { svalue = site.value; }
                	invokeSGTPopulation(site, grp, tch, "0", "0", svalue);
                	if (typeof prevGrpValue !== 'undefined') {
                		jQuery("#GROUPID").val(prevGrpValue).trigger("change");
                	}
                	if (typeof prevTechValue !== 'undefined') {
				    	jQuery("#TECHNICIANID").val(prevTechValue).trigger("change");
				    }
				}

                function refreshPage() {
					var tm = new Date().getTime();
					window.location.href="/ScheduleRequest.do?mode=add&amp;scheduleType=getScheduleRequest&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;tm="+tm;
                }
                var rendAcc;
                 function refreshAccountDataOnSiteChange(isUserSearch){

                      var siteId=document.querySelector("select#siteID.form-control").value;
                      var accountId=siteAccountModel[siteId];
                      ruleSiteId = siteId;
                      if(rendAcc!=accountId){

                            refreshSiteCategories(accountId);
                            //refreshSGT();
                            //refreshAssetsAndApprovers(isUserSearch);
                            //updateRequesterUrl();
                            //updateDeliveryString(module,templateId,siteId);
                            refreshServiceCategories(accountId);



                      }
                      rendSite = siteId;
                      rendAcc = accountId;
                      
                      //ServiceSLA list Fetching
                      fetchServiceSLAs();	

                }
                
                function getAccountIdForCurrentPage() {
					var accountID = getAccountId();
					if (accountID == "0") {
						var siteElement = document.getElementById('siteID');
						if(siteElement){
							var siteID = siteElement.value;
							if (siteID != undefined) {
								var siteAccount = siteAccountModel[siteID];
								if(siteAccount != undefined) {
									accountID = siteAccount;
								}
							}
						}
					}
					return accountID;
				}

                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <HeaderAccount>
                <PageFormName>ScheduleRequestForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
				<GetAllAccounts>true</GetAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshList()</Onchange>
                <Script>
                	var isMSPPMTask = false; //For Fixing MSP Issue #12139
                    changeLink("addTaskLink","ScheduleRequest.do?scheduleType=getScheduleRequest");
					function refreshList() {
                           window.location.href="/ScheduleRequest.do?scheduleType=getScheduleRequest&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value;
                    }
                </Script>
            </HeaderAccount>
        </Parameters>
    </Page>
 <Page className="org.apache.jsp.workorder.SDArchiveWOListView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <PreSubmitFunction>refreshRequestsView()</PreSubmitFunction>
            <Script>

                function refreshRequestsView() {
             window.location.href= "/SDArchiveWOListView.do?mode=getWindow&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                }
                   </Script>
        </HeaderAccount>
    </Page>
    <Page className="/DrillDownRequest.do">
        <Parameters>
        <Param Name="reqID" Value="null"/>
	 <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <PreSubmitFunction>refreshRequestsView()</PreSubmitFunction>
            <Script>
                refreshTechniciansList( $("ReqListForm").technician);
                function refreshRequestsView() {

                    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                    updateState(getPortalViewName("RequestsView"),"_D_RP", newVal);
                    updateState(getPortalViewName("RequestsView"), "_PN", null);
                    refreshSubView(getPortalViewName("RequestsView"));
                    refreshTechniciansList( $("ReqListForm").technician);

                }

            </Script>
        </HeaderAccount>
	</Parameters>
	<Parameters>
           <AccountDisplay>
            <QueryParam>reqID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="UserDepartment">
                 <Column TableName="UserDepartment" ColumnName="USERID" />
                        <Column TableName="UserDepartment" ColumnName="DEPTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="UserDepartment" ColumnName="USERID" />
                        <Join baseTableName="UserDepartment" baseTableColumn="DEPTID" joinTableName="DepartmentDefinition" joinTableColumn="DEPTID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="DepartmentDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />

                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
                <HeaderAccount>
                 <ShowAllAccounts>true</ShowAllAccounts>
           <StyleId>__pAccountId__select</StyleId>
		 <StyleClass>formStyle</StyleClass>
            <PreSubmitFunction>refreshRequestsView()</PreSubmitFunction>
            <Script>
               function updateAccountCombo(){
                url = '/servlet/AJaxServlet';
                var accAjax = new Ajax.Request(url, {
                                   method: 'post',     // No i18n
                                   parameters: {action:'getAccounts',allAccounts:"true" ,restrictUser:"true"},    //No i18n
                                   onComplete:function(resp) {
                                         document.getElementById("__pAccountId__select").disabled=false;
                                         updateComboForJson(resp.responseText,document.getElementById("__pAccountId__select"),false,"","text","key",null,accountId);
                                          document.getElementById('__pAccountId__select').onchange=refreshPage;
                                         }
                                });

                }
                updateAccountCombo();
		 refreshTechniciansList( $("ReqListForm").technician);
                function refreshRequestsView() {

                    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                    updateState(getPortalViewName("RequestsView"),"_D_RP", newVal);
                    updateState(getPortalViewName("RequestsView"), "_PN", null);
                    refreshSubView(getPortalViewName("RequestsView"));
                    refreshTechniciansList( $("ReqListForm").technician);

                }
		
            </Script>
                 </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.workorder.WorkOrderListView_jsp">
        <Parameters>
        <Param Name="reqID" Value="null"/>
	 <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <PreSubmitFunction>refreshRequestsView()</PreSubmitFunction>
            <Script>
                refreshTechniciansList( document.getElementById("technician"));
                function refreshRequestsView() {
                    if(window.current_req_mode == "kanban"){
					   kanban_comp_request.refreshKanbanList(true);
					}
                    else if(window.current_req_mode == "classic"){
					    table_comp_request.refreshTable("refresh"); //NO I18N
                        refreshTaskSideBar();
					}
                    else if(window.current_req_mode == "combined"){
						 table_comp_task.refreshTable("refresh"); //NO I18N
					}
                    else if(window.current_req_mode!="table"){
                        refreshTaskSideBar();
					}
					else{
                    //var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                    //updateState(getPortalViewName("RequestsView"),"_D_RP", newVal);
                    updateState(getPortalViewName("RequestsView"), "_PN", null);
                    refreshSubView(getPortalViewName("RequestsView"));
                    refreshTechniciansList( document.getElementById("technician"));
                    refreshTaskSideBar();
                    }
                }

            </Script>
        </HeaderAccount>
        </Parameters>
	<Parameters>
           <AccountDisplay>
            <QueryParam>reqID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="UserDepartment">
                 <Column TableName="UserDepartment" ColumnName="USERID" />
                        <Column TableName="UserDepartment" ColumnName="DEPTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="UserDepartment" ColumnName="USERID" />
                        <Join baseTableName="UserDepartment" baseTableColumn="DEPTID" joinTableName="DepartmentDefinition" joinTableColumn="DEPTID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="DepartmentDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />

                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
                <HeaderAccount>
                 <ShowAllAccounts>true</ShowAllAccounts>
           <StyleId>__pAccountId__select</StyleId>
		 <StyleClass>formStyle</StyleClass>
            <PreSubmitFunction>refreshRequestsView()</PreSubmitFunction>
            <Script>
               function updateAccountCombo(){
                url = '/servlet/AJaxServlet';
                var accAjax = new Ajax.Request(url, {
                                   method: 'post',     // No i18n
                                   parameters: {action:'getAccounts',allAccounts:"true" ,restrictUser:"true"},    //No i18n
                                   onComplete:function(resp) {
                                         document.getElementById("__pAccountId__select").disabled=false;
                                         updateComboForJson(resp.responseText,document.getElementById("__pAccountId__select"),false,"","text","key",null,accountId);
                                          document.getElementById('__pAccountId__select').onchange=refreshPage;
                                         }
                                });

                }
                updateAccountCombo();
		 refreshTechniciansList( $("ReqListForm").technician);
                function refreshRequestsView() {

                    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                    updateState(getPortalViewName("RequestsView"),"_D_RP", newVal);
                    updateState(getPortalViewName("RequestsView"), "_PN", null);
                    refreshSubView(getPortalViewName("RequestsView"));
                    refreshTechniciansList( $("ReqListForm").technician);

                }
		
            </Script>
                 </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.problem.SearchIncidents_jsp">
                <HeaderAccount>
                        <ShowAllAccounts>true</ShowAllAccounts>
                        <StyleClass>formStyle</StyleClass>
                        <PreSubmitFunction>refreshRequestsView()</PreSubmitFunction>
                        <Script>

                                function refreshRequestsView() {
                                        var newVal = "&amp;persistentAccountId="+getAccountId();
                    newVal = newVal+"&amp;PROBLEMID="+problemId+"&amp;TYPE="+document.getElementsByName("TYPE")[0].value+"&amp;persistAccountID=false";				
					if(categoryId!=null){
					newVal=newVal+"&amp;CATEGORYID="+categoryId;
					}
                                        updateState(getPortalViewName("AssociateNewIncidents"),"_D_RP", newVal); // No I18N
                    updateState(getPortalViewName("AssociateNewIncidents"), "_PN", null);
                        refreshSubView(getPortalViewName("AssociateNewIncidents")); // No I18N
                                }
                document.getElementById("__persistentAccountId__select").value=mspAccountId;
                refreshRequestsView();
                        </Script>
                </HeaderAccount>
        </Page>
    <Page className="org.apache.jsp.reports.ReportsByTime_jsp">
        <HeaderAccount>
            <PageFormName>CustomReportHandlerForm</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.getElementById('site')</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentAllSites>true</DependentAllSites>
            <UpdateHiddenField>false</UpdateHiddenField>
            <PostAjaxFunction>changeSearch()</PostAjaxFunction>
            <Script>
                var isSchedulePage=false; // setting it to true in the schedule_report.jspf
                function changeSearch()
                {
                        autoSuggest();
                }

                function autoSuggest()   //This funciton is not visble when i add this in scheudle_report.jspf
                {
                    if(isSchedulePage)
                    {
                        new Ajax.Autocompleter('toEmailSearch', 'toEmailSearch_choices', '/servlet/AJaxServlet?action=searchMailId', {paramName : 'to', tokens: [',',';','\n'],parameters:'accountId='+document.getElementById("__persistentAccountId__select").value});
                    }
                }
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.setup.RequesterDef_jsp">
        <Parameters>
            <Param Name="msp" Value="true" />
            <HeaderAccount>
                <PageFormName>SearchUserForm</PageFormName>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshRequesterView()</Onchange>
                <InternalHelpdesk>ONLY</InternalHelpdesk>
                <DependentElement>document.getElementById('deptSite')</DependentElement>
                <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
                <DependentValue>$$siteID$$</DependentValue>
                <ValidateFunction>accountUpdated_ReqPage()</ValidateFunction>
                <i18nKey>sdp.msp.selectAccount.error</i18nKey>
                <i18nKey>sdp.msp.common.allAccounts</i18nKey>
                <i18nKey>sdp.admin.requesterList.importFromCSV</i18nKey>
                <i18nKey>sdp.msp.admin.accountChangeWarning</i18nKey>
                <i18nKey>sdp.msp.selectDepartment.error</i18nKey>
                <Script>
					<!--hideFilter();-->
                	var isMSPSettingsListView = true;
                    var alphaChar = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];
                    for(i=0;i&lt;26;i++)
                    {
                        try{
                            document.getElementById("alpha"+alphaChar[i]).href="MSPRequesterDef.do?startsWith="+alphaChar[i];
                        }catch(e){}
                    }
                    try{
                        document.getElementById("alphaall").href="MSPRequesterDef.do";
                    }catch(e){}

                    if(window.location.href.indexOf("SearchRequester.do") != -1 ) {
                        window.location.href="/MSPRequesterDef.do?persistentAccountId="+document.getElementById('__persistentAccountId__select').value;
                    }
		    updateDomains();
                    function setUserDomain(){

                        var domain='__java("domainName")';
                        setSelectOption(document.RequesterDefForm.userDomain,domain);

                    }
                    function accountUpdated_ReqPage(mspPage)
                    {
                    	accountUpdated(mspPage)
                    }
                    function ajaxRequestOnSuccess(req, module) {
						updateReqPageAjaxOnSuccess( req, module );
                        var element = document.RequesterDefForm.userDomain;
                        if(module == 'get_associated_account_domains') {


                            while(element.options.length &gt; 1) {
                                element.remove(1);
                            }
                            var assetObj;
                            var length = 0;
                            if(req.responseXML!=null)
                            {
                                assetObj = req.responseXML.getElementsByTagName("DomainInfo");
                                length = assetObj.length;
                            }
                            for( i=0; i&lt;length; i++ ) {
                                var newOption = document.createElement('option');
                                newOption.value = assetObj[i].getAttribute("domainname");
                                newOption.text = assetObj[i].getAttribute("domainname");
                                try {
                                   element.add(newOption, null);
                                } catch(x) {
                                    element.add(newOption);
                                }
                            }
			    setUserDomain();
			    updateLDAPDomains();
                            updateDepartment();

                        }
                    }
                    changeAction();
                    refreshRequesterView();
                    showHideAccountCombo();
                    //document.getElementById('label1').innerHTML=getMessageForKey('sdp.msp.admin.requester.accountDetails');
            var arr=document.getElementsByName('mandatory');
                    for(var i = 0; i &lt; arr.length; i++){
                        changeInnerHTML(document.getElementsByName('mandatory').item(i),'*','mandatory');
                    }

                    Hide("infoRow"); //No I18N
                    jQuery('#addNewRequester').attr("onclick","javascript:mspSwapLayerAndSetFocusReqDefForm("+true+");"); //No I18N
                    changeLink("listViewLink","javascript:window.open('/SetUpWizard.do?forwardTo=msprequester', '_self')"); //No I18N
		    document.SearchUserForm.action = document.SearchUserForm.action + "?msp=true";
                    //changeLink("deleteRequester","javascript:confirmRequesterDelete(document.SearchUserForm,'delUserList',document.getElementById('confirmreqdelete').innerHTML,document.getElementById('chooserequester').innerHTML, '?deleteButton=Delete&amp;msp="+true+"')"); //No I18N
                    Hide("demoADImport"); //No I18N
                    changeLink("blockRequester","javascript:blockRequesters(document.SearchUserForm,'delUserList',document.getElementById('confirmreqblock').innerHTML,document.getElementById('chooserequesterBlock').innerHTML,'&amp;blockButton=block')");//No I18N
                    addImportCSVLink();
                    changeLink("CSVLink","javascript:NewWindow('ImportUsers.do?msp="+true+"','ImportUsers',600,500,'yes','center')"); //No I18N
                    autosuggest();
                    function importADUsers(os)
                    {
                       if(os.indexOf('Windows')!=-1)
                       {
                           NewWindow('/ImportADUsers.do?msp=true','ImportADUsers',750,458,'yes','center');//No I18N
                       }
                       else
                       {
                           alert(getMessageForKey('sdp.admin.importusers.nonWindowsMsg'));//No I18N
                       }
                    }
                   	function isUserExists(userForm){	
						var reqUser=userForm.reportingTo.value;
						var reqUserId=userForm.reportingToid.value;
		    			if (reqUser!=""){
		        			var result = jQuery.ajax({type: 'GET',url: 'servlet/AJaxServlet',data: {action: "isUserExists",search: reqUser,searchUserid:reqUserId,persistentAccountId:getAccountId()},contentType: 'application/json',mimetype: "text/json",dataType:'json',cache: false,async: false}).responseText; //NO I18n
		        			var a=result.evalJSON();
		        			if(a&amp;&amp;a.USER_PRESENT){
		            			if(a.IN_SITE){
		                			var userID=a.USER_ID;
		                			if(userID!=null &amp;&amp; userID!="null" &amp;&amp; userID!="")
		                			{
		                    			userForm.reportingToid.value=userID;
		                    			return true;
		                			}else{
		                    			userForm.reportingToid.value="";
		                    			Effect.ScrollTo(userForm.reportingTo.id);
		                    			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.error'));
		                    			return false;
				                	}
		        		    	}else{
		                			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.notinsite'));
		                			return false;
		            			}
		        			}else{
		            			userForm.reportingToid.value="";
		            			Effect.ScrollTo(userForm.reportingTo.id);
		            			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.error'));
		            			return false;
		        			}
		    			}else{
	      					userForm.reportingToid.value="";
	      					return true;
    					}
    					return true;
					}
                </Script>
            </HeaderAccount>
        </Parameters>
		<Parameters>
			<Param Name="userViewType" Value="inactiveUsers" />
            <HeaderAccount>
                <PageFormName>SearchUserForm</PageFormName>
                <StyleClass>formStyle</StyleClass>
                <ShowAllAccounts>true</ShowAllAccounts>
				<!--Onchange>showActiveUser()</Onchange-->
				<i18nKey>sdp.msp.selectAccount.error</i18nKey>
                <i18nKey>sdp.msp.common.allAccounts</i18nKey>
                <!--Script>
                    if(getAccountId()!=0){
						setAllAccounts();
					}
					function showActiveUser(){
						if(getAccountId()!=0){
							window.open('/SetUpWizard.do?forwardTo=requester', '_self'); //No I18N
						}
					}
                </Script-->
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <HeaderAccount>
                <PageFormName>SearchUserForm</PageFormName>
                <StyleClass>formStyle</StyleClass>
                <ShowAllAccounts>true</ShowAllAccounts>
                <ValidateFunction>accountUpdated_ReqPage()</ValidateFunction>
				<!--Onchange>hideFilter()</Onchange-->
                <i18nKey>sdp.msp.selectAccount.error</i18nKey>
                <i18nKey>sdp.msp.common.allAccounts</i18nKey>
                <i18nKey>sdp.admin.requesterList.importFromCSV</i18nKey>
                <i18nKey>sdp.msp.admin.accountChangeWarning</i18nKey>
                <i18nKey>sdp.msp.selectDepartment.error</i18nKey>
                <i18nKey>sdp.admin.requester.assignprojectrole</i18nKey>
                <Script>
					<!--hideFilter();-->
                    if(__java("requesterAccountId") != null) {
                        parent.document.getElementById("__persistentAccountId__select").value = __java("requesterAccountId");
                    }
            if('__java("toShowView")'=='addForm'){
                        removeAllAccOption();
                    }
                    populateAccountSites(document.getElementById('__persistentAccountId__select').value, document.getElementById('deptSite'),null,null,'__java("siteIdstr")',"setInSession=false");
                    showHideAccountCombo();
                    checkLoginNotification();
                    if('__java("mode")'=='edit'){
                        removeAllAccOption();
                    }
                    updateDomains();
                    hideChangeToTechNotes();

                    function setUserDomain(){
                        var domain='__java("domainName")';
                        setSelectOption(document.RequesterDefForm.userDomain,domain);
                    }
                    if(__java("requesterAccountId")!=null) {
	                    prevSel=__java("requesterAccountId");
	            }
                    Hide("infoRow"); //No I18N
                    jQuery('#addNewRequester').attr("onclick","javascript:mspSwapLayerAndSetFocusReqDefForm("+null+");"); //No I18N
                    changeLink("listViewLink","javascript:window.open('/SetUpWizard.do?forwardTo=requester', '_self')"); //No I18N
                    //changeLink("deleteRequester","javascript:confirmRequesterDelete(document.SearchUserForm,'delUserList',document.getElementById('confirmreqdelete').innerHTML,document.getElementById('chooserequester').innerHTML, '?deleteButton=Delete&amp;msp="+null+"')"); //No I18N
                    //PROJECT MANAGEMENT RELATED CODE START
                    var baprProps = "closeButton=yes,width=350,height=150,title=" +  getMessageForKey("sdp.admin.requester.assignprojectrole");//No I18N
                    changeLink("bulkProjRoleAssign","javascript:BulkProjRoleAssign('/setup/ProjectRoleActions.jsp?task=requester',baprProps,document.SearchUserForm)"); //No I18N
                    //PROJECT MANAGEMENT RELATED CODE END
                    Hide("demoADImport"); //No I18N
                    addImportCSVLink();
                    changeLink("CSVLink","javascript:NewWindow('ImportUsers.do?msp="+null+"','ImportUsers',600,500,'yes','center')"); //No I18N
                    autosuggest();
                    function removeAllAccOption()
                    {
                        if(document.HeaderForm.persistentAccountId.options[0].value == "0")
                        {
                            document.HeaderForm.persistentAccountId.remove(0);
                        }
                    }
                    function accountUpdated_ReqPage(mspPage)
                    {
                    	accountUpdated(mspPage)
                    }
                    function ajaxRequestOnSuccess(req, module) {
                    	updateReqPageAjaxOnSuccess( req, module );
                        var element = document.RequesterDefForm.userDomain;
                        if(module == 'get_associated_account_domains') {
                            while(element.options.length &gt; 1) {
                                element.remove(1);
                            }
                            var assetObj;
                            var length = 0;
                            if(req.responseXML!=null)
                            {
                                assetObj = req.responseXML.getElementsByTagName("DomainInfo");
                                length = assetObj.length;
                            }
                            for( i=0; i&lt;length; i++ ) {
                                var newOption = document.createElement('option');
                                newOption.value = assetObj[i].getAttribute("domainname");
                                newOption.text = assetObj[i].getAttribute("domainname");
                                try {
                                   element.add(newOption, null);
                                } catch(x) {
                                    element.add(newOption);
                                }
                            }
			    setUserDomain();
			    updateLDAPDomains();
                            updateDepartment();
                        }
                    }
                    function isUserExists(userForm){	
						var reqUser=userForm.reportingTo.value;
						var reqUserId=userForm.reportingToid.value;
		    			if (reqUser!=""){
		        			var result = jQuery.ajax({type: 'GET',url: 'servlet/AJaxServlet',data: {action: "isUserExists",search: reqUser,searchUserid:reqUserId,persistentAccountId:getAccountId()},contentType: 'application/json',mimetype: "text/json",dataType:'json',cache: false,async: false}).responseText; //NO I18n
		        			var a=result.evalJSON();
		        			if(a&amp;&amp;a.USER_PRESENT){
		            			if(a.IN_SITE){
		                			var userID=a.USER_ID;
		                			if(userID!=null &amp;&amp; userID!="null" &amp;&amp; userID!="")
		                			{
		                    			userForm.reportingToid.value=userID;
		                    			return true;
		                			}else{
		                    			userForm.reportingToid.value="";
		                    			Effect.ScrollTo(userForm.reportingTo.id);
		                    			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.error'));
		                    			return false;
				                	}
		        		    	}else{
		                			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.notinsite'));
		                			return false;
		            			}
		        			}else{
		            			userForm.reportingToid.value="";
		            			Effect.ScrollTo(userForm.reportingTo.id);
		            			showBaloonToolTip(userForm.reportingTo.id,getMessageForKey('sdp.admin.reportingTo.error'));
		            			return false;
		        			}
		    			}else{
	      					userForm.reportingToid.value="";
	      					return true;
    					}
    					return true;
					}
                </Script>
            </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="/WorkOrder.do">
    <Parameters>
        <Param Name="workOrderID" Value="null"/>
        <Param Name="woMode" Value="viewWO"/>
        <AccountDisplay>
            <QueryParam>woID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="WorkOrder" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
            </HeaderAccount>
    </Parameters>
    <Parameters>
        <Param Name="woMode" Value="viewWO"/>
        <AccountDisplay>
            <QueryParam>workOrderID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="WorkOrder" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>

        </HeaderAccount>
    </Parameters>

    </Page>
    <Page className="org.apache.jsp.workorder.ViewWO_jsp">
	<Parameters>
	<Param Name="woMode" Value="mergeAsThdReq"/>
        <AccountDisplay>
            <QueryParam>orgReqID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="WorkOrder" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.msp.request.assignSite</i18nKey>
            <i18nKey>sdp.admin.org.technician.organizationdefault</i18nKey>
      	    <i18nKey>sdp.admin.organization.header</i18nKey>
            <Script>
                var site;
                var status;
				var ruleSiteId;
				var ruleAccountId;
                var siteJson;
                setTimeout("validateSite()",1000);
		var showAccountDetails ='__java("showAccountDetails")';
		if(getAccountId()!=0 &amp;&amp;showAccountDetails=='true'){
			requestTabs.push("accountDetails");
			createAccountDetailsTabAndDiv();
		}

                function validateSite(){
                    try{
                        siteJson=$req.details.request_info.site;
                    }
		    catch(e){
			setTimeout("validateSite()",1000);
		    }
                    if(jQuery.isEmptyObject(siteJson)){

			    setTimeout("validateWOSite()",1000);
			    $("asso-problem-new").setAttribute("onclick","javascript:validateWOSite()");
                $("asso-problem-search").setAttribute("onclick","validateWOSite()");
			    $("AssociateProblem").setAttribute("onclick","validateWOSite()");
			    $("change_actionMenu").setAttribute("onclick","validateWOSite()");
                $("change-init-new").setAttribute("onclick","validateWOSite()");
                $("change-init-search").setAttribute("onclick","validateWOSite()");
                $("change-caused-search").setAttribute("onclick","validateWOSite()");
                $("asso-project-new").setAttribute("onclick","validateWOSite()");
				$("AssociateProject").setAttribute("onclick","validateWOSite()");
                $("asso-project-search").setAttribute("onclick","validateWOSite()");
			    $("Req_Det_AddWorkLog").setAttribute("onclick","validateWOSite()");
			    $("Req_Det_AddWorkLog").setAttribute("href","javascript:void(0)");
                    }  else {
                        site = $req.details.request_info.site.name;
                    }
                }

                function validateWOSite()
                {
                    if(isSCP){
                        return;
                    }
                    alert(getMessageForKey("sdp.msp.request.assignSite"));
                    return ;
                }
                try{
                    status = document.getElementById('STATUSID_CUR').innerHTML;
                }catch(e){}
                if(status=='Closed'){
                    $('SITEID_CUR').removeAttribute('href');$('SITEID_CUR').onclick=function(){};
                    $('QUEUEID_CUR').removeAttribute('href');$('QUEUEID_CUR').onclick=function(){};
                    $('OWNERID_CUR').removeAttribute('href');$('OWNERID_CUR').onclick=function(){};
                }
				if(site!=getMessageForKey("sdp.admin.org.technician.organizationdefault"))
				{
					ruleAccountId = getAccountId();
					ruleSiteId = document.getElementById('SITEID_CUR').getAttribute('val');
					fieldFormRulesViewExec();
				}else{
					fieldFormRulesViewExec();
				}
            </Script>
            </HeaderAccount>
    </Parameters>
    <Parameters>
        <Param Name="woMode" Value="viewWO"/>
        <AccountDisplay>
            <QueryParam>woID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="WorkOrder" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.msp.request.assignSite</i18nKey>
            <i18nKey>sdp.admin.org.technician.organizationdefault</i18nKey>
      	    <i18nKey>sdp.admin.organization.header</i18nKey>
            <Script>
                var site;
                var status;
				var ruleSiteId;
				var ruleAccountId;
                var siteJson;
                setTimeout("validateSite()",1000);
		var showAccountDetails ='__java("showAccountDetails")';
		if(getAccountId()!=0 &amp;&amp;showAccountDetails=='true'){
			requestTabs.push("accountDetails");
			//createAccountDetailsTabAndDiv();
		}

                function validateSite(){
                    try{
                        siteJson=$req.details.request_info.site;
                    }
		    catch(e){
			setTimeout("validateSite()",1000);
		    }
		    if(siteJson === undefined) {
		    	// when site is not associated, site is null. However, when site is undefined, the page is not details page anymore
		    	return;
		    }
                    if(jQuery.isEmptyObject(siteJson)){

			    setTimeout("validateWOSite()",1000);
			    $("asso-problem-new").setAttribute("onclick","javascript:validateWOSite()");
                $("asso-problem-search").setAttribute("onclick","validateWOSite()");
			    $("AssociateProblem").setAttribute("onclick","validateWOSite()");
			    $("change_actionMenu").setAttribute("onclick","validateWOSite()");
                $("change-init-new").setAttribute("onclick","validateWOSite()");
                $("change-init-search").setAttribute("onclick","validateWOSite()");
                $("change-caused-search").setAttribute("onclick","validateWOSite()");
                $("asso-project-new").setAttribute("onclick","validateWOSite()");
				$("AssociateProject").setAttribute("onclick","validateWOSite()");
                $("asso-project-search").setAttribute("onclick","validateWOSite()");
			    $("Req_Det_AddWorkLog").setAttribute("onclick","validateWOSite()");
			    $("Req_Det_AddWorkLog").setAttribute("href","javascript:void(0)");
                    }  else {
                        site = $req.details.request_info.site.name;
                    }
                }

                function validateWOSite()
                {
                    if(isSCP){
                        return;
                    }
                    var unapprovedActionButton = jQuery('#approveUser')[0];

                    if (unapprovedActionButton === undefined) {
                    alert(getMessageForKey("sdp.msp.request.assignSite"));
                    }
                    return ;
                }
                try{
                    status = document.getElementById('STATUSID_CUR').innerHTML;
                }catch(e){}
                if(status=='Closed'){
                    $('SITEID_CUR').removeAttribute('href');$('SITEID_CUR').onclick=function(){};
                    $('QUEUEID_CUR').removeAttribute('href');$('QUEUEID_CUR').onclick=function(){};
                    $('OWNERID_CUR').removeAttribute('href');$('OWNERID_CUR').onclick=function(){};
                }
				/* if(site!=getMessageForKey("sdp.admin.org.technician.organizationdefault"))
				{
					ruleAccountId = getAccountId();
					ruleSiteId = $req.details.request_info.site.id;
					fieldFormRulesViewExec();
				}else{
					fieldFormRulesViewExec();
				}*/
            </Script>
            </HeaderAccount>
    </Parameters>
	<Parameters>
        <Param Name="woMode" Value="trashWO"/>
        <AccountDisplay>
            <QueryParam>woID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="WorkOrder" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
		<HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
	    <i18nKey>sdp.admin.organization.header</i18nKey>
        </HeaderAccount>
	</Parameters>
	<Parameters>
        <Param Name="woMode" Value="deleteConversation"/>
        <AccountDisplay>
            <QueryParam>mainReqID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="WorkOrder" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.msp.request.assignSite</i18nKey>
            <i18nKey>sdp.admin.org.technician.organizationdefault</i18nKey>
      	    <i18nKey>sdp.admin.organization.header</i18nKey>
            <Script>
                var site;
                var status;
				var ruleSiteId;
				var ruleAccountId;
                var siteJson;
                setTimeout("validateSite()",1000);
		var showAccountDetails ='__java("showAccountDetails")';
		if(getAccountId()!=0 &amp;&amp;showAccountDetails=='true'){
			requestTabs.push("accountDetails");
			createAccountDetailsTabAndDiv();
		}

                function validateSite(){
                    try{
                        siteJson=$req.details.request_info.site;
                    }
		    catch(e){
			setTimeout("validateSite()",1000);
		    }
                    if(jQuery.isEmptyObject(siteJson)){

			    setTimeout("validateWOSite()",1000);
			    $("asso-problem-new").setAttribute("onclick","javascript:validateWOSite()");
                $("asso-problem-search").setAttribute("onclick","validateWOSite()");
			    $("AssociateProblem").setAttribute("onclick","validateWOSite()");
			    $("change_actionMenu").setAttribute("onclick","validateWOSite()");
                $("change-init-new").setAttribute("onclick","validateWOSite()");
                $("change-init-search").setAttribute("onclick","validateWOSite()");
                $("change-caused-search").setAttribute("onclick","validateWOSite()");
                $("asso-project-new").setAttribute("onclick","validateWOSite()");
				$("AssociateProject").setAttribute("onclick","validateWOSite()");
                $("asso-project-search").setAttribute("onclick","validateWOSite()");
			    $("Req_Det_AddWorkLog").setAttribute("onclick","validateWOSite()");
			    $("Req_Det_AddWorkLog").setAttribute("href","javascript:void(0)");
                    }  else {
                        site = $req.details.request_info.site.name;
                    }
                }

                function validateWOSite()
                {
                    alert(getMessageForKey("sdp.msp.request.assignSite"));
                    return ;
                }
                try{
                    status = document.getElementById('STATUSID_CUR').innerHTML;
                }catch(e){}
                if(status=='Closed'){
                    $('SITEID_CUR').removeAttribute('href');$('SITEID_CUR').onclick=function(){};
                    $('QUEUEID_CUR').removeAttribute('href');$('QUEUEID_CUR').onclick=function(){};
                    $('OWNERID_CUR').removeAttribute('href');$('OWNERID_CUR').onclick=function(){};
                }
				if(site!=getMessageForKey("sdp.admin.org.technician.organizationdefault"))
				{
					ruleAccountId = getAccountId();
					ruleSiteId = document.getElementById('SITEID_CUR').getAttribute('val');
					fieldFormRulesViewExec();
				}else{
					fieldFormRulesViewExec();
				}
            </Script>
            </HeaderAccount>
    </Parameters>
    <Parameters>
	 <Param Name="woMode" Value="createSurvey"/>
        <AccountDisplay>
            <QueryParam>woID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="WorkOrder" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
	    <i18nKey>sdp.admin.organization.header</i18nKey>
	    <Script>
		var showAccountDetails ='__java("showAccountDetails")';
		if(getAccountId()!=0 &amp;&amp;showAccountDetails=='true'){
			requestTabs.push("accountDetails");
			createAccountDetailsTabAndDiv();
		}
	    </Script>
        </HeaderAccount>
    </Parameters>
    <Parameters>
        <AccountDisplay>
            <QueryParam>workOrderID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="WorkOrder">
                    <Column TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Column TableName="WorkOrder" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="WorkOrder" ColumnName="WORKORDERID" />
                    <Join baseTableName="WorkOrder" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
	    <i18nKey>sdp.admin.organization.header</i18nKey>
	    <Script>
		var showAccountDetails ='__java("showAccountDetails")';
		if(getAccountId()!=0 &amp;&amp;showAccountDetails=='true'){
			requestTabs.push("accountDetails");
			createAccountDetailsTabAndDiv();
		}
	    </Script>
        </HeaderAccount>
    </Parameters>

    </Page>
    <Page className="org.apache.jsp.change.ChangePlan_jsp">
            <HeaderAccount>
                <PageFormName>ChangePlan</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <PreSubmitFunction>accountUpdated()</PreSubmitFunction>
                <Script>
                  var accountId = document.ChangePlan.persistentAccountId.value;
                      function accountUpdated() {
                            accountId = document.ChangePlan.persistentAccountId.value;
                        var goToUrl = "";
                            var currentLocation = document.location.href;
                       if(currentLocation.indexOf('?') > 0) {
                              var aidIx = currentLocation.indexOf('persistentAccountId=');
                              if(aidIx &gt; 0) {
                                    var firstPart = currentLocation.substring(0, aidIx);
                                    var secondPartBegin = currentLocation.indexOf(aidIx, '&amp;');
                                    if(secondPartBegin == -1) {
                                      secondPartBegin = currentLocation.length;
                                    }else {
                                      secondPartBegin++;
                                    }
                                    var secondPart = currentLocation.substring(secondPartBegin, currentLocation.length);
                                    currentLocation = firstPart + secondPart;
                              }
                          goToUrl = "&amp;persistentAccountId="+accountId;
                        }else {
                          goToUrl = "?persistentAccountId="+accountId;
                        }
                        document.location.href = currentLocation + encodeURI(goToUrl);
                      }
                  </Script>
            </HeaderAccount>
        </Page>
        <Page className="org.apache.jsp.setup.CABDef_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Onchange>refreshCABView();setAccountIdForCAB();</Onchange>
            <StyleClass>formStyle</StyleClass>
            <i18nKey>sdp.msp.setup.cab.selectAccount</i18nKey>
            <Script>

                var accountId;
                if($("__persistentAccountId__select").disabled == false)
                {
                    accountId = $("__persistentAccountId__select").value;
                }

                function setAccountIdForCAB(){
                    accountId = $("__persistentAccountId__select").value;
                }

                function showCabListView() {
                    jQuery("#__persistentAccountId__select").select2("val",accountId);
                }

                function onClickSwapLayer(showDiv,HideDiv)
                {
                    if(showDiv=="CAB_LIST")
                    {
                        enableAccountCombo();
                        showCabListView();
                        refreshCABView();
                    }
                    swapLayer(showDiv, HideDiv);
                    var id1 = document.getElementById("success_message");
                    if (id1 != null)
                    {
                        id1.style.display = "none";
                    }
                        var id2 = document.getElementById("error_message");
                    if (id2 != null)
                    {
                        id2.style.display = "none";
                    }
                }
                function refreshCABView()
                {
                    enableAccountCombo();
                    document.HeaderForm.persistentAccountId.disabled = false;
                    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                    updateState("CABList","_D_RP", newVal);
                    updateState("CABList", "_PN", null);
                    refreshSubView("CABList");
                }
                var sdpFP = document.getElementById("addCABButton").onclick;
                document.getElementById("addCABButton").onclick = checkAccountEmpty;
                function checkAccountEmpty()
                {
                    var element = $("__persistentAccountId__select");
                    if(element.value == null || element.value == "0")
                    {
                        alert(getMessageForKey("sdp.msp.setup.cab.selectAccount"));
                        return;
                	}
                    else
                    {
                        jQuery('#__persistentAccountId__select').prop('disabled', true);
						jQuery('#__persistentAccountId__select').removeClass('accountFormStyle');
						jQuery('#__persistentAccountId__select').addClass('accountStyleDisabled');
           			}
                    sdpFP();
                }
                function enableAccountCombo()
                {
                    jQuery('#__persistentAccountId__select').prop('disabled', false);
					jQuery('#__persistentAccountId__select').addClass('accountFormStyle');
					jQuery('#__persistentAccountId__select').removeClass('accountStyleDisabled');
                }

            </Script>
        </HeaderAccount>
    </Page>
        <Page className="org.apache.jsp.problem.ShowProblems_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <PreSubmitFunction>refreshProblemsView()</PreSubmitFunction>
            <Script>
                refreshTechniciansList($("TechList"),$("__persistentAccountId__select").value,$("TechList_Bottom"));
            function refreshProblemsView() {

                var newVal = "&amp;persistentAccountId="+$("__persistentAccountId__select").value;
                newVal = newVal+"&amp;TYPE="+document.ProblemActions.TYPE.value;
                updateState("ProblemsList","_D_RP", newVal);
                updateState("ProblemsList", "_PN", null);
                refreshSubView("ProblemsList");
                refreshTechniciansList($("TechList"),$("__persistentAccountId__select").value,$("TechList_Bottom"));
            }
    </Script>
        </HeaderAccount>
    </Page>

        <Page className="org.apache.jsp.problem.FilteredProblem_jsp">
                <HeaderAccount>
                        <ShowAllAccounts>false</ShowAllAccounts>
                        <StyleClass>formStyle</StyleClass>
                        <PreSubmitFunction>refreshProblemsView()</PreSubmitFunction>
                        <Script>
            function refreshProblemsView() {
                var newVal = "&amp;persistentAccountId="+document.HeaderForm.__persistentAccountId__select.value;
                newVal = newVal+"&amp;TYPE="+document.AssociateProblem.TYPE.value+"&amp;CHANGED=true&amp;persistAccountID=false";
        if(getState("ProblemsList","CATEGORYID") != null) {
                    newVal = newVal + "&amp;CATEGORYID=" + getState("ProblemsList","CATEGORYID"); // No I18N
            }
        newVal=newVal+"&amp;FROM=Filter";
                updateState("ProblemsList","_D_RP", newVal);
                updateState("ProblemsList", "_PN", null);
                refreshSubView("ProblemsList");
            }
        var accountCombo=document.getElementById("__persistentAccountId__select");
            for(i=accountCombo.options.length-1;i&gt;=0;i--){
                    if((accountCombo.options[i].value!=workorderAccountId)&amp;&amp;(accountCombo.options[i].value!=mspAccountId)){
                            accountCombo.remove(i);
                    }
            }
        document.getElementById("__persistentAccountId__select").value=workorderAccountId;
        refreshProblemsView();
    </Script>
                </HeaderAccount>
        </Page>
	<Page className="org.apache.jsp.asset.AddRelforAsset_jsp">
                <HeaderAccount>
                        <ShowAllAccounts>false</ShowAllAccounts>
                        <StyleClass>formStyle</StyleClass>
                        <Onchange>refreshRelationsView();</Onchange>
                        <Script>
        		function getSearchResult4CI(form,startIndx,disableStatus) {
                		if(!disableStatus) showHideLoading();
                		var params = "&amp;action=search&amp;ciId="+form.ciId.value+"&amp;searchCIType="+form.searchCIType.value+"&amp;startIndx="+startIndx+"&amp;persistentAccountId="+document.HeaderForm.__persistentAccountId__select.value+"&amp;persistAccountID=false"; //NO i18N
                		var searchText = form.SearchText.value;
                		if(! (searchText.trim() == '' || searchText.trim() == 'Search' || searchText.trim() == document.getElementById('sdp.leftpanel.search.title').innerHTML)) {
                        		params = params+"&amp;searchText="+searchText;//NO i18N
                		}
                		form.startIndx.value = startIndx;
               			var newUrl = '/AddRelationshipForWS.do'; //NO I18N
               			try {
                       			var myAjax = new Ajax.Request(newUrl, {
                                       		method: 'get',//NO I18N
                                      		parameters: params,
                                       		onComplete: function(resp){updateSearchCIList(resp)}
                               		});
               			}
               			catch(e) {
                       			alert("Error: "+ e);//No I18N
               			}

        		}
        		function refreshRelationsView() {
                		if(document.getElementById('showDivData').checked){
                			var newVal = "&amp;persistentAccountId="+document.HeaderForm.__persistentAccountId__select.value+"&amp;persistAccountID=false";
                			var doc = document.addRelationshipForm;
					if(doc){
                				var ciTypeId = doc.ciTypeId.value;
                				var ciTypeId2 = doc.ciTypeId2.value;
                				var ciId = doc.ciId.value;
                				var relationshipId = doc.relationshipId.value;
                				var relationshipTypeId = doc.relationshipTypeId.value;
                				var viewName = doc.viewName.value;
                				var ciId = doc.ciId.value;
                				var siteId = doc.siteId.value;
                				var params = newVal+'&amp;siteId='+siteId+'&amp;ciId='+ciId+'&amp;ciTypeId='+ciTypeId+'&amp;ciTypeId2='+ciTypeId2+'&amp;ciTypeID2='+ciTypeId2+'&amp;isLocal=false&amp;relationshipId='+relationshipId+'&amp;relationshipTypeId='+relationshipTypeId; //NO I18N
                				updateState("AddRelListView","_D_RP", params);//NO I18N
                				refreshSubView("AddRelListView"); //NO I18N
					}
                		}else{
                			var ciId='__java("ciId")';
                			ajaxCallForOtherCIRelForm(ciId,'showOtherCIRelForm');//No I18N
                		}
            		}
			function showSiteListView(val){
                		var doc = document.addRelationshipForm;
				if(doc){
                			var ciTypeId = doc.ciTypeId.value;
                			var ciTypeId2 = doc.ciTypeId2.value;
                			var ciId = doc.ciId.value;
                			var relationshipId = doc.relationshipId.value;
                			var relationshipTypeId = doc.relationshipTypeId.value;
                			var viewName = doc.viewName.value;
                			var ciId = doc.ciId.value;
                			var params = '&amp;siteId='+val+'&amp;ciId='+ciId+'&amp;ciTypeId='+ciTypeId+'&amp;ciTypeId2='+ciTypeId2+'&amp;ciTypeID2='+ciTypeId2+'&amp;isLocal=false&amp;relationshipId='+relationshipId+'&amp;relationshipTypeId='+relationshipTypeId; //NO I18N
                			updateState("AddRelListView","_D_RP", params);//NO I18N
                			refreshSubView("AddRelListView"); //NO I18N
				}
        		}
        		var workFlowAccountId='__java("WF_ACCOUNTID")';
        		var accountCombo=document.getElementById("__persistentAccountId__select");
			if(workFlowAccountId!=mspAccountId){
            			for(i=accountCombo.options.length-1;i&gt;=0;i--){
                    			if((accountCombo.options[i].value!=workFlowAccountId)&amp;&amp;(accountCombo.options[i].value!=mspAccountId)){
                            			accountCombo.remove(i);
					}
                		}
            		}
			var sdpFP = $('showDivData').onclick;
                        $('showDivData').onclick = function ()
                        {
                                sdpFP();
                                refreshRelationsView();
                        }
        		//document.getElementById("__persistentAccountId__select").value=workFlowAccountId;
        		// Changes done for Issue Id 7262
        		 setValue("__persistentAccountId__select",workFlowAccountId);
        		function setValue(elementId,value)
        		{
        			Combo=document.getElementById(elementId);
                    for(i=Combo.options.length-1;i&gt;=0;i--){
        				if((Combo.options[i].value==value)){ 
        					 Combo.value=value;   
        				}
        			}
        		}                
        		
        		refreshRelationsView();
    		</Script>
    	</HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.problem.Problem_jsp">
    <Parameters>
                <Param Name="WORKORDERID" Value="null"/>
        <HeaderAccount>
            <PageFormName>ProblemForm</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>

            <DependentElement>document.ProblemForm.SITEID</DependentElement>
        <DependentFunctionCall>get_sites_for_account_with_title</DependentFunctionCall>
        <Onchange>onChangeForAccountCombo();</Onchange>
            <PostAjaxFunction>SGTPopulate();</PostAjaxFunction>
            <i18nKey>sdp.requests.requester.not.exist</i18nKey>
            <Script>
                  var form = document.ProblemForm;
                  refreshSGTAndCSI(form);
		  autosuggest();
                  setOnChange('SITEID',refreshAccountDataOnSiteChange);

                  function onChangeForAccountCombo(){
                            var accountId = getAccountId();
                            if(accountId==0){
                                accountId = siteAccountModel[form.SITEID.value];
                            }
                            refreshAccountCategories(form,accountId);
                  }

                  function refreshAccountDataOnSiteChange(){
			var accountId=siteAccountModel[form.SITEID.value];
			refreshSiteCategories(accountId);
		  }


                  function refreshSiteCategories(accountId){
			if(getAccountId()==0){
                        	refreshAccountCategories(form,accountId);
			}
                  }

                  document.getElementsByName("Cancel")[0].onclick=pageCancel;
                  function pageCancel()
                  {
                   window.open('/Problems.cc','_self');
                  }

            </Script>
        </HeaderAccount>
    </Parameters>
    <Parameters>
        <HeaderAccount>
            <PageFormName>ProblemForm</PageFormName>
                        <ShowAllAccounts>true</ShowAllAccounts>
                        <StyleClass>formStyle</StyleClass>
            <DependentElement>document.ProblemForm.SITEID</DependentElement>
            <DependentFunctionCall>get_sites_for_accounts</DependentFunctionCall>
            <Onchange>onChangeForAccountCombo()</Onchange>
            <PostAjaxFunction>SGTPopulate()</PostAjaxFunction>
            <i18nKey>sdp.requests.requester.not.exist</i18nKey>
            <Script>

                        var accountCombo=document.getElementById("__persistentAccountId__select");
                        for(i=accountCombo.options.length-1;i&gt;=0;i--){
                              if((accountCombo.options[i].value!=workorderAccountId)&amp;&amp;(accountCombo.options[i].value!=mspAccountId)){
                                      accountCombo.remove(i);
                              }
                        }
			autosuggest();
                        document.getElementById("__persistentAccountId__select").value=workorderAccountId;
                        var form = document.ProblemForm;
                        refreshSGTAndCSI(form);
                        setOnChange('SITEID',refreshAccountDataOnSiteChange);

                        function onChangeForAccountCombo(){
                            var accountId = getAccountId();
                            if(accountId==0){
                                accountId = siteAccountModel[form.SITEID.value];
                            }
                            refreshAccountCategories(form,accountId);
                        }

                        function refreshAccountDataOnSiteChange(){
			    var accountId=siteAccountModel[form.SITEID.value];
			    refreshSiteCategories(accountId);
		  	}


                  	function refreshSiteCategories(accountId){
			    if(getAccountId()==0){
                            	refreshAccountCategories(form,accountId);
			    }
                  	}
         </Script>
                </HeaderAccount>
    </Parameters>
    </Page>

        <Page className="org.apache.jsp.problem.ProblemDetails_jsp">
        <AccountDisplay>
            <QueryParam>PROBLEMID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="Problem">
                    <Column TableName="Problem" ColumnName="PROBLEMID" />
                    <Column TableName="Problem" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="Problem" ColumnName="PROBLEMID" />
                    <Join baseTableName="Problem" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        <Disabled>true</Disabled>
            <Script>
            autosuggest();
            var catName = '__java("MSP_CATEGORY_NAME")';
            if(catName != 'null')
            {
                document.getElementById("CATEGORYID_CUR").innerHTML = catName;
            }
            </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.problem.EditProblem_jsp">
        <AccountDisplay>
            <QueryParam>PROBLEMID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="Problem">
                    <Column TableName="Problem" ColumnName="PROBLEMID" />
                    <Column TableName="Problem" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="Problem" ColumnName="PROBLEMID" />
                    <Join baseTableName="Problem" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition"     joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <Script>
		autosuggest();
                document.getElementsByName("Cancel")[0].onclick=pageCancel;
                function pageCancel()
                {
                    window.open('/ProblemDetails.cc?PROBLEMID=__java("PROBLEMID")','_self');
                }
            </Script>
        </HeaderAccount>
        </Page>
	<Page className="/EditProblem.cc">
        <AccountDisplay>
            <QueryParam>PROBLEMID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="Problem">
                    <Column TableName="Problem" ColumnName="PROBLEMID" />
                    <Column TableName="Problem" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="Problem" ColumnName="PROBLEMID" />
                    <Join baseTableName="Problem" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition"     joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <Script>
		autosuggest();
                document.getElementsByName("Cancel")[0].onclick=pageCancel;
                function pageCancel()
                {
                    window.open('/ProblemDetails.cc?PROBLEMID=__java("PROBLEMID")','_self');
                }
            </Script>
        </HeaderAccount>
	</Page>
	<Page className="org.apache.jsp.change.ChangeMain_jsp">
        <AccountDisplay>
            <QueryParam>CHANGEID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ChangeDetails">
                    <Column TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Column TableName="ChangeDetails" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Join baseTableName="ChangeDetails" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Script>
            	updateMiniCalforAccount();
            </Script>
            </HeaderAccount>
	</Page>
    <Page className="org.apache.jsp.change.Change_jsp">
            <!--This page is to add a new change-->
            <Parameters>
                <Param Name="PROJECTID" Value="null"/>
	    <HeaderAccount>
                <PageFormName>ChangeForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshPage();</Onchange>
                <Script>
                  var form = document.ChangeForm;
				  autosuggest();
				  sdpBlurFn = document.getElementById('reqSearch').onblur;
					document.getElementById('reqSearch').onblur = function (){sdpBlurFn();}
					var templateId = form.TEMPLATEID.value;
				  var changeRuleSiteId = form.SITEID.value;
				  var changeRuleAccountId = siteAccountModel[changeRuleSiteId];
                  setOnChange('SITEID',refreshAccountDataOnSiteChange);
                  function refreshPage()
                  {
                    var tm = new Date().getTime();
                    window.location.href="/AddNewChange.cc?persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;tm="+tm;
                  }

                  function refreshAccountDataOnSiteChange(){
					changeRuleSiteId = form.SITEID.value;
						var accountId=siteAccountModel[changeRuleSiteId];
					if(getAccountId()==0){
						if(accountId != changeRuleAccountId){
							changeRuleAccountId = accountId;
							refreshChgAccountCategories_FF(form,accountId);
						}
					}
				 }
				 refreshChgSGTAndCSI_FF(form,templateId);
				 updateMiniCalforAccount();
            </Script>
            </HeaderAccount>
            </Parameters>
            <Parameters>
            <HeaderAccount>
                <PageFormName>ChangeForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshPage();</Onchange>
                <i18nKey>sdp.msp.selectSite.error</i18nKey>
                <Script>
                    function refreshPage()
                    {
                        var tm = new Date().getTime();
                        window.location.href="/AddNewChange.cc?PROJECTID="+document.ChangeForm.PROJECTID.value+"&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;persistAccountID=false&amp;tm="+tm;
                    }

                    if(workorderAccountId != mspAccountId)//This is to show all accounts if it is MSP Account's project.
		     {
                        var accountCombo=document.getElementById("__persistentAccountId__select");
                        for(i=accountCombo.options.length-1;i&gt;=0;i--)
                        {
                            if((accountCombo.options[i].value!=workorderAccountId)&amp;&amp;(accountCombo.options[i].value!=mspAccountId))
                            {
                                    accountCombo.remove(i);
                            }
                        }
					}
					else
					{
                            document.getElementById("__persistentAccountId__select").remove(0);
                        }
                      var form = document.ChangeForm;
					autosuggest();
					var templateId = form.TEMPLATEID.value;
					  var changeRuleSiteId = form.SITEID.value;
					var changeRuleAccountId = siteAccountModel[changeRuleSiteId];
					refreshChgSGTAndCSI_FF(form,templateId);
                  var changeSubmitClk=document.getElementsByName("Sub")[0].onclick;
                  document.getElementsByName("Sub")[0].onclick=function()
                  {
                     var siteVal=document.getElementById("SITEID").value;
                     if(siteVal==""|| siteVal==null || siteVal=="-1")
                     {
                          alert(getMessageForKey("sdp.msp.selectSite.error")); // No i18n
                          return false;
                     }
                          return changeSubmitClk();
                   }
            </Script>
            </HeaderAccount>
            </Parameters>
    </Page>
    <Page className="org.apache.jsp.change.ShowChanges_jsp">
            <!--This page is to List change-->
            <HeaderAccount>
                <PageFormName>ChangeForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshChangeView();updateMiniCalforAccount();</Onchange>
                <Script>
            function refreshChangeView() {
                var accid=$("__persistentAccountId__select").value;
                if($('site'))
                {
                    populateAccountSites(accid, $('site'), false, setSiteOptions);
                }
              	var newVal = "&amp;persistentAccountId="+accid+"&amp;"+getState("ChangesList","_D_RP");
                updateState("ChangesList","_D_RP", newVal);// No I18N
                updateState("ChangesList", "_PN", null);// No I18N
                refreshSubView("ChangesList");// No I18N
                refreshTechniciansList($("TechList"),$("__persistentAccountId__select").value,$("TechList_Bottom"));// No I18N
                if($("site")!=null)
                {
                        eval($("changeCalendar").innerHTML);
                        changeCalendar($("__persistentAccountId__select").value);
                }
            }

            refreshTechniciansList($("TechList"),$("__persistentAccountId__select").value,$("TechList_Bottom"));// No I18N

            function setSiteOptions()
            {
                addZerothOption($('site'), 'All Sites', -1);
                $('site').selectedIndex = 0;
                setTimeout(refreshChangeCalender,500);
            }
            </Script>
            </HeaderAccount>
    </Page>
    <Page className="/ChangeDetails.do">
            <!--This page is to view a change-->
        <AccountDisplay>
            <QueryParam>CHANGEID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ChangeDetails">
                    <Column TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Join baseTableName="ChangeDetails" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
            <HeaderAccount>
                <Disabled>true</Disabled>
                <StyleClass>formStyle</StyleClass>
                <Script>
                updateMiniCalforAccount();
                var catName = '__java("MSP_CATEGORY_NAME")';
                if(catName != 'null')
                {
                    document.getElementById("CATEGORYID_CUR").innerHTML = catName;
                }
                </Script>
            </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.change.ChangeDetails_jsp">
            <!--This page is to view a change-->
        <AccountDisplay>
            <QueryParam>CHANGEID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ChangeDetails">
                    <Column TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Join baseTableName="ChangeDetails" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
            <HeaderAccount>
                <Disabled>true</Disabled>
                <StyleClass>formStyle</StyleClass>
                <Script>
                autosuggest();
                updateMiniCalforAccount();
                var catName = '__java("MSP_CATEGORY_NAME")';
                if(catName != 'null')
                {
                    document.getElementById("CATEGORYID_CUR").innerHTML = catName;
                }
                </Script>
            </HeaderAccount>
        </Page>
        <Page className="/EditChange.cc">
            <!--This page is to edit a change-->
        <AccountDisplay>
            <QueryParam>CHANGEID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ChangeDetails">
                    <Column TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Join baseTableName="ChangeDetails" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
            <HeaderAccount>
                <Disabled>true</Disabled>
                <StyleClass>formStyle</StyleClass>
            <Script>
            autosuggest();
	    updateMiniCalforAccount();
           </Script>
            </HeaderAccount>
        </Page>
        <Page className="org.apache.jsp.change.EditChange_jsp">
            <!--This page is to edit a change-->
        <AccountDisplay>
            <QueryParam>CHANGEID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ChangeDetails">
                    <Column TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Join baseTableName="ChangeDetails" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
            <HeaderAccount>
		<PageFormName>ChangeForm</PageFormName>
                <Disabled>true</Disabled>
                <StyleClass>formStyle</StyleClass>
            <Script>
	    var form = document.ChangeForm;
            autosuggest();
	        updateMiniCalforAccount();
			var changeRuleSiteId = form.SITEID.value;
					var changeRuleAccountId = getAccountId();
			refreshChgAccountTemplates(form,changeRuleAccountId);
                    changeFieldFormRulesExecution();
           </Script>
            </HeaderAccount>
        </Page>

        <Page className="org.apache.jsp.setup.BusinessRuleDef_jsp">
        <Parameters>
            <Param Name="msp" Value="true"/>
            <Param Name="mode" Value="edit"/>
                <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Query>
                    <Table Name="RuleDefinition">
                        <Column TableName="RuleDefinition" ColumnName="SITEID" />
                        <Column TableName="RuleDefinition" ColumnName="RULEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="RuleDefinition" ColumnName="RULEID" />
                        <Join baseTableName="RuleDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping"     joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <PageFormName>RuleDefAction</PageFormName>
                <InternalHelpdesk>ONLY</InternalHelpdesk>
            <ShowAllAccounts>true</ShowAllAccounts>			
            <GetAllAccounts>true</GetAllAccounts>
        <Script>

        document.getElementById("bzListViewLink").onclick = function() {
                        window.location.href = "/MSPBusinessRuleDef.do";
            };

            populateSites();
            document.BusinessRuleDefForm.action='/MSPBusinessRuleDef.do';
            document.getElementsByName('LOCATION')[0].onchange=function(){updateMSPBRDefListView('edit')};

            function populateSites() {
                var selectedSite = document.RuleDefAction.LOCATION.value;
                var ajaxRequest;
                try {
                    ajaxRequest = new XMLHttpRequest();
                } catch (e) {
                    try {
                        ajaxRequest = new ActiveXObject('Msxml2.XMLHTTP');
                    } catch (e) {
                        try {
                            ajaxRequest = new ActiveXObject('Microsoft.XMLHTTP');
                        } catch (e) {
                            alert('Your browser does not support Ajax. Please upgrade to the latest version');
                            return false;
                        }
                    }
                }
                ajaxRequest.onreadystatechange = function() {
                if(ajaxRequest.readyState == 4) {
                    var jsonString = ajaxRequest.responseText;
                    while(document.RuleDefAction.LOCATION.options.length > 0) {
                        document.RuleDefAction.LOCATION.remove(0);
                    }
                    var optionsObject = jsonString.evalJSON();
                    for(var i=0;i&lt;optionsObject.options.length;i++) {
                        var newOption = document.createElement('option');
                        newOption.text = optionsObject.options[i].text;
                        newOption.value = optionsObject.options[i].value;
                        if(selectedSite == newOption.value) {
                            newOption.selected = true;
                        }
                        try {
                            document.RuleDefAction.LOCATION.add(newOption, null);
                        } catch(x) {
                            document.RuleDefAction.LOCATION.add(newOption);
                        }
                    }
                }
                };
                var accountId = document.getElementById('__persistentAccountId__select').value;
                ajaxRequest.open('GET', appendTimestamp('/servlet/AJaxServlet?action=get_sites_for_account&amp;persistentAccountId='+accountId+'&amp;restrictUser=true&amp;configId=5'), true);
                ajaxRequest.send(null);
            }
            </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
        <Param Name="msp" Value="true"/>
        <HeaderAccount>
            <PageFormName>RuleDefAction</PageFormName>	
            <GetAllAccounts>true</GetAllAccounts>
            <InternalHelpdesk>ONLY</InternalHelpdesk>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.RuleDefAction.LOCATION</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentDefaultSettings>true</DependentDefaultSettings>
            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue>
            <DependentParameters>configId=5</DependentParameters>
            <PostAjaxFunction>updateMSPBRDefListView();</PostAjaxFunction>
            <i18nKey>sdp.msp.admin.defaultsettings.sdadminalone</i18nKey>
            <Script>
		var isMSPSettingsListView = true;
                changeLink('addNb_lnk','javascript:mspSwapBRLayerAndSetFocus();');
                changeLink('OrganizeBRLink','javascript:mspOrganizeBR()');
                document.BusinessRuleDefForm.action='/MSPBusinessRuleDef.do';
                document.getElementsByName('LOCATION')[0].onchange=updateMSPBRDefListView;

            </Script>
        </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="mode" Value="edit"/>
                <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Query>
                    <Table Name="RuleDefinition">
                        <Column TableName="RuleDefinition" ColumnName="SITEID" />
                        <Column TableName="RuleDefinition" ColumnName="RULEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="RuleDefinition" ColumnName="RULEID" />
                        <Join baseTableName="RuleDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping"     joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
			<Disabled>true</Disabled>
            <StyleClass>formStyle</StyleClass>
            <PageFormName>RuleDefAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>		
            <GetAllAccounts>true</GetAllAccounts>
        <Script>
         	var from = '__java("from")';
		var path="/BusinessRuleDef.do";
		if(from!=null &amp;&amp; from=="SCatalog"){
			path=path+"?from=SCatalog";
		}
		document.getElementById("bzListViewLink").onclick = function() {
		        window.location.href = path;
		};


            populateSites();
            disableAccountsCombo();
            function populateSites() {
                var selectedSite = document.RuleDefAction.LOCATION.value;
                var ajaxRequest;
                try {
                    ajaxRequest = new XMLHttpRequest();
                } catch (e) {
                    try {
                        ajaxRequest = new ActiveXObject('Msxml2.XMLHTTP');
                    } catch (e) {
                        try {
                            ajaxRequest = new ActiveXObject('Microsoft.XMLHTTP');
                        } catch (e) {
                            alert('Your browser does not support Ajax. Please upgrade to the latest version');
                            return false;
                        }
                    }
                }
                ajaxRequest.onreadystatechange = function() {
                if(ajaxRequest.readyState == 4) {
                    var jsonString = ajaxRequest.responseText;
                    while(document.RuleDefAction.LOCATION.options.length > 0) {
                        document.RuleDefAction.LOCATION.remove(0);
                    }
                    var optionsObject = jsonString.evalJSON();
                    for(var i=0;i&lt;optionsObject.options.length;i++) {
                        var newOption = document.createElement('option');
                        newOption.text = optionsObject.options[i].text;
                        newOption.value = optionsObject.options[i].value;
                        if(selectedSite == newOption.value) {
                            newOption.selected = true;
                        }
                        try {
                            document.RuleDefAction.LOCATION.add(newOption, null);
                        } catch(x) {
                            document.RuleDefAction.LOCATION.add(newOption);
                        }
                    }
                }
                };
                var accountId = document.getElementById('__persistentAccountId__select').value;
                ajaxRequest.open('GET', appendTimestamp('/servlet/AJaxServlet?action=get_sites_for_account&amp;persistentAccountId='+accountId+'&amp;restrictUser=true&amp;configId=5&amp;defaultSettings=true'), true);
                ajaxRequest.send(null);
            }

            function disableAccountsCombo() {
                $("__persistentAccountId__select").disabled = true;
            }
            </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
        <HeaderAccount>
            <PageFormName>RuleDefAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <GetAllAccounts>true</GetAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.RuleDefAction.LOCATION</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentDefaultSettings>true</DependentDefaultSettings>
            <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue>
                <DependentParameters>configId=5&amp;includeReferSites=true&amp;fromAdminTab=true</DependentParameters>
            <PostAjaxFunction>updateBRDefListView();</PostAjaxFunction>
            <i18nKey>sdp.msp.admin.defaultsettings.sdadminalone</i18nKey>
            <Script>
                changeLink('addNb_lnk','javascript:mspSwapBRLayerAndSetFocus();');
                changeLink('OrganizeBRLink','javascript:mspOrganizeBR()');
            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.setup.SLADef_jsp">
        <Parameters>
            <Param Name="msp" Value="true" />
            <Param Name="mode" Value="edit"/>
                <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Query>
                    <Table Name="SLADefinition">
                        <Column TableName="SLADefinition" ColumnName="SITEID" />
                        <Column TableName="SLADefinition" ColumnName="SLAID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="SLADefinition" ColumnName="SLAID" />
                        <Join baseTableName="SLADefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping"     joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
            <PageFormName>SLADefAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <GetAllAccounts>true</GetAllAccounts>
            <InternalHelpdesk>ONLY</InternalHelpdesk>
            <StyleClass>formStyle</StyleClass>
            <Script>
                document.SLADefForm.action='/MSPSLADef.do';
                document.getElementsByName('LOCATION')[0].onchange=function(){updateMSPSLADefListView('edit')};
                populateAccountSites(document.getElementById('__persistentAccountId__select').value, document.SLADefAction.LOCATION, false, null,  document.SLADefAction.LOCATION.value, 'configId=6&amp;defaultSettings=true', false);
                document.getElementById("listViewLink").onclick = mspSLAHome;
                function mspSLAHome() {
                            window.open('/SetUpWizard.do?forwardTo=mspsla', '_self');
                         }
            </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
        <Param Name="msp" Value="true" />
        <HeaderAccount>
            <PageFormName>SLADefAction</PageFormName>
            <InternalHelpdesk>ONLY</InternalHelpdesk>
            <GetAllAccounts>true</GetAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.SLADefAction.LOCATION</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentDefaultSettings>true</DependentDefaultSettings>
                <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue>
                <DependentParameters>configId=6</DependentParameters>
            <PostAjaxFunction>updateMSPSLADefListView();</PostAjaxFunction>
            <i18nKey>sdp.msp.admin.defaultsettings.sdadminalone</i18nKey>
            <Script>
		var isMSPSettingsListView = true;
                document.SLADefForm.action='/MSPSLADef.do';
                changeLink('addSla_lnk','javascript:mspSwapSLALayerAndSetFocus();');
                changeLink('OrganizeSLALink','javascript:mspOrganizeSLA()');
                document.getElementsByName('LOCATION')[0].onchange=updateMSPSLADefListView;
            </Script>
        </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="mode" Value="edit"/>
                <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Query>
                    <Table Name="SLADefinition">
                        <Column TableName="SLADefinition" ColumnName="SITEID" />
                        <Column TableName="SLADefinition" ColumnName="SLAID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="SLADefinition" ColumnName="SLAID" />
                        <Join baseTableName="SLADefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping"     joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
                <PageFormName>SLADefAction</PageFormName>
                <StyleClass>formStyle</StyleClass>
                <ShowAllAccounts>true</ShowAllAccounts>
            <GetAllAccounts>true</GetAllAccounts>
                <Script>
                    populateAccountSites(document.getElementById('__persistentAccountId__select').value, document.SLADefAction.LOCATION, false, null,  document.SLADefAction.LOCATION.value, 'configId=6&amp;defaultSettings=true', false);

                    disableAccountsCombo();
                    document.getElementById("listViewLink").onclick = function() {
                        window.location.href = "/SetUpWizard.do?forwardTo=sla";
                    };
                    function disableAccountsCombo() {
                        $("__persistentAccountId__select").disabled = true;
                    }
            </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
        <HeaderAccount>
            <PageFormName>SLADefAction</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <GetAllAccounts>true</GetAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.SLADefAction.LOCATION</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentDefaultSettings>true</DependentDefaultSettings>
                <DependentValue>$$ADMIN_SITEPREFERENCE$$</DependentValue>
                <DependentParameters>configId=6&amp;includeReferSites=true&amp;fromAdminTab=true</DependentParameters>
            <PostAjaxFunction>updateSLADefListView(document.SLADefAction);</PostAjaxFunction>
            <i18nKey>sdp.msp.admin.defaultsettings.sdadminalone</i18nKey>
            <Script>
                changeLink('addSla_lnk','javascript:mspSwapSLALayerAndSetFocus();');
                changeLink('OrganizeSLALink','javascript:mspOrganizeSLA()');
				// To refresh SLA Action Values
				function RefreshSLAActionValues() {
					var site=$('siteIDs');
					var svalue=null;
					if(site) {if(site.value === 'null'){
					site=$('dummyselect');// dummy select is used since in SLA default site has null value
					svalue = site.value;
					}
					svalue = site.value;
					}
					if(site === null){
						var siteElement=document.getElementById("LOCATION");
          
						if(siteElement !== null){
							var value=document.getElementById("LOCATION").value;
							var option = document.createElement("option");
							option.text = value ;
							option.value = value;
							option.selected=true;
							document.getElementById("dummyselect").add(option);
						} 
					site=$('dummyselect');
					svalue = site.value;
					}
					// To load SLA site related action values on Account Change
					setSGPInitalValues(site, $('PlaceInGroup0'), $('AssignToTech0'), $('AssignToTech0').value, $('PlaceInGroup0').value, svalue);
					setSGPInitalValues(site, $('PlaceInGroup1'), $('AssignToTech1'), $('AssignToTech1').value, $('PlaceInGroup1').value, svalue);
					setSGPInitalValues(site, $('PlaceInGroup2'), $('AssignToTech2'), $('AssignToTech2').value, $('PlaceInGroup2').value, svalue);
					setSGPInitalValues(site, $('PlaceInGroup3'), $('AssignToTech3'), $('AssignToTech3').value, $('PlaceInGroup3').value, svalue);
					setSGPInitalValues(site, $('PlaceInGroup4'), $('AssignToTech4'), $('AssignToTech4').value, $('PlaceInGroup4').value, svalue);
				}

            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>

        <Page className="org.apache.jsp.kbase.SolutionHome_jsp">
            <HeaderAccount>
                <PageFormName>solutionsList</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshSolutionHome()</Onchange>
                <i18nKey>sdp.solution.listview.selectmessage</i18nKey>
                <i18nKey>sdp.msp.solution.assigntoaccount</i18nKey>
                <Script>
                function refreshSolutionHome(){
				refreshTopicGroupsListView();
				refreshSolutionListView();
			}
                    //appendAssignAccountOption(); Removed because assign account is added to Actions drop down
                </Script>
            </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.contract.ContractListView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <PageFormName>ContractViewForm</PageFormName>
            <StyleClass>formStyle</StyleClass>
            <Onchange>refreshContractsView()</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
                <Script>
        if(document.getElementsByName("newContract")[0]!=null) {
        var sdpFx = document.getElementsByName("newContract")[0].onclick;
                document.getElementsByName("newContract")[0].onclick = function() {
                    if(document.HeaderForm.persistentAccountId.value == 0) {
                        alert(getMessageForKey("sdp.msp.selectAccount.error"));
            }

                    else {
                        sdpFx();
            }
         }
                }
                function refreshContractsView() {

                    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                    updateState("ContractListView","_D_RP", newVal);
                    updateState("ContractListView", "_PN", null);
                    refreshSubView("ContractListView");
                }

            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.contract.ViewContract_jsp">
        <AccountDisplay>
            <QueryParam>contractID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="MaintenanceContract">
                    <Column TableName="MaintenanceContract" ColumnName="CONTRACTID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="MaintenanceContract" ColumnName="CONTRACTID" />
                    <Join baseTableName="MaintenanceContract" baseTableColumn="CONTRACTID" joinTableName="ContractAccountMapping" joinTableColumn="CONTRACTID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="ContractAccountMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.setup.ImportLDAPUsers_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
        <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
            <Onchange>populateDomainList(this.value)</Onchange>
            <Script>

        function setAccountInForm(){
            var accountElement = document.getElementById("__persistentAccountId__select");
            var accountName = accountElement.options[accountElement.selectedIndex].innerHTML;
            document.getElementById("accNameID").value=accountName;
        }

                function populateDomainList(accName)	{
                    window.location.href = "/ImportLdapUsers.do?module=viewLDAP&amp;ACCOUNTNAME="+accName+"&amp;persistentAccountId="+accName;
                }
        var sdpFP = document.getElementsByName("addNewDomain")[0].onclick;
                document.getElementsByName("addNewDomain")[0].onclick = checkForAllAccounts;
                function checkForAllAccounts()
                {
                    var element = $("__persistentAccountId__select");
                    if(element.value == null || element.value == "0")
                    {
                        alert(getMessageForKey("sdp.admin.requesterImportWiz.selectAccountErrMsg"));
                        return;
                    }
                    sdpFP();
            setAccountInForm();
                }

            </Script>
        </HeaderAccount>
    </Page>
        <Page className="org.apache.jsp.asset.ManualNodeAdditionAsCI_jsp">
        <Parameters>
            <Param Name="wsId" Value="null"/>

        <HeaderAccount>
            <PageFormName>AddWSForm</PageFormName>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.AddWSForm.site</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <Onchange>refreshSelect2(),toggleUserAccVisibility();</Onchange>
        <PostAjaxFunction>updateAccDomains(),refreshSelect2(),toggleUserAccVisibility();</PostAjaxFunction>
        <Script>
        function updateSites() {
            populateAccountSites(null, document.AddWSForm.site,false,updateAccDomains);
        }
        function updateAccDomains(){
                updateAccountDomains(document.AddWSForm.domain,updateAccAssets,null,true);
        }
        function updateAccUsers()
        {
            populateAccountRequesters(getAccountId(), document.AddWSForm.user, true, false, true, null,null,true,null,true);
       }
    function updateAccDepts(){
            populateAccountDepts(getAccountId(),document.AddWSForm.department,true,updateAccUsers,true,null);
        }
        function updateAccAssets(){
            updateAccountAssets(document.AddWSForm.asset,updateAccDepts,null,true);
        }

        </Script>
        </HeaderAccount>

</Parameters>
    <Parameters>
    <AccountDisplay>
                <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="ResourceLocation">
                        <Column TableName="ResourceLocation" ColumnName="SITEID" />
                        <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                            <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
             </AccountDisplay>
             <HeaderAccount>
            <Disabled>true</Disabled>
                <Script>
			toggleUserAccVisibility();
                var selectedSite = document.AddWSForm.site.value;
                var selectedDomain;
                var selectedAsset;
                var selectedDept;
        var selectedUser;

        selectedDomain = document.AddWSForm.domain.value;
        selectedAsset = document.AddWSForm.asset.value;
        selectedDept = document.AddWSForm.department.value;
        selectedUser = document.AddWSForm.user.value;

        function updateSites() {
            populateAccountSites(getAccountId(), document.AddWSForm.site,false,updateAccDomains,selectedSite,"setInSession=false");
        }
        function updateAccDomains(){
            updateAccountDomains(document.AddWSForm.domain,updateAccAssets,selectedDomain,true);
        }
        function updateAccUsers()
        {
            populateAccountRequesters(getAccountId(), document.AddWSForm.user, true, false, false, null,selectedUser,true,null,true);
        }
        function updateAccDepts(){
            populateAccountDepts(getAccountId(),document.AddWSForm.department,true,updateAccUsers,true,selectedDept);
        }
        function updateAccAssets(){
            params=null;
            try{
                var wsele=document.getElementsByName("workstationId")[0];
                if(wsele!=null)
                {
                    params="&amp;workstationId="+wsele.value;
                }
            }catch(e){
            }
            updateAccountAssets(document.AddWSForm.asset,updateAccDepts,selectedAsset,true,params);
        }

        function getAssetAccount(){
            return document.getElementById("__persistentAccountId__select").value;
        }
        updateSites();
        AssetUtil.setCurrentForm(document.AddWSForm);
        var util = new AssetUtil(document.AddWSForm);

        util.fetchUsers()

                </Script>
    </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="/ViewWSDetails.do">
        <Parameters>
            <Param Name="wsId" Value="null"/>

        <HeaderAccount>
            <PageFormName>AddWSForm</PageFormName>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.AddWSForm.site</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
        <PostAjaxFunction>updateAccDomains()</PostAjaxFunction>
        <script>
        function updateSites() {
            populateAccountSites(null, document.AddWSForm.site,false,updateAccDomains);
        }
        function updateAccDomains(){
                updateAccountDomains(document.AddWSForm.domain,updateAccAssets);
        }
        function updateAccUsers()
        {
            populateAccountRequesters(getAccountId(), document.AddWSForm.user, true, false, true, null);
        }
        function updateAccAssets(){
            updateAccountAssets(document.AddWSForm.asset,updateAccDepts);
        }

        </script>
        </HeaderAccount>

</Parameters>
    <Parameters>
    <AccountDisplay>
                <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="ResourceLocation">
                        <Column TableName="ResourceLocation" ColumnName="SITEID" />
                        <Column TableName="ResourceLocation" ColumnName="RESOURCEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="ResourceLocation" ColumnName="RESOURCEID" />
                            <Join baseTableName="ResourceLocation" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
             </AccountDisplay>
             <HeaderAccount>
             <StyleClass>formStyle</StyleClass>
                <Script>
                var selectedSite = document.AddWSForm.site.value;
                var selectedDomain;
                var selectedAsset;
                var selectedDept;
        var selectedUser;

                    selectedDomain = document.AddWSForm.domain.value;
                    selectedAsset = document.AddWSForm.asset.value;
                    selectedDept = document.AddWSForm.department.value;
                    selectedUser = document.AddWSForm.user.value;
        function updateSites() {
            populateAccountSites(getAccountId(), document.AddWSForm.site,false,updateAccDomains);
        }
        function updateAccDomains(){
                updateAccountDomains(document.AddWSForm.domain,updateAccAssets,selectedDomain);
        }
        function updateAccUsers()
        {
                populateAccountRequesters(getAccountId(), document.AddWSForm.user, true, false, true, null,selectedUser,true);
        }
        function updateAccDepts(){
            populateAccountDepts(getAccountId(),document.AddWSForm.department,true,updateAccUsers,true,selectedDept);
        }
        function updateAccAssets(){
            updateAccountAssets(document.AddWSForm.asset,updateAccDepts);
        }
        //registring events
        document.AddWSForm.department.onclick=updateAccUsers;
        updateSites();
                </Script>
    </HeaderAccount>
        </Parameters>
    </Page>
    <Page className="org.apache.jsp.software.SoftwareLicense_jsp">
        <Parameters>
        <Param Name="operation" Value="new" />
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>false</ShowAllAccounts>
	    <DependentElement>document.SoftwareLicense.site</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <PostAjaxFunction>__accountChanged();</PostAjaxFunction>
            <i18nKey>sdp.admin.leftpanel.helpdesk.organization.home1</i18nKey>
            <i18nKey>sdp.inventory.asset.addnew.choosedepartment</i18nKey>
            <i18nKey>sdp.inventory.selectdepartment</i18nKey>
            <Script>

                document.HeaderForm.persistentAccountId.disabled = true;

                try {
                    document.SoftwareLicense.site.addEventListener('change', refreshDepartmentsList, false);
                    document.getElementById("licenseOptionValue").addEventListener('change', refreshAccountDepts, false);
                    document.getElementById("licenseOptionValue").addEventListener('change', fetchUserOrWSBySoftware, false);
                } catch(x) {
                    document.SoftwareLicense.site.attachEvent('onchange', refreshDepartmentsList);
                    document.getElementById("licenseOptionValue").attachEvent('onchange', refreshAccountDepts);
                    document.getElementById("licenseOptionValue").attachEvent('onchange', fetchUserOrWSBySoftware);
                }

                function __accountChanged() {

                    addOrgElement();
                    refreshDepartmentsList();
                    fetchUserOrWSBySoftware();
                    fetchUnLicensedWS();
                    resetClientSWName();
                    var allocateElement = document.getElementById("allocateToUser");
                    while(allocateElement.options.length > 0) {
                        allocateElement.remove(0);
                    }
                }

                function refreshDepartmentsList() {

                    var accountId = document.HeaderForm.persistentAccountId.value;
                    var deptElement = document.SoftwareLicense.departmentName;
                    var siteId = document.SoftwareLicense.site.value;
                    if(siteId == "-1" || siteId == "null") {
                        refreshAccountDepts();
                    }
                    else {
                        populateSiteDepts(accountId, siteId, deptElement, copyDepts);
                    }
                    resetClientSWName();
                }

                function copyDepts() {

                    var destEle = document.getElementById("department");
                    var srcEle = document.SoftwareLicense.departmentName;

                    while(destEle.options.length &gt; 0) {
                        destEle.remove(0);
                    }

                    for(var i=0;i&lt;srcEle.options.length;i++) {
                        var newOption = document.createElement('option');
                        newOption.text = srcEle.options[i].text;
                        newOption.value = srcEle.options[i].value;
                        try {
                            destEle.add(newOption, null);
                        } catch(x) {
                            destEle.add(newOption);
                        }
                    }
                    addChooseDept();
                }

                function refreshAccountDepts() {

                    var deptElement = document.SoftwareLicense.departmentName;
                    var siteId = document.SoftwareLicense.site.value;

                    if(siteId == "-1" || siteId == "null") {
                        addSelectElement = "1";
                        populateAccountDepts(document.HeaderForm.persistentAccountId.value, deptElement, "true", copyDepts);
                    }
                    else {
                        addSelectElement = "0";
                        populateSiteDepts(document.HeaderForm.persistentAccountId.value, siteId, deptElement, copyDepts);
                    }
                }

                function addOrgElement() {
                   addZerothOption(document.SoftwareLicense.site, "-- "+getMessageForKey("sdp.admin.leftpanel.helpdesk.organization.home1") + " --", "-1");
                   document.SoftwareLicense.site.selectedIndex = 0;
                }

                function addChooseDept() {
                  addZerothOption(document.SoftwareLicense.departmentName, "-- "+getMessageForKey("sdp.inventory.asset.addnew.choosedepartment") + " --", "-1");
                  addZerothOption(document.getElementById("department"), "-- "+getMessageForKey("sdp.inventory.selectdepartment") + " --", "-1");
                  document.SoftwareLicense.departmentName.selectedIndex = 0;
                  document.getElementById("department").selectedIndex = 0;
                }

                function resetClientSWName() {
                    if(document.getElementById("clientSWName")) {
                        document.getElementById("clientSWName").selectedIndex = 0;
                    }
                }
            </Script>
        </HeaderAccount>
        </Parameters>
        <Parameters>
        <Param Name="operation" Value="edit" />
        <AccountDisplay>
            <QueryParam>licenseID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="SWLicenseAccountMapping">
                        <Column TableName="SWLicenseAccountMapping" ColumnName="ACCOUNTID" />
                        <Column TableName="SWLicenseAccountMapping" ColumnName="RESOURCEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="SWLicenseAccountMapping" ColumnName="RESOURCEID" />
                        <Join baseTableName="SWLicenseAccountMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <i18nKey>sdp.admin.leftpanel.helpdesk.organization.home1</i18nKey>
            <i18nKey>sdp.inventory.asset.addnew.choosedepartment</i18nKey>
            <Script>

            var selectedSite;
            var accountId = document.getElementById("__persistentAccountId__select").value;
            refreshSitesList();
            function refreshSitesList() {

                selectedSite = document.SoftwareLicense.site.value;
                populateAccountSites(accountId, document.SoftwareLicense.site, false, sitesPopulated, null, "setInSession=false");
            }

            try {
                document.SoftwareLicense.site.addEventListener('change', refreshDepartmentsList, false);
            } catch(x) {
                document.SoftwareLicense.site.attachEvent('onchange', refreshDepartmentsList);
            }

            function sitesPopulated() {

                addZerothOption(document.SoftwareLicense.site, "-- "+getMessageForKey("sdp.admin.leftpanel.helpdesk.organization.home1") + " --", "-1");
                document.SoftwareLicense.site.value = selectedSite;
                refreshDepartmentsList();
            }

            var selectedDept;
            function refreshDepartmentsList() {

                selectedDept = document.SoftwareLicense.departmentName.value;
                var siteId = document.SoftwareLicense.site.value;
                var deptElement = document.SoftwareLicense.departmentName;
                if(siteId > 0) {
                    populateSiteDepts(accountId, siteId, deptElement, departmentPopulated);
                }
                else {
                    populateAccountDepts(accountId, deptElement, true, departmentPopulated);
                }
            }

            function departmentPopulated() {

                addZerothOption(document.SoftwareLicense.departmentName, "-- "+getMessageForKey("sdp.inventory.asset.addnew.choosedepartment") + " --", "-1");
                document.SoftwareLicense.departmentName.value = selectedDept;
                copyDepts();
            }

            function copyDepts() {

                var destEle = document.getElementById("department");
                var srcEle = document.SoftwareLicense.departmentName;

                while(destEle.options.length &gt; 1) {
                    destEle.remove(1);
                }

                for(var i=1;i&lt;srcEle.options.length;i++) {

                    var newOption = document.createElement('option');
                    newOption.text = srcEle.options[i].text;
                    newOption.value = srcEle.options[i].value;
                    try {
                        destEle.add(newOption, null);
                    } catch(x) {
                        destEle.add(newOption);
                    }
                }
            }

            </Script>
        </HeaderAccount>
        </Parameters>
    </Page>

    <Page className="org.apache.jsp.jsp.HomePage_jsp">
	<Parameters>
		<Param Name="view_type" Value="calendar"/>
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>__accountChanged()</Onchange>
            <i18nKey>sdp.reports.globalview.allsites</i18nKey>
            <Script>
                var siteEle = document.getElementById("SiteList1");

             //   __populateSites();

                function __accountChanged() {
                        var url = "/HomePage.do?view_type=calendar&amp;persistentAccountId="+document.getElementById("__persistentAccountId__select").value;
                	if(document.getElementById("TechList")!=null) {
				url = url + "&amp;techId="+document.getElementById("TechList").value;
            			window.location.href = url;
			}
                }

                function __populateSites() {

                    if(document.getElementById("SiteList1") == null) {
                        return;
                    }
                    siteEle.options[0].value = "-1";
                    var accountId = document.getElementById("__persistentAccountId__select").value;
                    if(accountId == "0") {
                        populateAccountSites(accountId, siteEle, true, __sitesAdded);
                    }
                    else {
                        populateAccountSites(accountId, siteEle, false, __sitesAdded);
                    }
                }

                function __sitesAdded() {

                    addZerothOption(siteEle, getMessageForKey("sdp.reports.globalview.allsites"), "-1");
                    siteEle.selectedIndex = "0";
                }

            </Script>
        </HeaderAccount>
	</Parameters>
	<Parameters>
                <Param Name="view_type" Value="schedular"/>
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>__accountChanged()</Onchange>
            <i18nKey>sdp.reports.globalview.allsites</i18nKey>
            <Script>
                var siteEle = document.getElementById("SiteList1");

             //   __populateSites();

                function __accountChanged() {
                          window.location.href="/HomePage.do?view_type=schedular&amp;persistentAccountId="+document.getElementById("__persistentAccountId__select").value;
                }

                function __populateSites() {

                    if(document.getElementById("SiteList1") == null) {
                        return;
                    }
                    siteEle.options[0].value = "-1";
                    var accountId = document.getElementById("__persistentAccountId__select").value;
                    if(accountId == "0") {
                        populateAccountSites(accountId, siteEle, true, __sitesAdded);
                    }
                    else {
                        populateAccountSites(accountId, siteEle, false, __sitesAdded);
                    }
                }

                function __sitesAdded() {

                    addZerothOption(siteEle, getMessageForKey("sdp.reports.globalview.allsites"), "-1");
                    siteEle.selectedIndex = "0";
                }

            </Script>
        </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="view_type" Value="resource"/>
            <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>__accountChanged()</Onchange>
                <Script>
                    var accountSitesArr;
                    var resourceAccount = getAccountId();
                    
                    if(resourceAccount!="0")
                    {
                        accountSitesArr = getSitesForAccount(resourceAccount);
                    }
                    function __accountChanged()
                    {
                        window.location.href="/HomePage.do?view_type=resource&amp;persistentAccountId="+document.getElementById("__persistentAccountId__select").value;
                    }
                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="view_type" Value="allAnnouncement"/>
            <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>__accountChanged()</Onchange>
                <Script>
                    function __accountChanged()
                    {
                        window.location.href="/HomePage.do?view_type=allAnnouncement&amp;persistentAccountId="+document.getElementById("__persistentAccountId__select").value;
                    }
                </Script>
            </HeaderAccount>
        </Parameters>
    </Page>

     <Page className="org.apache.jsp.project.ProjectResourceMgmt_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>refreshProjectRMPage()</Onchange>
        </HeaderAccount>
    </Page>

     <Page className="org.apache.jsp.reports.ReportHome_jsp">
        <HeaderAccount>
            <PageFormName>CustomReportHandlerForm</PageFormName>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.getElementById('account')</DependentElement>
            <DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
            <DependentAllSites>true</DependentAllSites>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.setup.CategoryDef_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
			<GetAllAccounts>true</GetAllAccounts>
            <Onchange>refreshCategoryView()</Onchange>
            <StyleClass>formStyle</StyleClass>
            <i18nKey>sdp.msp.category.chooseAccounts</i18nKey>
            <Script>
                function refreshCategoryView() {

                var accountId = document.getElementById("__persistentAccountId__select").value;

                var goToUrl = "";
                var currentLocation = document.location.href;
                if(currentLocation.indexOf('?') &gt; 0) {
                var aidIx = currentLocation.indexOf('persistentAccountId=');
                if(aidIx &gt; 0) {
                var firstPart = currentLocation.substring(0, aidIx);
                var secondPartBegin = currentLocation.indexOf(aidIx, '&amp;');
                if(secondPartBegin == -1) {
                secondPartBegin = currentLocation.length;
                }
                else {
                secondPartBegin++;
                }
                var secondPart = currentLocation.substring(secondPartBegin, currentLocation.length);
                currentLocation = firstPart + secondPart;
                }
                goToUrl = "&amp;persistentAccountId="+accountId;
                }
                else {
                goToUrl = "?persistentAccountId="+accountId;
                }
                document.location.href = currentLocation + encodeURI(goToUrl);
                }

                function showHideDesc() {

                    if(document.CategoryDefForm.categoryAllAccounts.checked) {
                        document.getElementById("accountBasedCategories").style.display='none';
                    }
                    else {
                        document.getElementById("accountBasedCategories").style.display='inline';
                    }
                }

                function checkAccountSelected() {

                    if(document.CategoryDefForm.selectedAccountsBox != null &amp;&amp; document.CategoryDefForm.categoryAllAccounts != null) {
                        if(((document.CategoryDefForm.selectedAccountsBox).options.length == 0) &amp;&amp; !(document.CategoryDefForm.categoryAllAccounts.checked)) {
                            alert(getMessageForKey("sdp.msp.category.chooseAccounts")); // No i18n
                            document.CategoryDefForm.availableAccountsBox.focus();
                            return false;
                        }
                    }
                    return true;
                }

                </Script>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.setup.SCatalogTemplateListView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <GetAllAccounts>true</GetAllAccounts>
            <Onchange>refreshServiceTemplateView()</Onchange>
            <StyleClass>formStyle</StyleClass>
            <Script>
                function refreshServiceTemplateView()
                {
                    var tm = new Date().getTime();
                    window.location.href="/SetUpWizard.do?forwardTo=servicecatalog&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;time="+tm;
                }
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.setup.RequestTemplateListView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Onchange>refreshTemplateView()</Onchange>
            <i18nKey>sdp.msp.selectTemplate.error</i18nKey>
            <i18nKey>sdp.msp.solution.assigntoaccount</i18nKey>
            <StyleClass>formStyle</StyleClass>
            <Script>
		    /*if(window.location.href.indexOf("NavigateByAdminRecords") != -1)
                {
                    if(!(window.location.href.indexOf("persistentAccountId")!=-1))
                    {
                        var url = window.location.href;
                        window.location.href = url+"&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value;
                    }
		    }*/
                function refreshTemplateView()
                {
                    var tm = new Date().getTime();
                    window.location.href="/SetUpWizard.do?forwardTo=RequestTemplate&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;time="+tm;
                }
                function selectAll(thisForm, checkBoxCompName)
                {
                    toSelectAll = false;
                    if(thisForm.checkbox23.checked)
                    {
                        toSelectAll = true;
                    }
                    for(var i=0; i&lt;thisForm.elements.length; i++)
                    {
                        if(thisForm.elements[i].name == checkBoxCompName)
                        {
                            if(!(thisForm.elements[i].disabled))
                            {
                                thisForm.elements[i].checked = toSelectAll;
                            }
                        }
                    }
                }
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.change.ChangeTemplateListView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Onchange>refreshChangeTemplateListView()</Onchange>
            <StyleClass>formStyle</StyleClass>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.setup.RequestTemplate_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Disabled>true</Disabled>
            <i18nKey>sdp.msp.accounts.available</i18nKey>
            <i18nKey>sdp.msp.reqTemplate.selectAccount.error</i18nKey>
            <i18nKey>sdp.msp.admin.requesterImportWiz.selectsite</i18nKey>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Script>
            var siteList=document.getElementsByName("site");
	   		var site = '__java("site")';
	   		var defaultSitebox = null;
	   		if(siteList!=null)
            {
                for(i=0;i&lt;siteList.length;i++)
                {
                    var siteBox = siteList.item(i);
                    if(siteBox.id=="site")
					{
						defaultSitebox=siteBox;
					}
                    addZerothOption(siteBox,"--"+getMessageForKey("sdp.msp.admin.requesterImportWiz.selectsite")+"--",0);
                }
            }
            getMSPSites();
            setAllAccounts();
        if(document.RequestTemplateForm.usermode.value=="add"){
                document.getElementsByName("tempSave")[0].onclick=validateSaveTask;
                document.getElementsByName("saveAndAddTask")[0].onclick=validateSaveAndAddNewTask;
            }else{
                document.getElementsByName("tempUpdate")[0].onclick=validateSaveTask;
                document.getElementsByName("updateAndAddTask")[0].onclick=validateSaveAndAddNewTask;
            }
            function validateSaveTask(){
                var isAllAccountsChecked = document.getElementsByName('templateAllAccounts')[0].checked;
                if(mspValidateTemplateForm(document.RequestTemplateForm,isAllAccountsChecked)){
                    saveTemplate();
                }
            }
            function validateSaveAndAddNewTask(){
                var isAllAccountsChecked = document.getElementsByName('templateAllAccounts')[0].checked;
                if(mspValidateTemplateForm(document.RequestTemplateForm,isAllAccountsChecked)){
                    saveTemplate(showTaskDetailsTab, ['addTask']);
                }
            }

            var saveAndConfigure = document.getElementById('configureRequester').getElementsByTagName('input')[0];
            saveAndConfigure.onclick = function(){
                var isAllAccountsChecked = document.getElementsByName('templateAllAccounts')[0].checked;
                if(mspValidateTemplateForm(document.RequestTemplateForm,isAllAccountsChecked)){
                    saveTemplate(showRequesterView, ['']);
                }
            }
            
            function saveTemplate(callback, callbackParam)
  			{
				saveRequestTemplate(callback,callbackParam);
			} 
            
            
            parent.jQuery(document).ready(function()
			{
				if(Canvas.viewObjects.SITEID){
                    Canvas.Element.saveDefaultValue(defaultSitebox, "_ev"+Canvas.viewObjects.SITEID.INDEX_NO);
                }
			});
            

            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.change.ChangeTemplateDetailsView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Disabled>true</Disabled>
            <i18nKey>sdp.msp.accounts.available</i18nKey>
            <i18nKey>sdp.msp.reqTemplate.selectAccount.error</i18nKey>
            <i18nKey>sdp.msp.admin.requesterImportWiz.selectsite</i18nKey>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Script>
            var siteList=document.getElementsByName("site");
            var site = '__java("site")';
            var defaultSitebox = null;
            if(siteList!=null)
            {
                for(i=0;i&lt;siteList.length;i++)
                {
                    var siteBox = siteList.item(i);
                    if(siteBox.id=="site")
                    {
                        defaultSitebox=siteBox;
                    }
                    addZerothOption(siteBox,"--"+getMessageForKey("sdp.msp.admin.requesterImportWiz.selectsite")+"--",0);
                }
            }
            populateChangeTemplateSites();
            getMSPChangeManagers(site);
            setAllAccounts();
            var saveStr = "tempSave";
            if(editmode)
            {
                saveStr = "tempUpdate";
            }
            document.getElementsByName(saveStr)[0].onclick = saveChangeTemplate;
            document.getElementById("isDefault").onclick = mspChgDefaultTemplate;
            chgDefaultAccChanges();

            function saveChangeTemplate(){
                var isAllAccountsChecked = document.getElementsByName('templateAllAccounts')[0].checked;
                if(mspValidateTemplateForm(document.ChangeTemplateForm,isAllAccountsChecked)){
                    chgTpltGoToTab ='roles';
                    saveTemplate();
                }
            }
            function mspChgDefaultTemplate(){
                checkDefaultTemplate();
                chgDefaultAccChanges();
            }

            function chgDefaultAccChanges(){
                var isDefChgTmplt = document.getElementById("isDefault").checked;
                var isAllAccsChck = document.getElementById("checkbox").checked;
                if(isDefChgTmplt){
                    if(!isAllAccsChck){
                        document.getElementById("checkbox").click();
                    }
                    document.getElementById("checkbox").disabled=true;
                }
                else{
                    document.getElementById("checkbox").disabled=false;
                }
            }
			</Script>
        </HeaderAccount>
    </Page>
	
	<Page className="org.apache.jsp.setup.SCatalogTemplate_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Disabled>true</Disabled>
            <i18nKey>sdp.msp.accounts.available</i18nKey>
            <i18nKey>sdp.msp.reqTemplate.selectAccount.error</i18nKey>
            <i18nKey>sdp.msp.admin.requesterImportWiz.selectsite</i18nKey>
            <i18nKey>sdp.msp.notification.allaccountsinfo</i18nKey>
            <i18nKey>sdp.msp.common.saveandaddnext</i18nKey>
            <i18nKey>sdp.msp.common.saveandfinish</i18nKey>
            <i18nKey>sdp.admin.request.template.save.err.entername</i18nKey>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Script>
            setAllAccounts();
            setTimeout("getMSPSites()",500);
            var siteList=document.getElementsByName("site");
	    var site = '__java("site")';
	    var defaultSitebox = null;
            if(siteList!=null)
            {
                for(i=0;i&lt;siteList.length;i++)
                {
                    var siteBox = siteList.item(i);
                    addZerothOption(siteBox,"--"+getMessageForKey("sdp.msp.admin.requesterImportWiz.selectsite")+"--",0);
		    if(siteBox.id=="site")
		    {
		    	defaultSitebox=siteBox;
                }
            }
            }
            var forReq = '__java("forRequester")';
            var vRules = '__java("viewRules")';
            var mode ='__java("mode")';
			var forTask = '__java("forTask")';

            function disableTemplateTabForMSP(tabName){
                $(tabName).className="scat-subtabdisable";
                $(tabName+'_with_href').className="hide";
                $(tabName+'_without_href').className="";
            }

            if(forReq=="null" &amp;&amp; vRules=="null"){
                if(mode=="add"&amp;&amp;document.SCatalogTemplateForm.usermode.value=="add"){
                    disableTemplateTabForMSP('taskView_tab');
                }
                if(mode=="edit"&amp;&amp;!$('showReq').checked){
                    disableTemplateTabForMSP('reqView_tab');
                }
            }
			
			if(forTask == "true"){
				$('slaBlock').className='hide';
				$('approverBlock').className='hide';
				$('taskDetails').className='show';
				$('taskView_tab').className='scat-subtabon';
				$('rules_tab').className='scat-subtaboff';
			}
			
            $('reqView_tab_with_href').setAttribute("href","javascript:mspChangeTemplateTab('reqView_tab')");
            $('rules_tab_with_href').setAttribute("href","javascript:SCatalog.showRulesView()");
            $('taskView_tab_with_href').setAttribute("href","javascript:mspChangeTemplateTab('taskView_tab')");
            $('techView_tab').getElementsByTagName('a')[0].setAttribute("href","javascript:mspChangeTemplateTab('techView_tab')");

            function setSessionAccount(){
                document.getElementById('accountBox').value='__java("persistentAccountId")';
                goToPage();
            }
            function mspChangeTemplateTab(tabName){
                var currTab = document.getElementsByClassName('scat-subtabon')[0].getAttribute('id');//No I18N
                if(tabName=='techView_tab' &amp;&amp;currTab!='reqView_tab'){
                        $('MSPServiceTemplate').style.display = 'block';
                        closeDialog(); //Close approvers selection dialog
                }
                else if(tabName=='taskView_tab'){
                        closeDialog(); //Close approvers selection dialog
                        var tid = document.SCatalogTemplateForm.REQUESTTEMPLATEID.value;
						var url = '/SCatalogTemplate.do?mode=edit&amp;id='+tid+'&amp;viewRules=true&amp;forTask=true'+'&amp;serviceId='+serviceId;//No I18N
						window.location = url;
                }
                SCatalog.changeTemplateTab(tabName);
            }

            SCatalog.applyCallBack = function(callback,result,callbackParam){
             var currentTab = document.getElementsByClassName('scat-subtabon')[0].getAttribute('id');//No I18N

               if(currentTab=='techView_tab'){
                    var tempId=result.id;
                    if(callback &amp;&amp; callbackParam=='rules_tab')
                    {
                        SCatalog.showRulesView();
                    }
               }
               if(callback) {
                    if(callbackParam!='rules_tab'){
                            callback.apply(this, callbackParam);
                    }
               }
               else {
                    document.SCatalogTemplateForm.usermode.value='edit';
                    showMessageAndClose(getMessageForKey("sdp.admin.servicetemplate.save.message.success"), 4000);
               }
            }

            $('formControl').getElementsByTagName('a')[0].onclick = function(){

                    if(mspValidateTemplateForm(document.SCatalogTemplateForm,false)){

                        return SCatalog.saveTemplate();
                    }
            }
            $('formControl').getElementsByTagName('a')[1].onclick = function(){
                    if(mspValidateTemplateForm(document.SCatalogTemplateForm,false)){

                           return SCatalog.saveTemplate(SCatalog.changeTemplateTab, ['rules_tab']);
                    }
            }
	     parent.jQuery(document).ready(function()
			{
				Canvas.Element.saveDefaultValue(defaultSitebox, "_ev"+Canvas.viewObjects.SITEID.INDEX_NO);
			});
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.setup.DefaultConfig_jsp">
    <Parameters>
        <Param Name="defModule" Value="notDefconfig" />
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <GetAllAccounts>true</GetAllAccounts>
            <Onchange>refreshNotView()</Onchange>
            <i18nKey>sdp.msp.solution.assigntoaccount</i18nKey>
            <i18nKey>sdp.msp.notification.allaccountsinfo</i18nKey>
            <StyleClass>formStyle</StyleClass>

            <Script>
                //solURL+="&amp;WF_ACCOUNTID=0&amp;WFfromNotificationRulesPage=MSPtrue";
                function refreshNotView(){
                    window.location.href="SetUpWizard.do?forwardTo=notDefconfig&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value;
                }

                function assignNotificationToAccount(notificationName) {
                    var tm = new Date().getTime();
                    var url = "/setup/AssignNotifyRulesToAccount.jsp?notifyName="+notificationName+"&amp;time="+tm;
                    var string = getMessageForKey('sdp.msp.solution.assigntoaccount');
                    showURLInDialog(url, 'closeButton=yes,width=540,height=310,title='+string+',');
                }


                document.getElementsByName('submit')[0].onclick=function() {
                    if(document.getElementById('__persistentAccountId__select').value==0) {
                        var tab = document.getElementById("request_tab");
                        var status=confirm(getMessageForKey("sdp.msp.notification.allaccountsinfo"));
                        if(!(status)) {
                            return false;
                        }
                    }
                    return validateInput(this.form);
                }


                function updateNotificationStatus() {

                    var accId = document.getElementById('__persistentAccountId__select').value;
                    var Url='/servlet/AJaxServlet';
                    var notAjax = new Ajax.Request(Url, {
                        method: 'post',
                        parameters:{accountId:accId,action:"get_enabled_notifications"}, onComplete:function(resp){handleResponse(resp);}
                    });

                }
		function updateChecks() {

                    inputs  = document.getElementsByTagName('input');
                    for(var i=0; i&lt;inputs.length; i++) {
                        if((inputs[i].getAttribute('type') == 'checkbox')&amp;&amp;(inputs[i].getAttribute('id') == 'replaceNotificationChecks')) {
                            var checkNode = document.getElementById('checkImage'+i);
                            checkNode.parentNode.removeChild(checkNode);
                        }
                    }
                    replaceNotificationChecks();
                }

		function handleResponse(resp){

                    var response = resp.responseText.evalJSON();
                    var notlen = response.notification.length;
                    for( i=0; i&lt;notlen; i++ ) {
                        var notifyName = response.notification[i].notifyname;
                        var isEnabled = response.notification[i].check;
                        var element = document.getElementsByName(notifyName);
                        if(element.length !=0)
                        {
	                        if(isEnabled=='true') {
	                            (element[0]).checked=true;
	                        }
	                        else {
	                            (element[0]).checked=false;
	                        }
						}
                    }
                    updateChecks();
                }

                function mspValidateInput(form) {
                    validateInput(form);
                    if(document.getElementById('__persistentAccountId__select').value == 0) {
                        var tab = document.getElementById("request_tab");
                        var status=confirm(getMessageForKey("sdp.msp.notification.allaccountsinfo"));
                        if(!(status)) {
                            return false;
                        }
                    }
                }

                function escalateToList(nameList, idList, noTicketOwner) {

                    var mode = 'add';
                    var evalStr = 'document.DefaultConfigDefForm.' + nameList + '.value';
                    var values = eval(evalStr);
                    evalStr = 'document.DefaultConfigDefForm.' + idList + '.value';
                    ids = eval(evalStr);
                    if(values!=null &amp;&amp; values!='' &amp;&amp; ids!=null &amp;&amp; ids!='') {
                        mode = 'edit';
                    }
                    url = 'SearchItem.do?criteria=Technician Name&amp;element1=document.DefaultConfigDefForm.'+nameList+'&amp;element2=document.DefaultConfigDefForm.'+idList+'&amp;from=escalate&amp;mode='+mode+'&amp;WF_ACCOUNTID=0&amp;WFfromNotificationRulesPage=MSPtrue';
                    if(noTicketOwner == 'true') {
                        url = url + "&amp;noTicketOwner=true";
                    }
                    NewWindow(url,'selectitem','320','350','yes','center');
                }

                updateNotificationStatus();
            </Script>
        </HeaderAccount>
    </Parameters>
    </Page>

    <Page className="org.apache.jsp.software.licenseagreementslist_jsp">
        <HeaderAccount>
            <Onchange>populateAgreementList(this.value)</Onchange>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
            <Script>
            document.getElementById("AddAgreement").onclick = addAgreement;
            function populateAgreementList(accountId) {
                    var newVal = "&amp;expirein="+document.getElementById("expirydays").value;
                    updateState("LicenseAgreementListView","_D_RP", newVal);
                    updateState("LicenseAgreementListView", "_PN", null);
                    refreshSubView("LicenseAgreementListView");
            }
            function addAgreement() {
                    if($("__persistentAccountId__select").value == "0") {
                        alert(getMessageForKey("sdp.admin.requesterImportWiz.selectAccountErrMsg"));
                    }
                    else {
                        window.open('/LicenseAgreement.do?operation=newagreement', '_parent')
                    }
            }

            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.software.addlicenseagreement_jsp">
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>false</ShowAllAccounts>
            <Onchange>__accountChanged()</Onchange>
            <Script>
                populateUsers();
                function __accountChanged() {
                    updateAgreementLicenseList(document.LicenseAgreement.softwareManufacturer);
                    populateUsers();
                }
                function populateUsers() {

                    var usersElement = document.LicenseAgreement.fromList;
                    while(usersElement.options.length > 0) {
                        usersElement.remove(0);
                    }
                   populateAccountRequesters(document.getElementById("__persistentAccountId__select").value, document.LicenseAgreement.fromList, true, true, false, null, null, null, true, true);
                }
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.software.ViewSWLicenseDetails_jsp">
        <AccountDisplay>
            <QueryParam>wsId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="SWLicenseAccountMapping">
                    <Column TableName="SWLicenseAccountMapping" ColumnName="RESOURCEID" />
                    <Column TableName="SWLicenseAccountMapping" ColumnName="ACCOUNTID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="SWLicenseAccountMapping" ColumnName="RESOURCEID" />
                    <Join baseTableName="SWLicenseAccountMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.software.softwarehomepage_jsp">
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>false</ShowAllAccounts>
            <Onchange>__accountChanged()</Onchange>
            <i18nKey>sdp.reports.globalview.allsites</i18nKey>
            <Script>

                function __accountChanged() {

                    var currentUrl = window.location.href;
					var accountIdOnchange=document.HeaderForm.persistentAccountId.value;
                    var newVal = "persistentAccountId="+accountIdOnchange;
					createCookie('persistentaccountid', accountIdOnchange);//NO I18N
                    if(currentUrl.indexOf("persistentAccountId") &gt; 0) {
                        currentUrl = currentUrl.substring(0, currentUrl.indexOf("persistentAccountId"));
                    }
                    else {
                        currentUrl = currentUrl + "&amp;";
                    }
                    currentUrl = currentUrl + newVal;
                    window.location.href = currentUrl;
                }
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.dashboard.Dashboard_jsp">
        <Parameters>
                <HeaderAccount>
                        <StyleClass>formStyle</StyleClass>
                        <ShowAllAccounts>true</ShowAllAccounts>
                        <Onchange>__accountChanged()</Onchange>
                        <Script>
                                function __accountChanged(){
                                        var currentUrl = "DashBoard.do?persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                                        window.location.href = currentUrl;
                                        createCookie('persistentaccountid', document.HeaderForm.persistentAccountId.value);//NO I18N
                                }
                                function handleAllAccountRestriction() {
                                    Array.from(document.querySelectorAll("li.menu-tab[data-viewid^='dcDashboard_']")).forEach(
                                        function(element, index, array) {
                                            var check = element.querySelector("a");
                                            check.addEventListener("click", function(e){
                                                if(isAllAccountsSelected()) {
                                                    e.stopImmediatePropagation();
                                                    alert(getMessageForKey("msp.choose.account"));
                                                }
                                            });
                                        }
                                    );
                                }
                                setTimeout(handleAllAccountRestriction, 500);
                        </Script>
                </HeaderAccount>
        </Parameters>
    </Page>

    <Page className="org.apache.jsp.software.ImportSoftwareLicensesWizard1_jsp">
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
            <Script>

                function validateCSVFile() {
                    if(trim(document.getElementById('csvfile').value) == '') {
                        showBaloonToolTip('csvfile', getMessageForKey('sdp.software.license.import.locatecsv'));
                        return false;
                    }
                    if(!document.getElementById('csvfile').value.endsWith('.csv')) {
                        showBaloonToolTip('csvfile', getMessageForKey("sdp.software.license.import.allowedonlycsvfile"));
                        return false;
                    }
                    if(document.getElementById("__persistentAccountId__select").value == "0") {
                        showBaloonToolTip('__persistentAccountId__select', getMessageForKey("sdp.msp.selectAccount.error"));
                        return false;
                    }
                    document.getElementById("__persistentAccountId__select").disabled = true;
                    appendAccountElement();
                    return true;
                }

                function appendAccountElement() {
                    var slForm = window.frames["populateCSVFields"].document.SoftwareLicense;
                    if(slForm == null) {
                        setTimeout("appendAccountElement()", 500);
                    }
                    else {
                        var hiddenAccount = document.createElement("input");
                        hiddenAccount.setAttribute("type", "hidden");
                        hiddenAccount.setAttribute("name", "persistentAccountId");
                        hiddenAccount.setAttribute("id", "persistentAccountId");
                        hiddenAccount.setAttribute("value", top.document.getElementById("__persistentAccountId__select").value);
                        slForm.appendChild(hiddenAccount);

                        slForm.onsubmit = validateAndEnableAccount;
                    }
                }

                function validateAndEnableAccount() {
                    var returnValue = window.frames["populateCSVFields"].validateLicenseImportMandatoryFields();
                    if(returnValue) {
                        top.document.getElementById("__persistentAccountId__select").disabled = false;
                    }
                    return returnValue;
                }
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.software.importsoftwarelicenses_jsp">
        <HeaderAccount>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
            <Script>

                function validateCSVFile() {   
                    if(trim(document.getElementById('csvfile').value) == '') {
        				alert(getMessageForKey('sdp.software.license.import.locatecsv'));
                        return false;
                    }
                    if(!document.getElementById('csvfile').value.endsWith('.csv')) {
       					alert(getMessageForKey("sdp.software.license.import.allowedonlycsvfile"));
                        return false;
                    }
                    if(document.getElementById("__persistentAccountId__select").value == "0") {
                        alert(getMessageForKey("sdp.msp.selectAccount.error"));
                        return false;
                    }
                    document.getElementById("__persistentAccountId__select").disabled = true;
                    appendAccountElement();
                    return true;
                }

                function appendAccountElement() {
                    var slForm = window.frames["populateCSVFields"].document.SoftwareLicense;
                    if(slForm == null) {
                        setTimeout("appendAccountElement()", 500);
                    }
                    else {
                        var hiddenAccount = document.createElement("input");
                        hiddenAccount.setAttribute("type", "hidden");
                        hiddenAccount.setAttribute("name", "persistentAccountId");
                        hiddenAccount.setAttribute("id", "persistentAccountId");
                        hiddenAccount.setAttribute("value", top.document.getElementById("__persistentAccountId__select").value);
                        slForm.appendChild(hiddenAccount);

                        slForm.onsubmit = validateAndEnableAccount;
                    }
                }

                function validateAndEnableAccount() {
                    var returnValue = window.frames["populateCSVFields"].validateLicenseImportMandatoryFields();
                    if(returnValue) {
                        top.document.getElementById("__persistentAccountId__select").disabled = false;
                    }
                    return returnValue;
                }
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.setup.ViewUserDetailsForResources_jsp">
        <Parameters>
            <Param Name="msp" Value="true" />
            <HeaderAccount>
                <InternalHelpdesk>ONLY</InternalHelpdesk>
                <Disabled>true</Disabled>
                <Script>
                    insertInLinkForId('editIcon','RequesterDef','MSPRequesterDef');
                    insertInLinkForId('showAssetDetails','RequesterDef','MSPRequesterDef');
                    insertInLinkForId('listView','requester','msprequester');
                </Script>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="UserDepartment">
                        <Column TableName="UserDepartment" ColumnName="USERID" />
                        <Column TableName="UserDepartment" ColumnName="DEPTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="UserDepartment" ColumnName="USERID" />
                        <Join baseTableName="UserDepartment" baseTableColumn="DEPTID" joinTableName="DepartmentDefinition" joinTableColumn="DEPTID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="DepartmentDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                     </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
        <Parameters>
            <HeaderAccount>
                <Disabled>true</Disabled>
                <Script>
                        hideChangeToTechNotes();
                </Script>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="UserDepartment">
                        <Column TableName="UserDepartment" ColumnName="USERID" />
                        <Column TableName="UserDepartment" ColumnName="DEPTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="UserDepartment" ColumnName="USERID" />
                        <Join baseTableName="UserDepartment" baseTableColumn="DEPTID" joinTableName="DepartmentDefinition" joinTableColumn="DEPTID"     joinCondition="INNER_JOIN" />
                        <Join baseTableName="DepartmentDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
    </Page>

    <Page className="org.apache.jsp.setup.ViewUserAssociationDetails_jsp">
        <Parameters>
            <Param Name="msp" Value="true" />
            <HeaderAccount>
                <InternalHelpdesk>ONLY</InternalHelpdesk>
                <Disabled>true</Disabled>
                <Script>
                    insertInLinkForId('editIcon','RequesterDef','MSPRequesterDef');
                    insertInLinkForId('showDetails','RequesterDef','MSPRequesterDef');
                    insertInLinkForId('listView','requester','msprequester');
                </Script>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="UserDepartment">
                        <Column TableName="UserDepartment" ColumnName="USERID" />
                        <Column TableName="UserDepartment" ColumnName="DEPTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="UserDepartment" ColumnName="USERID" />
                        <Join baseTableName="UserDepartment" baseTableColumn="DEPTID" joinTableName="DepartmentDefinition" joinTableColumn="DEPTID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="DepartmentDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                     </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
        <Parameters>
            <HeaderAccount>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>id</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="UserDepartment">
                        <Column TableName="UserDepartment" ColumnName="USERID" />
                        <Column TableName="UserDepartment" ColumnName="DEPTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="UserDepartment" ColumnName="USERID" />
                        <Join baseTableName="UserDepartment" baseTableColumn="DEPTID" joinTableName="DepartmentDefinition" joinTableColumn="DEPTID"     joinCondition="INNER_JOIN" />
                        <Join baseTableName="DepartmentDefinition" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
    </Page>
<Page className="org.apache.jsp.setup.ViewCIDetailsForOthersInAdmin_jsp">
        <Parameters>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <i18nKey>sdp.admin.organization.header</i18nKey>
                <Script>
                        var task = '__java("task")';
                        if(task == 'orgdetails'){
                                document.getElementById('showListView').style.display = 'none';
                        }
                        if(isCMDB == "false" &amp;&amp; ((task=='account') || task=='orgdetails')) {
                            (function($) {
                                $($(".details-tab-cnt table:first-child")[0]).before("&lt;div class='details-tab-header'&gt;&lt;img src='custom/customimages/account_citype_icon.png' width='20px' height='20px'&gt;&lt;strong&gt;"+getMessageForKey("sdp.admin.organization.header")+"&lt;/strong&gt;&lt;/div&gt;");
                                $(".details-tabs").remove();
                            }
                            )(jQuery);
                        }
                </Script>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                	<Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
</Page>
<Page className="org.apache.jsp.setup.ViewCIDetailsForAccount_jsp">
    <Parameters>
	 <Param Name="mode" Value="accEdit" />
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                        <Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
     </Parameters> 
	 <Parameters>
     <Param Name="mode" Value="edit" />
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                        <Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
     </Parameters>
	 <Parameters>
	 <Param Name="mode" Value="null" />
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                        <Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
	 <Parameters>
            <Param Name="mode" Value="accAdd"/>
            <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>accountStyleDisabled</StyleClass>
				<Disabled>true</Disabled>
				<Script>
				setAllAccounts();
				</Script>
            </HeaderAccount>

        </Parameters>
        <Parameters>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                        <Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
</Page>
<Page className="org.apache.jsp.asset.ViewCIDetailsForOthers_jsp">
        <Parameters>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                        <Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
</Page>
<Page className="org.apache.jsp.setup.ViewOtherCIRelationshipDetailsInAdmin_jsp">
        <Parameters>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <Script>
                        var task = '__java("task")';
                        if(task == 'orgdetails'){
                                document.getElementById('showListView').style.display = 'none';
                        }
                </Script>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
			<Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
</Page>
<Page className="org.apache.jsp.setup.ViewCIHistoryDetailsForOthersInAdmin_jsp">
        <Parameters>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
			<Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
</Page>
<Page className="org.apache.jsp.asset.ViewOtherCIRelationshipDetails_jsp">
        <Parameters>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
			<Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
</Page>
<Page className="org.apache.jsp.asset.ViewCIHistoryDetails_jsp">
        <Parameters>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            </HeaderAccount>
            <AccountDisplay>
                <QueryParam>ciId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
			<Table Name="CI">
                        <Column TableName="CI" ColumnName="CIID" />
                        <Column TableName="CI" ColumnName="SITEID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="CI" ColumnName="CIID" />
                        <Join baseTableName="CI" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
                </AccountDisplay>
        </Parameters>
</Page>
    <Page className="/ProblemDetails.cc">
        <AccountDisplay>
            <QueryParam>PROBLEMID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="Problem">
                    <Column TableName="Problem" ColumnName="PROBLEMID" />
                    <Column TableName="Problem" ColumnName="SITEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="Problem" ColumnName="PROBLEMID" />
                    <Join baseTableName="Problem" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
        <Disabled>true</Disabled>
            <Script>
            //populateSitesForMSP();
            //refreshMSPCategoriesForEditProblem("probDetails");
            autosuggest();
            function resetCSI()
            {
                var catEle = document.ProblemForm.CATEGORYID;
                if(!(catEle==undefined))
                {
                    removeAllOptionTags(catEle);
                    resetSubcatItem();
                }
            }

            function resetSubcatItem()
            {
                removeAllOptionTags(document.ProblemForm.SUBCATEGORYID);
                removeAllOptionTags(document.ProblemForm.ITEMID);
            }

            function removeAllOptionTags(element)
            {
                while(element.options.length > 1)
                {
                    element.remove(1);
                }
            }

            function populateSitesForMSP() {

                var ajaxRequest;
                try {
                    ajaxRequest = new XMLHttpRequest();
                } catch (e) {
                    try {
                        ajaxRequest = new ActiveXObject('Msxml2.XMLHTTP');
                    } catch (e) {
                        try {
                            ajaxRequest = new ActiveXObject('Microsoft.XMLHTTP');
                        } catch (e) {
                            alert('Your browser does not support Ajax. Please upgrade to the latest version');
                            return false;
                        }
                    }
                }
                ajaxRequest.onreadystatechange = function() {
                if(ajaxRequest.readyState == 4) {
                    var jsonString = ajaxRequest.responseText;
                    while(document.ProblemForm.SITEID.options.length &gt; 0) {
                        document.ProblemForm.SITEID.remove(0);
                    }
                    var optionsObject = jsonString.evalJSON();
                    for(var i=0;i&lt;optionsObject.options.length;i++) {
                        var newOption = document.createElement('option');
                        newOption.text = optionsObject.options[i].text;
                        newOption.value = optionsObject.options[i].value;
                        if(optionsObject.options[i].title != null) {
                            newOption.title = optionsObject.options[i].title;
                        }
                        if((optionsObject.options[i].selected != null) &amp;&amp; (optionsObject.options[i].selected == 'true')) {
                            newOption.selected = true;
                        }
                        try {
                            document.ProblemForm.SITEID.add(newOption, null);
                        } catch(x) {
                            document.ProblemForm.SITEID.add(newOption);
                        }
                    }
                }
            };
            var accountId = $('__persistentAccountId__select').value;
            ajaxRequest.open('GET', '/servlet/AJaxServlet?action=get_sites_for_accounts&amp;persistValue=false&amp;persistentAccountId='+accountId+'&amp;restrictUser=true', true);
            ajaxRequest.send(null);
            }
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="/ChangeDetails.cc">
            <!--This page is to view a change-->
        <AccountDisplay>
            <QueryParam>CHANGEID</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="ChangeDetails">
                    <Column TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="ChangeDetails" ColumnName="CHANGEID" />
                    <Join baseTableName="ChangeDetails" baseTableColumn="SITEID" joinTableName="AccountSiteMapping" joinTableColumn="SITEID" joinCondition="INNER_JOIN" />
                    <Join baseTableName="AccountSiteMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
            <HeaderAccount>
                <Disabled>true</Disabled>
                <StyleClass>formStyle</StyleClass>
                <Script>
                //populateSitesForMSP(document.ChangeForm.SITEID,-1,false);
                //refreshMSPCategoriesForEditChange("chnDetails");

            function resetCSI()
            {
                var catEle = document.ChangeForm.CATEGORYID;
                if(!(catEle==undefined))
                {
                    removeAllOptionTags(catEle);
                    resetSubcatItem();
                }
            }

            function resetSubcatItem()
            {
                removeAllOptionTags(document.ChangeForm.SUBCATEGORYID);
                removeAllOptionTags(document.ChangeForm.ITEMID);
            }

            function removeAllOptionTags(element)
            {
                while(element.options.length > 1)
                {
                    element.remove(1);
                }
            }
            function populateSitesForMSP() {

                var ajaxRequest;
                try {
                    ajaxRequest = new XMLHttpRequest();
                } catch (e) {
                    try {
                        ajaxRequest = new ActiveXObject('Msxml2.XMLHTTP');
                    } catch (e) {
                        try {
                            ajaxRequest = new ActiveXObject('Microsoft.XMLHTTP');
                        } catch (e) {
                            alert('Your browser does not support Ajax. Please upgrade to the latest version');
                            return false;
                        }
                    }
                }
                ajaxRequest.onreadystatechange = function() {
                if(ajaxRequest.readyState == 4) {
                    var jsonString = ajaxRequest.responseText;
                    while(document.ChangeForm.SITEID.options.length &gt; 0) {
                        document.ChangeForm.SITEID.remove(0);
                    }
                    var optionsObject = jsonString.evalJSON();
                    for(var i=0;i&lt;optionsObject.options.length;i++) {
                        var newOption = document.createElement('option');
                        newOption.text = optionsObject.options[i].text;
                        newOption.value = optionsObject.options[i].value;
                        if(optionsObject.options[i].title != null) {
                            newOption.title = optionsObject.options[i].title;
                        }
                        if((optionsObject.options[i].selected != null) &amp;&amp; (optionsObject.options[i].selected == 'true')) {
                            newOption.selected = true;
                        }
                        try {
                            document.ChangeForm.SITEID.add(newOption, null);
                        } catch(x) {
                            document.ChangeForm.SITEID.add(newOption);
                        }
                    }
                }
            };
            var accountId = $('__persistentAccountId__select').value;
            ajaxRequest.open('GET', '/servlet/AJaxServlet?action=get_sites_for_accounts&amp;persistValue=false&amp;persistentAccountId='+accountId+'&amp;restrictUser=true', true);
            ajaxRequest.send(null);
            }
                   </Script>
            </HeaderAccount>
    </Page>
     <Page className="org.apache.jsp.asset.Inventory_005fTroubleShooting_jsp">
     <HeaderAccount>
            <ShowAllAccounts>false</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Style>width:320px;</Style>
            <Onchange>getSitesForAccount()</Onchange>
        </HeaderAccount>
     </Page>

   <Page className="org.apache.jsp.asset.ListViewAgentDetails_jsp">
     <HeaderAccount>
          <PageFormName>AgentListView</PageFormName>
         <ShowAllAccounts>true</ShowAllAccounts>
         <StyleClass>formStyle</StyleClass>
         <Onchange>handleAccChanges()</Onchange>
         <Script>
             function handleAccChanges(){
                     persistEle.value=getAccountId();
                 handleChanges(document.AgentListView, "AgentListView");
                 }

             var persistEle=document.createElement("input");
                 persistEle.setAttribute("type","hidden");
             persistEle.setAttribute("name","persistentAccountId");
             persistEle.value=getAccountId();
             document.AgentListView.appendChild(persistEle);

              </Script>
        </HeaderAccount>
    </Page>

 <Page className="org.apache.jsp.asset.ViewAuditDetails_jsp">
     <HeaderAccount>
          <PageFormName>AuditDetailsForm</PageFormName>
         <ShowAllAccounts>true</ShowAllAccounts>
         <StyleClass>formStyle</StyleClass>
         <Onchange>AccAppend()</Onchange>
         <Script>

             function AccAppend(){
                     persistEle.value=getAccountId();
                 var auditType = document.getElementById('AuditDetailsForm').auditType.value;
                 getSearchResultForType(auditType);
                 }
             var persistEle=document.createElement("input");
                 persistEle.setAttribute("type","hidden");
             persistEle.setAttribute("name","persistentAccountId");
             persistEle.value=getAccountId();
             document.getElementById('AuditDetailsForm').appendChild(persistEle);
        </Script>
      </HeaderAccount>
  </Page>

  <Page className="org.apache.jsp.reports.AuditReportMainPage1_jsp">
    <HeaderAccount>
        <ShowAllAccounts>true</ShowAllAccounts>
        <StyleClass>formStyle</StyleClass>
        <Onchange>fillSitesForMSP()</Onchange>
        <i18nKey>sdp.admin.site.listview.sitename</i18nKey>
    </HeaderAccount>
 </Page>

    <Page className="org.apache.jsp.setup.UserGroupsDef_jsp">
        <Parameters>
            <Param Name="mode" Value="edit"/>
            <AccountDisplay>
                <QueryParam>userGroupId</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="UserGroupsAccMapping">
                        <Column TableName="UserGroupsAccMapping" ColumnName="USERGROUPID" />
                        <Column TableName="UserGroupsAccMapping" ColumnName="ACCOUNTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="UserGroupsAccMapping" ColumnName="USERGROUPID" />
                        <Join baseTableName="UserGroupsAccMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Script>
                   var accountId = document.getElementById('__persistentAccountId__select').value+"&amp;";
                   lookupURL="LookupCriteria.do?WF_ACCOUNTID="+accountId;
                   searchURL="SearchRequester.do?WF_ACCOUNTID="+accountId;
                   document.getElementById("showList").href = "/UserGroupsDef.do";
                   selectAccount();
                </Script>
           </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="updateAndAddNew" Value="updateAndAddNew"/>
            <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshUserGroup()</Onchange>
                <i18nKey>sdp.msp.selectAccount.error</i18nKey>
                <Script>
                    parent.document.getElementById("__persistentAccountId__select").value = __java("WF_ACCOUNTID");
                    var accountId = document.getElementById('__persistentAccountId__select').value+"&amp;";
                    lookupURL="LookupCriteria.do?WF_ACCOUNTID="+accountId;
                    searchURL="SearchRequester.do?WF_ACCOUNTID="+accountId;
                    refreshUserGroup();
                    selectAccount();
                </Script>
            </HeaderAccount>

        </Parameters>
        <Parameters>
            <Param Name="mode" Value="null"/>
            <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <Onchange>refreshUserGroup()</Onchange>
            <i18nKey>sdp.msp.selectAccount.error</i18nKey>
            <i18nKey>sdp.msp.common.allAccounts</i18nKey>
            <Script>
                var accountId = document.getElementById('__persistentAccountId__select').value+"&amp;";
                 lookupURL="LookupCriteria.do?WF_ACCOUNTID="+accountId;
                 searchURL="SearchRequester.do?WF_ACCOUNTID="+accountId;
                selectAccount();
            </Script>

        </HeaderAccount>
        </Parameters>
 </Page>
 <Page className="org.apache.jsp.home.AnnouncementShowAll_jsp">
    <HeaderAccount>
        <ShowAllAccounts>true</ShowAllAccounts>
        <StyleClass>formStyle</StyleClass>
        <Onchange>refreshAnnouncement()</Onchange>
        <i18nKey>sdp.msp.selectAccount.error</i18nKey>
        <i18nKey>sdp.msp.common.allAccounts</i18nKey>
    </HeaderAccount>
 </Page>

<Page className="org.apache.jsp.dc.DCHomepage_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
        </HeaderAccount>
</Page>

<Page className="org.apache.jsp.mdmp.mdmpIframePage_jsp">
    <HeaderAccount>
        <ShowAllAccounts>true</ShowAllAccounts>
        <StyleClass>formStyle</StyleClass>
    </HeaderAccount>
</Page>

<Page className="org.apache.jsp.setup.NotificationContent_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.msp.notification.allaccountsinfo</i18nKey>
            <Disabled>true</Disabled>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Script>
                document.getElementById('saveContent').onclick = function(){
                        var accountBox = document.getElementsByName("accountId")[0];
                        if(accountBox &amp;&amp; accountBox.value==0){
                            var status=confirm(getMessageForKey("sdp.msp.notification.allaccountsinfo"));
                            if(!(status)) {
                                return false;
                            }
                        }
                 }
            </Script>
        </HeaderAccount>
</Page>
    <Page className="org.apache.jsp.setup.AccountContract_jsp">
    <Parameters>
        <Param Name="mode" Value="editContract"/>
        <AccountDisplay>
            <QueryParam>contractId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="AccountContract">
                    <Column TableName="AccountContract" ColumnName="CONTRACTID" />
                    <Column TableName="AccountContract" ColumnName="ACCOUNTID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="AccountContract" ColumnName="CONTRACTID" />
                    <Join baseTableName="AccountContract" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>editContractDropDown</StyleClass>
            <Script>
                $("__persistentAccountId__renderer").className="fontbigBold";
            </Script>
        </HeaderAccount>
    </Parameters>
     <Parameters>
        <Param Name="mode" Value="renew"/>
        <AccountDisplay>
            <QueryParam>contractId</QueryParam>
            <Attribute>WF_ACCOUNTID</Attribute>
            <Query>
                <Table Name="AccountContract">
                    <Column TableName="AccountContract" ColumnName="CONTRACTID" />
                    <Column TableName="AccountContract" ColumnName="ACCOUNTID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                    <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                    <MatchingCriteria TableName="AccountContract" ColumnName="CONTRACTID" />
                    <Join baseTableName="AccountContract" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                </Table>
            </Query>
            <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
        </AccountDisplay>
        <HeaderAccount>
            <StyleClass>editContractDropDown</StyleClass>
            <Script>
                $("__persistentAccountId__renderer").className="fontbigBold";
            </Script>
        </HeaderAccount>
    </Parameters>
        <Parameters>
           	<Param Name="mode" Value="listView"/>
            <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshOtherContractList()</Onchange>
                <Script>
                    $("__persistentAccountId__renderer").className="fontbigBold";   
                </Script>
            </HeaderAccount>
        </Parameters>
        <Parameters>
            <HeaderAccount>
                <PageFormName>AccountContractForm</PageFormName>
                <ShowAllAccounts>false</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <Onchange>refreshContractPage()</Onchange>
                <Script>
                    $("__persistentAccountId__renderer").className="fontbigBold";
                </Script>
            </HeaderAccount>
        </Parameters>
    </Page>
        <Page className="org.apache.jsp.reports.Billing_jsp">
            <Parameters>
                <Param Name="mode" Value="edit"/>
                <AccountDisplay>
                    <QueryParam>billId</QueryParam>
                    <Attribute>WF_ACCOUNTID</Attribute>
                    <Query>
                        <Table Name="BillHistory">
                            <Column TableName="BillHistory" ColumnName="BILLID" />
                            <Column TableName="BillHistory" ColumnName="ACCOUNTID" />
                            <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                            <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                            <MatchingCriteria TableName="BillHistory" ColumnName="BILLID" />
                            <Join baseTableName="BillHistory" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                        </Table>
                    </Query>
                    <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
		</AccountDisplay>
                <HeaderAccount>
                    <StyleClass>accountStyleDisabled</StyleClass>
                    <Disabled>true</Disabled>
                    <ShowAllAccounts>true</ShowAllAccounts>
                </HeaderAccount>
            </Parameters>
            <Parameters>
                <Param Name="mode" Value="null"/>
                <HeaderAccount>
                    <i18nKey>sdp.msp.bill.selectdate.column</i18nKey>
                    <i18nKey>sdp.msp.bill.generate</i18nKey>
                    <i18nKey>sdp.msp.bill.sendtocustomer</i18nKey>
                    <i18nKey>sdp.msp.bill.makeasmain</i18nKey>
                    <i18nKey>sdp.msp.bill.sendtocustomer</i18nKey>
                    <ShowAllAccounts>true</ShowAllAccounts>
                    <StyleClass>formStyle</StyleClass>
                    <Onchange>showbillingReportListView()</Onchange>
                </HeaderAccount>
            </Parameters>
            <Parameters>
                <Param Name="mode" Value="changeBill"/>
                <HeaderAccount>
                    <i18nKey>sdp.msp.bill.selectdate.column</i18nKey>
                    <i18nKey>sdp.msp.bill.generate</i18nKey>
                    <i18nKey>sdp.msp.bill.sendtocustomer</i18nKey>
                    <i18nKey>sdp.msp.bill.makeasmain</i18nKey>
                    <i18nKey>sdp.msp.bill.sendtocustomer</i18nKey>
                    <ShowAllAccounts>true</ShowAllAccounts>
                    <StyleClass>formStyle</StyleClass>
                    <Onchange>showbillingReportListView()</Onchange>
                </HeaderAccount>
            </Parameters>
        </Page>
       <Page className="org.apache.jsp.tasks.TaskListGlobleView_jsp">
        <HeaderAccount>
        	<PageFormName>TaskDetailsForm</PageFormName>
	    	<ShowAllAccounts>true</ShowAllAccounts>
	    	<StyleClass>formStyle</StyleClass>
	    	<Onchange>refreshTaskListView(this.value)</Onchange>
	    	<Script>
	    	function refreshTaskListView(val)
			{
				window.location.href="/TaskDetails.cc?persistentAccountId="+val;
			}
            </Script>
        </HeaderAccount>
       </Page>
       <Page className="org.apache.jsp.home.Templates_jsp">
            <HeaderAccount>
                <StyleClass>formStyle</StyleClass>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>refreshAnnouncement()</Onchange>
            </HeaderAccount>
        </Page>

 		<Page className="org.apache.jsp.jsp.ServiceCatalogCustomize_jsp">
            <HeaderAccount>
                <StyleClass>formStyle</StyleClass>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>refreshAnnouncement()</Onchange>
            </HeaderAccount>
        </Page>
        
        <Page className="org.apache.jsp.setup.ConfigureStyle_jsp">
        <HeaderAccount>
            <PageFormName>cssForm</PageFormName>
            <StyleClass>formStyle</StyleClass>
            <ShowAllAccounts>true</ShowAllAccounts>
            <i18nKey>sdp.msp.themes.allaccountsinfo</i18nKey>
            <i18nKey>sdp.msp.themes.copymsg</i18nKey>
            <i18nKey>sdp.msp.themes.saveandcopy</i18nKey>
            <i18nKey>sdp.msp.themes.moreinfo</i18nKey>
            <Onchange>refreshAnnouncement()</Onchange>
            <Script>
                if(__java("CopyForAccounts") == true) {
                    NewWindow("/kbase/AssignToAccount.jsp?pageName=themes&amp;selAcc="+$("__persistentAccountId__select").value, "assignSolution",450,300,"yes","center");
                }
                var infoMessage = jQuery("#CustomColor div:first-child").html();
                infoMessage +="&lt;br&gt;"+ getMessageForKey("sdp.msp.themes.copymsg");
                jQuery("#CustomColor div:first-child")[0].innerHTML=infoMessage;
                jQuery("#CustomColor").append("&lt;div class='ccinfo'&gt;" +getMessageForKey("sdp.msp.themes.moreinfo")+"&lt;/div&gt;");
                if($("__persistentAccountId__select").value!="0"){
                	$("saveandcopy").innerHTML = '&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;label class="btn btn-primary"&gt;&lt;input type="submit" name="saveandcopy" value="'+getMessageForKey("sdp.msp.themes.saveandcopy")+'" style="WIDTH: auto" onClick="saveAndCopyClicked()" title="'+getMessageForKey("sdp.msp.themes.saveandcopy")+'" class="formsubmitbtn-ui1"&gt;&lt;/label&gt;';
                }
                if($("__persistentAccountId__select").value =="0") {
                    jQuery('[name="default"]').click(function() {
                      var retValue = (confirm(getMessageForKey("sdp.msp.themes.allaccountsinfo"))) ? true : false;
                      return retValue;
                    })
                   	jQuery('[name="custom"]').click(function() {
                      var retValue = (confirm(getMessageForKey("sdp.msp.themes.allaccountsinfo"))) ? true : false;
                      return retValue;
                    })
                }
                function saveAndCopyClicked() {
                    document.cssForm.operation.value="applyCustomAndCopyCssSettings";
                }
            </Script>
        </HeaderAccount>
    </Page>

	<Page className="org.apache.jsp.workorder.ImportRequestsWizard2_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
	    <i18nKey>sdp.request.import.name.choose.requester</i18nKey>
	    <i18nKey>sdp.request.import.name.choose.site</i18nKey>
	    <i18nKey>sdp.request.import.name.choose.account</i18nKey>
	    <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>

            <Script>
	       	$("siteElement").appendChild(getMandatorySymbolEle());
		$("accountElement").appendChild(getMandatorySymbolEle());
		$("requesterElement").appendChild(getMandatorySymbolEle());
            </Script>
        </HeaderAccount>
    </Page>

    <!--PM START-->
    <Page className="org.apache.jsp.project.ProjectDetails_jsp">
        <Parameters>
            <!-- This will be called during add new project -->
            <Param Name="submitaction" Value="AddNew" />
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <ShowAllAccounts>true</ShowAllAccounts>
				<DependentElement>document.ProjectForm.SITEID</DependentElement>
				<DependentFunctionCall>get_sites_for_account</DependentFunctionCall>
                <Script>
                    parent.document.getElementById("__persistentAccountId__select").value = __java("WF_ACCOUNTID"); //No i18n
                </Script>
            </HeaderAccount>
        </Parameters>
		 <Parameters>
    		<!-- This will be called during view project details -->
            <Param Name="submitaction" Value="ViewProject" />
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Script>
                    $("__persistentAccountId__select").value = __java("WF_ACCOUNTID"); //No i18n
                    if($("__persistentAccountId__select").value == "" || $("__persistentAccountId__select").value == "0") {
                        var accName = '__java("ProjectAccountName")';
                        jQuery("#__persistentAccountId__select").append("&lt;option value=\"__java("WF_ACCOUNTID")\"&gt;"+accName+'&lt;/option&gt;');
                        jQuery("#ChangeAssoc_Link").remove();
                        $("__persistentAccountId__select").value = __java("WF_ACCOUNTID"); //No i18n
                    }
					autosuggest();
					deptautosuggest();
					function deptautosuggest(callbackFn) {
						try {
							if (callbackFn) {
								deptautoCompleter.options.callback = callbackFn;
							} else {
								deptautoCompleter.options.callback = function (element, entry) {
									return "&amp;" + entry + "&amp;persistentAccountId=" + getAccountId(); //No I18N
								}
							}
						} catch (e) {}
					}
                </Script>
            </HeaderAccount>
        </Parameters>
    </Page>

    <Page className="org.apache.jsp.project.RestrcitProjectDetails_jsp">
        <HeaderAccount>
            <StyleClass>accountStyleDisabled</StyleClass>
            <Disabled>true</Disabled>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Script>
                parent.document.getElementById("__persistentAccountId__select").value = __java("WF_ACCOUNTID"); //No i18n
				function updateSites() {
									var accId = document.HeaderForm.persistentAccountId.value;
									populateAccountSites(accId, document.ProjectForm.SITEID,false,null,document.ProjectForm.SITEID.value,"setInSession=false&amp;persistAccountID=false");
				}
				updateSites();
            </Script>
        </HeaderAccount>
    </Page>

    <Page className="org.apache.jsp.project.MileStoneDetails_jsp">
        <Parameters>
            <!-- This will be called during add new project -->
            <Param Name="submitaction" Value="AddNew" />
            <AccountDisplay>
                <QueryParam>projectid</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="ProjectAccMapping">
                        <Column TableName="ProjectAccMapping" ColumnName="PROJECTID" />
                        <Column TableName="ProjectAccMapping" ColumnName="ACCOUNTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="ProjectAccMapping" ColumnName="PROJECTID" />
                        <Join baseTableName="ProjectAccMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <ShowAllAccounts>true</ShowAllAccounts>
            </HeaderAccount>
        </Parameters>
        <Parameters>
    		<!-- This will be called during view milestone details under project's details view-->
            <Param Name="submitaction" Value="ViewMileStone" />
            <AccountDisplay>
                <QueryParam>projectid</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                    <Table Name="ProjectAccMapping">
                        <Column TableName="ProjectAccMapping" ColumnName="PROJECTID" />
                        <Column TableName="ProjectAccMapping" ColumnName="ACCOUNTID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="ProjectAccMapping" ColumnName="PROJECTID" />
                        <Join baseTableName="ProjectAccMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
                <StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
                <ShowAllAccounts>true</ShowAllAccounts>
            </HeaderAccount>
        </Parameters>
    </Page>

	<Page className="org.apache.jsp.tasks.TaskDetails_jsp">
		<Parameters>
    		<!-- This will be called during view task details under project or milestone's details view-->
            <Param Name="submitaction" Value="viewTask" />
            <AccountDisplay>
                <QueryParam>TASKID</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                        <Table Name="TaskToProjects">
                        <Column TableName="TaskToProjects" ColumnName="TASKID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="TaskToProjects" ColumnName="TASKID" />
                        <Join baseTableName="TaskToProjects" baseTableColumn="PROJECTID" joinTableName="ProjectAccMapping" joinTableColumn="PROJECTID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="ProjectAccMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
		        <StyleClass>accountStyleDisabled</StyleClass>
				<Disabled>true</Disabled>
				<ShowAllAccounts>true</ShowAllAccounts>
			</HeaderAccount>
        </Parameters>
        <Parameters>
    		<!-- This will be called during edit and update task-->
            <Param Name="submitaction" Value="updateTask" />
            <AccountDisplay>
                <QueryParam>TASKID</QueryParam>
                <Attribute>WF_ACCOUNTID</Attribute>
                <Query>
                        <Table Name="TaskToProjects">
                        <Column TableName="TaskToProjects" ColumnName="TASKID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_ID" />
                        <Column TableName="AccountDefinition" ColumnName="ORG_NAME" />
                        <MatchingCriteria TableName="TaskToProjects" ColumnName="TASKID" />
                        <Join baseTableName="TaskToProjects" baseTableColumn="PROJECTID" joinTableName="ProjectAccMapping" joinTableColumn="PROJECTID" joinCondition="INNER_JOIN" />
                        <Join baseTableName="ProjectAccMapping" baseTableColumn="ACCOUNTID" joinTableName="AccountDefinition" joinTableColumn="ORG_ID" joinCondition="INNER_JOIN" />
                    </Table>
                </Query>
                <ResultCheck TableName="AccountDefinition" ColumnName="ORG_NAME" />
            </AccountDisplay>
            <HeaderAccount>
		        <StyleClass>accountStyleDisabled</StyleClass>
				<Disabled>true</Disabled>
				<ShowAllAccounts>true</ShowAllAccounts>
			</HeaderAccount>
        </Parameters>
        <!-- There is no details page from Add new Task as like Milestones from Project/Milestone details views -->
	</Page>
	
	<Page className="org.apache.jsp.asset.AssetListViewForGraph_jsp">
   	<HeaderAccount>
			<StyleClass>accountStyleDisabled</StyleClass>
			<Disabled>true</Disabled>
			<ShowAllAccounts>true</ShowAllAccounts>
		</HeaderAccount>
	</Page>

	<Page className="org.apache.jsp.project.ProjectListView_jsp">
        <!-- Used to set the account combo's onchange, if the account is changed, the projectlistview will be reloaded based on account selected -->
        <Parameters>
       	    <HeaderAccount>
	            <PageFormName>ProjectForm</PageFormName>
	            <ShowAllAccounts>true</ShowAllAccounts>
	            <StyleClass>formStyle</StyleClass>
	        	<Onchange>refreshProjectsListView()</Onchange>
	            <Script>
	            	if(document.getElementById("newTemplate") != null) {
                        document.getElementById("newTemplate").onclick=openNewProjectWindow;
	            	}
				</Script>
	        </HeaderAccount>
		</Parameters>
    </Page>

   	<!-- Add New Project page. Used to set selected account in disabled account combo  -->
	<Page className="org.apache.jsp.project.AddProject_jsp">
   	<HeaderAccount>
			<StyleClass>accountStyleDisabled</StyleClass>
			<Disabled>true</Disabled>
			<ShowAllAccounts>true</ShowAllAccounts>
			<Script>
				autosuggest();
				deptautosuggest();
				function deptautosuggest(callbackFn) {
					try {
						if (callbackFn) {
							deptautoCompleter.options.callback = callbackFn;
						} else {
							deptautoCompleter.options.callback = function (element, entry) {
								return "&amp;" + entry + "&amp;persistentAccountId=" + getAccountId(); //No I18N
							}
						}
					} catch (e) {}
				}
            </Script>
		</HeaderAccount>
	</Page>

    <!-- RECENT UPDATES START-->
    <Page className="org.apache.jsp.project.RecentUpdates_jsp">
        <Parameters>
       	    <HeaderAccount>
	            <ShowAllAccounts>true</ShowAllAccounts>
	            <StyleClass>formStyle</StyleClass>
	        	<Onchange>refreshProjectsRecentUpdatesPage()</Onchange>
	        </HeaderAccount>
		</Parameters>
    </Page>
    <!-- RECENT UPDATES END-->

    <!-- GANTT VIEW START-->
    <Page className="org.apache.jsp.project.GanttView_jsp">
        <Parameters>
       	    <HeaderAccount>
	            <ShowAllAccounts>true</ShowAllAccounts>
	            <StyleClass>formStyle</StyleClass>
	        	<Onchange>refreshProjectsGanttViewPage()</Onchange>
	        </HeaderAccount>
		</Parameters>
    </Page>
    <!-- GANTT VIEW END-->

    <!-- Problem to Change Association project details page START -->
    <Page className="org.apache.jsp.change.FilteredChange_jsp">
	<HeaderAccount>
		<ShowAllAccounts>false</ShowAllAccounts>
		<StyleClass>formStyle</StyleClass>
		<PreSubmitFunction>refreshChangesListView()</PreSubmitFunction>
		<Script>
			function refreshChangesListView()
			{
				var newVal = "&amp;persistentAccountId="+document.HeaderForm.__persistentAccountId__select.value+"&amp;persistAccountID=false";
				var changeTypeValue = document.AssociateChange.TYPE.value;
                if(changeTypeValue.indexOf(":")!=-1) {
                    var res= changeTypeValue.split(":");
                    newVal = newVal+"&amp;FILTERID=" + encodeURIComponent(res[0]) + "&amp;TYPE=" + encodeURIComponent(res[1]) + "&amp;CHANGED=true"; // No I18N
                } else {
                    newVal = newVal+"&amp;FILTERID=" + encodeURIComponent(changeTypeValue) + "&amp;CHANGED=true"; // No I18N
                }
				
				var projectid = document.getElementById('PROJECTID');
				var initiatedBy = document.getElementById('initiatedBy');
				if(projectid != null &amp;&amp; initiatedBy != null)
        		{
        			newVal = newVal + "&amp;PROJECTID=" + projectid.value + "&amp;initiatedBy=" + initiatedBy.value;// No I18N
        		}
				var probCatId = getState(getPortalViewName("ChangesList"),"CATEGORYID");
				if(probCatId != null)
				{
					newVal = newVal + "&amp;CATEGORYID=" + probCatId; // No I18N
				}
				newVal=newVal+"&amp;FROM=Filter";
				updateState(getPortalViewName("ChangesList"),"_D_RP", newVal);
				updateState(getPortalViewName("ChangesList"), "_PN", null);
				refreshSubView(getPortalViewName("ChangesList"));
				setTimeout(function()
				{
    			jQuery("a[target=PreviewFrame]").on('click', function(){
  					jQuery('#PreviewFrameSection').attr('height','400px');
					jQuery('#ChangeFormsectionDiv').css('height',jQuery(window).outerHeight()/2 - 100)//No i18N
		
					});
				}, 1000);
			}
			if(workorderAccountId != mspAccountId)//This is to show all accounts if it is MSP Account's project.
			{
				var	accountCombo=document.getElementById("__persistentAccountId__select");
				for(i=accountCombo.options.length-1;i&gt;=0;i--)
				{
					if((accountCombo.options[i].value!=workorderAccountId)&amp;&amp;(accountCombo.options[i].value!=mspAccountId))
					{
						accountCombo.remove(i);
					}
				}
			}
			document.getElementById("__persistentAccountId__select").value=workorderAccountId;
			refreshChangesListView();
		</Script>
	</HeaderAccount>
	</Page>
    <!-- Problem to Change Association project details page END -->
	
	<!-- Project to Request Association -->
	<Page className="org.apache.jsp.project.SearchProjectRequests_jsp">
	<HeaderAccount>
		<ShowAllAccounts>false</ShowAllAccounts>
		<StyleClass>formStyle</StyleClass>
		<Onchange>refreshProjectRequestsView()</Onchange>
		<Script>
		function refreshProjectRequestsView() 
		{
			var reqTypeVal = document.getElementById("projtypefilter").value;
			var newVal = "&amp;PROJECTID=" +'__java("PROJECTID")'+"&amp;WF_PROJECTREQUEST_ACCOUNTID="+document.HeaderForm.__persistentAccountId__select.value+"&amp;TYPE="+reqTypeVal;
			updateState(getPortalViewName("AssociateNewRequestsProject"),"_D_RP", newVal);
			refreshSubView(getPortalViewName("AssociateNewRequestsProject"));
        }
		var projectAccountId = __java("WF_ACCOUNTID");
		var projectWorkFlowAccountId = projectAccountId;
		if(__java("WF_PROJECTREQUEST_ACCOUNTID") != null)
		{
		projectWorkFlowAccountId=__java("WF_PROJECTREQUEST_ACCOUNTID");
		}
		if(projectAccountId != mspAccountId)//This is to show all accounts if it is MSP Account's project.
		{
			var	accountCombo=document.getElementById("__persistentAccountId__select");
			for(i=accountCombo.options.length-1;i&gt;=0;i--)
			{
				if((accountCombo.options[i].value!=projectAccountId)&amp;&amp;(accountCombo.options[i].value!=mspAccountId))
				{
					accountCombo.remove(i);
				}
			}
		}
		document.getElementById("__persistentAccountId__select").value = projectWorkFlowAccountId;
		</Script>
	</HeaderAccount>
	</Page>
	
	<Page className="org.apache.jsp.workorder.WOAdvancedSearchView_jsp">
	<HeaderAccount>
		<ShowAllAccounts>true</ShowAllAccounts>
		<StyleClass>formStyle</StyleClass>
		<Onchange>refreshAdvSearchView()</Onchange>
		<Script>
			function refreshAdvSearchView() {
			
					var currentUrl = "/WOAdvancedSearch.do?parentView=advancedsearch";
                    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value+"&amp;persistAccountID=true";
                    currentUrl = currentUrl + newVal;
                    window.location.href = currentUrl;
			}
		</Script>
	</HeaderAccount>
	</Page>
	
    <!-- Change to Project Association - Change details page START -->
    <Page className="org.apache.jsp.project.FilteredProject_jsp">
	<HeaderAccount>
		<ShowAllAccounts>false</ShowAllAccounts>
		<StyleClass>formStyle</StyleClass>
		<Onchange>setAccount()</Onchange>
                <DependentElement>document.ProjectForm.SITEID</DependentElement>
                <DependentFunctionCall>get_sites_for_accounts</DependentFunctionCall>
		<PreSubmitFunction>refreshProjectsInAssociationView()</PreSubmitFunction>
		<Script>
			refreshProjectsInAssociationPage_OnLoad();
			function setAccount() {
				document.ProjectForm.persistentAccountId.value = document.getElementById("__persistentAccountId__select").value;
			}
		</Script>
	</HeaderAccount>
	</Page>
    <!-- Change to Project Association - Change details page END -->

	    <!-- Credentials Library page START -->
    <Page className="org.apache.jsp.setup.CredentialsLibraryListView_jsp">
	<HeaderAccount>
		<ShowAllAccounts>true</ShowAllAccounts>
		<StyleClass>formStyle</StyleClass>
		<Onchange>refreshCredentialsView()</Onchange>
		<Script>
			function refreshCredentialsView() {
			
			    var newVal = "&amp;persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                updateState("CredentialsLibraryListView","_D_RP", newVal);
                updateState("CredentialsLibraryListView", "_PN", null);
				refreshSubView("CredentialsLibraryListView");
			}
		</Script>
	</HeaderAccount>
	</Page>
	
    <!-- Credentials Library page END -->

	<!-- MS Project import page START -->
<Page className="org.apache.jsp.project.ImportProject_jsp">
	<HeaderAccount>
		<ShowAllAccounts>false</ShowAllAccounts>
		<Disabled>true</Disabled>
		<Script>
		setAccountId('__java("persistentAccountId")');
		</Script>
	</HeaderAccount>
	</Page>
	<!-- MS Project import page START -->
	
    <!--PM END-->
    
     	<Page className="org.apache.jsp.purchase.PurchaseOrderList_jsp">
	<Parameters>
	<HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
		<i18nKey>sdp.msp.selectAccount.error</i18nKey>
		<Onchange>refreshPurchaseList(this.value)</Onchange>
	</HeaderAccount>
        </Parameters>
	</Page>

	<Page className="org.apache.jsp.purchase.PurchaseHomePage_jsp">
        <Parameters>
        <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <i18nKey>sdp.msp.selectAccount.error</i18nKey>
                <Onchange>refreshPurchaseList(this.value)</Onchange>
        </HeaderAccount>
        </Parameters>
     </Page>

	<Page className="org.apache.jsp.purchase.POGeneral_jsp">
        <Parameters>
            <Param Name="module" Value="newPO" />
            <Param Name="sectionLoad" Value="false" />
        <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <i18nKey>sdp.msp.selectAccount.error</i18nKey>
                <Onchange>refreshPurchaseList(this.value)</Onchange>
        </HeaderAccount>
        </Parameters>
        </Page>

	<Page className="org.apache.jsp.purchase.purchaserequest_jsp">
        <Parameters>
            <Param Name="operation" Value="newPR" />
            <Param Name="sectionLoad" Value="false" />
        <HeaderAccount>
                <ShowAllAccounts>true</ShowAllAccounts>
                <StyleClass>formStyle</StyleClass>
                <i18nKey>sdp.msp.selectAccount.error</i18nKey>
                <Onchange>refreshPurchaseList(this.value)</Onchange>
        </HeaderAccount>
        </Parameters>
        </Page>
        
        
    
	<Page className="org.apache.jsp.setup.AssociateUser_jsp">
        <HeaderAccount>
            <Onchange>refreshAssociateUserView()</Onchange>
            <StyleClass>formStyle</StyleClass>
            <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
            <ShowAllAccounts>false</ShowAllAccounts>
            <Script>
			
			function refreshAssociateUserView()
			{
				jQuery("#orgRoles.associate-users select[name='current_role_type']").select2("val",-1);
				jQuery("#orgRoles.associate-users select[name='current_role_id'] option").each(function() {
				if ( jQuery(this).val() != -1 ) {
					jQuery(this).remove();
					}
				});
				jQuery("#orgRoles.associate-users select[name='current_role_id']").select2("val",-1);
				jQuery("#org-associate-roles").hide();
				jQuery("#org-associated-users").show();
				jQuery("#org-associated-users").empty();
				var $clone = jQuery("#invalid-role-message > div").clone();
				$clone.append(getMessageForKey("sdp.admin.orgrole.invalidrolename"));//No I18N
				jQuery("#org-associated-users").append($clone);
				jQuery(".admin-panel .org-role-menubar.ui-row-act-head").hide();
			}
			</Script>
        </HeaderAccount>
    </Page>
	<Page className="org.apache.jsp.setup.OrgRoles_jsp">
        <HeaderAccount>
            <Onchange>refreshOrgRolesView()</Onchange>
            <StyleClass>formStyle</StyleClass>
            <i18nKey>sdp.admin.requesterImportWiz.selectAccountErrMsg</i18nKey>
            <ShowAllAccounts>false</ShowAllAccounts>
            <Script>
			
			function refreshOrgRolesView()
			{
				var accountId = document.getElementById("__persistentAccountId__select").value;
				var goToUrl = "";
                var currentLocation = document.location.href;
                if(currentLocation.indexOf('?') &gt; 0) {
                var aidIx = currentLocation.indexOf('persistentAccountId=');
                if(aidIx &gt; 0) {
                var firstPart = currentLocation.substring(0, aidIx);
                var secondPartBegin = currentLocation.indexOf(aidIx, '&amp;');
                if(secondPartBegin == -1) {
                secondPartBegin = currentLocation.length;
				if(firstPart.endsWith("&amp;")){
					firstPart = firstPart.slice(0, -1);
				}
                }
                else {
                secondPartBegin++;
                }
                var secondPart = currentLocation.substring(secondPartBegin, currentLocation.length);
                currentLocation = firstPart + secondPart;
                }
                goToUrl = "&amp;persistentAccountId="+accountId;
                }
                else {
                goToUrl = "?persistentAccountId="+accountId;
                }
                document.location.href = currentLocation + encodeURI(goToUrl);
			}
			</Script>
        </HeaderAccount>
    </Page>
	
	<!--Survey Changes Start-->
	<Page className="org.apache.jsp.survey.SurveyListView_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Onchange>refreshSurveyListView()</Onchange>
            <StyleClass>formStyle</StyleClass>
        </HeaderAccount>
    </Page>
	
	<Page className="org.apache.jsp.survey.SurveyReport_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <Onchange>refreshSurveyReportView()</Onchange>
            <StyleClass>formStyle</StyleClass>
		</HeaderAccount>
    </Page>
	<!--Survey Changes end-->
	
	<!-- Problem to Change Association project details page START -->
    <Page className="org.apache.jsp.change.SearchProblems_jsp">
		<HeaderAccount>
			<ShowAllAccounts>false</ShowAllAccounts>
			<StyleClass>formStyle</StyleClass>
			<PreSubmitFunction>refreshProblemsListView()</PreSubmitFunction>
			<Script>
				function refreshProblemsListView()
				{
					var newVal = "&amp;persistentAccountId="+document.HeaderForm.__persistentAccountId__select.value+"&amp;persistAccountID=false";
					var changeId = __java("CHANGEID");
					if(changeId != null)
					{
						newVal = newVal + "&amp;CHANGEID=" + changeId+"&amp;FROM=ChangeFilter";// No I18N
					}
					var categoryId = __java("CATEGORYID");
					var filterType = document.getElementById("filtertype").value;
					newVal = newVal + "&amp;TYPE="+filterType;
					if(filterType == "CATEGORY"){
						newVal = newVal + "&amp;CATEGORYID=" + categoryId; // No I18N
					}
					updateState("AssociateNewProblems","_D_RP", newVal);
					updateState("AssociateNewProblems", "_PN", null);
					refreshSubView("AssociateNewProblems");
				}
				
				if(changeAccountId != mspAccountId)
				{
					var	accountCombo=document.getElementById("__persistentAccountId__select");
					for(i=accountCombo.options.length-1;i&gt;=0;i--)
					{
						if((accountCombo.options[i].value != changeAccountId)&amp;&amp;(accountCombo.options[i].value!=mspAccountId))
						{
							accountCombo.remove(i);
						}
					}
				}
				document.getElementById("__persistentAccountId__select").value=changeAccountId;
				refreshProblemsListView();
			</Script>
		</HeaderAccount>
	</Page>
	<!-- Project to Change Association project details page START -->
	<Page className="org.apache.jsp.change.FilteredChangeFromProject_jsp">
	<HeaderAccount>
		<ShowAllAccounts>false</ShowAllAccounts>
		<StyleClass>formStyle</StyleClass>
		<PreSubmitFunction>refreshChangesListView()</PreSubmitFunction>
		<Script>
			function refreshChangesListView()
			{
				var newVal = "&amp;persistentAccountId="+document.HeaderForm.__persistentAccountId__select.value;
				var changeTypeValue = document.AssociateChange.FILTERID.value;
                if(changeTypeValue.indexOf(":")!=-1) {
                    var res= changeTypeValue.split(":");
                    newVal = newVal+"&amp;FILTERID=" + encodeURIComponent(res[0]) + "&amp;TYPE=" + encodeURIComponent(res[1]) + "&amp;CHANGED=true"; // No I18N
                } else {
                    newVal = newVal+"&amp;FILTERID=" + encodeURIComponent(changeTypeValue) + "&amp;CHANGED=true"; // No I18N
                }
				
				var projectid = document.getElementById('PROJECTID');
				var initiatedBy = document.getElementById('initiatedBy');
        		if(projectid != null &amp;&amp; initiatedBy != null)
        		{
        			newVal = newVal + "&amp;PROJECTID=" + projectid.value + "&amp;initiatedBy=" + initiatedBy.value;// No I18N
        		}
				var probCatId = getState(getPortalViewName("ChangesList"),"CATEGORYID");
				if(probCatId != null)
				{
					newVal = newVal + "&amp;CATEGORYID=" + probCatId; // No I18N
				}
				newVal=newVal+"&amp;FROM=projectChangeAssociation"+"&amp;persistAccountID=false";
				updateState(getPortalViewName("ChangesList"),"_D_RP", newVal);
				updateState(getPortalViewName("ChangesList"), "_PN", null);
				refreshSubView(getPortalViewName("ChangesList"));
			}
			var nonMSPEntity = (workorderAccountId != mspAccountId);
			var	accountCombo=document.getElementById("__persistentAccountId__select");
			for(i=accountCombo.options.length-1;i&gt;=0;i--)
			{
				var accountComboElement = accountCombo.options[i].value;
				
				if(accountComboElement==workorderAccountId)
				{
					document.getElementById("__persistentAccountId__select").value=workorderAccountId;
				}
				else if(nonMSPEntity)//This is to show all accounts if it is MSP Account's project.
				{
					if(accountComboElement!=mspAccountId)
					{
						accountCombo.remove(i);
					}
				}
			}
			refreshChangesListView();
		</Script>
	</HeaderAccount>
	</Page>
	<!-- Project to Change Association project details page END -->

    <!-- DC Dashboard - Starts -->
    <Page className="org.apache.jsp.dc.DCDashBoardPage_jsp">
        <Parameters>
            <HeaderAccount>
                <StyleClass>formStyle</StyleClass>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>__accountChanged()</Onchange>
                <Script>
                    function __accountChanged(){
                        var dcDashboard = document.getElementById('isDcDashboard');
                        if(dcDashboard) {
                            if(!isAllAccountsSelected()) {
                                handleFiles();
                            }
                        } else {
                            var currentUrl = "DashBoard.do?persistentAccountId="+document.HeaderForm.persistentAccountId.value;
                            window.location.href = currentUrl;
                            createCookie('persistentaccountid', document.HeaderForm.persistentAccountId.value);//NO I18N
                        }
                    }
                    function handleAllAccountRestriction() {
                        Array.from(document.querySelectorAll("li.menu-tab[data-viewid^='dcDashboard_']")).forEach(
                            function(element, index, array) {
                                var check = element.querySelector("a");
                                check.addEventListener("click", function(e){
                                if(isAllAccountsSelected()) {
                                    e.stopImmediatePropagation();
                                    alert(getMessageForKey("msp.choose.account"));
                                }
                            });

                            }
                        );
                    }
                    setTimeout(handleAllAccountRestriction, 500);
                </Script>
            </HeaderAccount>
        </Parameters>
    </Page>
    <!-- DC Dashboard - Ends -->
	
	<Page className="org.apache.jsp.loan.LoanDetails_jsp">
        <HeaderAccount>
		<StyleClass>accountStyleDisabled</StyleClass>
                <Disabled>true</Disabled>
            <PageFormName>AssetLoanAction</PageFormName>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.setup.TemplatePreview_jsp">
	<Parameters>
	<HeaderAccount>
                <PageFormName>WorkOrderForm</PageFormName>
                <ShowAllAccounts>true</ShowAllAccounts>
                <Onchange>refreshPage()</Onchange>
                <StyleClass>formStyle</StyleClass>
                <i18nKey>sdp.requests.viewrequest.noworkstation</i18nKey>
                <i18nKey>sdp.msp.request.nosuchrequester.info</i18nKey>
                <i18nKey>sdp.msp.sitechange.msg</i18nKey>
                <PostAjaxFunction>refreshSGT()</PostAjaxFunction>
                <Script>
				var oldAccountId = getAccountIdFromSiteAccountModel();
               var form = document.WorkOrderForm;
               var templateId;
               var module = 'incident_request';
               if('__java("requestServiceId")'!='null'){
               		jQuery('#__persistentAccountId__select').prop('disabled', true);
                    jQuery('#__persistentAccountId__select').removeClass('accountFormStyle');
                    jQuery('#__persistentAccountId__select').addClass('accountStyleDisabled');
                    templateId = '__java("reqTemplate")';
                    module = 'service_request';
               }
               else if(form.reqTemplate){
                    templateId = form.reqTemplate.value;
               }
				
				funtion initMSPScripts(){
				
               var form = document.WorkOrderForm;
              
               var siteBox = form.siteID;
               var serviceCategoryBox = $('SERVICE');
               var templateBox = form.reqTemplate;
               var accountId = getAccountId();
               var rendAcc;
               var rendSite;
               document.getElementById('requesterID').value=-1;
               var prevGrpValue = grpValue;
               var prevTechValue = techValue;
			   var ruleSiteId;
			   var ruleAccountId;
              
               setOnChange('siteID',refreshAccountDataOnSiteChange);

               populateSitesAndCategories_FF(form,templateId);

               var showConDetails = '__java("showContractDetails")';
               //addViewContractDetailsImage(showConDetails);
               autosuggest();
               getRenderedSiteAcc();
               if(typeof emailCCAutoCompleter != &quot;undefined&quot;) {
                    emailCCAutoSuggest(emailCCAutoCompleter);
               }
               if(typeof editorAutoCompleter != &quot;undefined&quot;) {
                    emailCCAutoSuggest(editorAutoCompleter);
               }
				updateRequesterUrl();
				updateSRApprList();
				}
				
               function siteChanged() {
                    //refreshSGTAndCSI(form,templateId);
                    refreshSGT();
                    updateDeliveryString(module,templateId,siteBox.value);
                    getRenderedSiteAcc();
               }

               function emailCCAutoSuggest(ele) {

                    ele.options.callback=function (element,entry){
                    return "&amp;"+entry+"&amp;persistentAccountId="+siteAccountModel[document.WorkOrderForm.siteID.value];
               }
            }

            function refreshPage() {
                var tm = new Date().getTime();
                window.location.href="/WorkOrder.do?woMode=newWO&amp;persistentAccountId="+document.getElementById('__persistentAccountId__select').value+"&amp;tm="+tm;
            }
 			function getRenderedSiteAcc() {
                if(document.WorkOrderForm.siteID.value == null || document.WorkOrderForm.siteID.value == "") {
                    setTimeout("getRenderedSiteAcc()",500);
                }
                else {
                    rendAcc=siteAccountModel[document.WorkOrderForm.siteID.value];
                    rendSite=document.WorkOrderForm.siteID.value;
                }
            }

            function canResetAssets() {
            		if(!document.getElementById("selectedCIs") || jQuery('#selectedCIs').val()==""){
                        // if asset field is not present (Standard license) or asset field is empty
            			return false;
            		}
            		return true;
            		
                    /*if((document.getElementById('workstationID').options == undefined) || ((document.getElementById('workstationID').options != undefined) &amp;&amp; (document.getElementById('workstationID').options[0].innerHTML != getMessageForKey("sdp.requests.viewrequest.noworkstation")))) {
                        return true;
                    }
                    return false;*/
            }

            function canResetApprovers(){

                   var ccUsers = $('ccField');
                   var editors = $('editorField');
                   var approvers = $('selApprs');
                   if(ccUsers &amp;&amp; ccUsers.value!="" || editors &amp;&amp; editors.value!="" || approvers &amp;&amp;approvers.value!=""){
                        return true;
                   }
                   return false;

            }
			function updateApprovers(){
				if(getAccountId() == "0"){
					var newAccountId = getAccountIdFromSiteAccountModel();
					if(newAccountId != oldAccountId){
						updateSRApprList();
						oldAccountId = newAccountId;
					}
				}
			}
  			function refreshAssetsAndApprovers(isUserSearch){

                   if(isUserSearch == undefined || isUserSearch == null){
					isUserSearch = false;
				   }
				   var resetAssets = isUserSearch ? true : canResetAssets();
                   var resetApprovers = canResetApprovers();
                   if(resetAssets &amp;&amp; resetApprovers ){

                        if(isUserSearch || confirm(getMessageForKey('sdp.msp.sitechange.msg'))){

                                updateSelectedCIDropdown(jQuery("#selectedCIs"), 0, [], jQuery('#maxCICount')[0].value);
                                /*if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
                                        clearMSPAssets();
                                }*/
                                clearEditorsAndApprovers();
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }

                   else if(resetAssets){

                        if( isUserSearch || confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
                                updateSelectedCIDropdown(jQuery("#selectedCIs"), 0, [], jQuery('#maxCICount')[0].value);
                                /*if($('workstationID') != null &amp;&amp; $('workstationID').value != 0) {
                                        clearMSPAssets();
                                }*/
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }

                   else if(resetApprovers){

                        if(confirm(getMessageForKey('sdp.msp.sitechange.msg'))){
                                clearEditorsAndApprovers();
                        }
                        else{
                                document.WorkOrderForm.siteID.value= rendSite;
                        }
                   }
				   updateApprovers();
            }
 function refreshAccountDataOnSiteChange(isUserSearch){

                  var siteId=document.WorkOrderForm.siteID.value;
                  var accountId=siteAccountModel[document.WorkOrderForm.siteID.value];
                  ruleSiteId = document.WorkOrderForm.siteID.value;
				  if(rendAcc!=accountId){

                        refreshAssetsAndApprovers(isUserSearch);
						refreshSiteCategories(accountId);
                        refreshSGT();
                        updateRequesterUrl();
                        updateDeliveryString(module,templateId,siteId);
                        refreshServiceCategories(accountId);
						loadFAFRscripts();



                  }
                  rendSite = document.WorkOrderForm.siteID.value;
                  rendAcc = siteAccountModel[document.WorkOrderForm.siteID.value];

            }

            /*This method will be called in two cases
            i)Onchange event on site box
            ii)Selecting a requester using auto suggest*/
            function refreshSiteCategories(accountID) {

                refreshAccountCategories_FF(document.WorkOrderForm,accountID);
            }

            function refreshSGT() {
                var grp = $('GROUPID');
                var tch = $('TECHNICIANID');
                var site = $('siteID');
                var svalue = null;
                if(site) { svalue = site.value; }
                invokeSGTPopulation(site, grp, tch, "0", "0", svalue);
				
                //Fix for Issue ID - ##10122## start..
                    //parent.document.getElementById("siteID").className ="formStyle";
                //Fix for Issue ID - ##10122## end..

                jQuery("#GROUPID").val(prevGrpValue).trigger("change");
				jQuery("#TECHNICIANID").val(prevTechValue).trigger("change");

            }

            var quickReq = '__java("quickReq")';
            if(quickReq=='gotoNew') {
                setTimeout("setAccountAndSite()",500);
            }
function setAccountAndSite() {

                var accountId = __java("accId");
                if(accountId==-1) {
                    accountId=0;
                }
                var siteId = __java("siteID");
                document.getElementById("__persistentAccountId__select").value = accountId;
                jQuery("#__persistentAccountId__select").select2("val", accountId);
                populateAccountSites(accountId, document.getElementById('siteID'),true, null,siteId);
            }

            function showContractDetails(accountId){

                var title = getMessageForKey("sdp.msp.billing.contractusagedetails");
                showURLInDialog('ContractUsage.do?showContractDetails=true&amp;accountId='+accountId,'title='+title);

            }

            function addViewContractDetailsImage(){

                var link=document.getElementById('viewContractDetails').parentNode.removeChild(document.getElementById('viewContractDetails'));
                if(showConDetails=='true'){

                        document.getElementById("siteID").parentNode.appendChild(link);
                }

            }

            </Script>

            </HeaderAccount>
        </Parameters>
	</Page>
	<Page className="org.apache.jsp.jsp.ViewMap_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
            <DependentElement>document.getElementById('account')</DependentElement>
            <Onchange>refreshSiteTechMap()</Onchange>
        </HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.jsp.Customization_jsp">
        <HeaderAccount>
            <ShowAllAccounts>true</ShowAllAccounts>
            <StyleClass>formStyle</StyleClass>
			<Onchange>callMSPLoginCustomization();</Onchange>
		</HeaderAccount>
    </Page>
    <Page className="org.apache.jsp.setup.Users_jsp">
        <Parameters>
            <Param Name="forwardTo" Value="msprequester"/>
                <HeaderAccount>
                    <StyleClass>accountStyleDisabled</StyleClass>
                    <Disabled>true</Disabled>
                    <ShowAllAccounts>true</ShowAllAccounts>
                    <InternalHelpdesk>ONLY</InternalHelpdesk>
			        <Onchange>userList.onMspAccountChange();</Onchange>
                </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="forwardTo" Value="requester"/>
                <HeaderAccount>
                    <StyleClass>formStyle</StyleClass>
                    <ShowAllAccounts>true</ShowAllAccounts>
			        <Onchange>userList.onMspAccountChange();</Onchange>
                </HeaderAccount>
        </Parameters>
        <Parameters>
            <Param Name="forwardTo" Value="technician"/>
                <HeaderAccount>
                    <StyleClass>formStyle</StyleClass>
                    <ShowAllAccounts>true</ShowAllAccounts>
			        <Onchange>userList.onMspAccountChange();</Onchange>
                </HeaderAccount>
        </Parameters>
    </Page>
</AccountBasedPages>
	
